<!DOCTYPE html>
<html lang="zh-CN" dropEffect="none" class="no-js topic-pages">
<head>
<meta charset="utf-8" />

<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="renderer" content="webkit" />
<meta http-equiv="X-ZA-Response-Id" content="001103815e5b69c1">
<meta http-equiv="X-ZA-Experiment" content="default:None">

<title>前端开发 - 话题精华 - 知乎</title>

<meta name="apple-itunes-app" content="app-id=432274380" />


<meta name="description" content="Web 建站技术中，HTML、HTML5、XHTML、CSS、SQL、JavaScript、PHP、ASP.NET、Web Services 是什么？120839个最新问答，点击查看更多>>" />

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta http-equiv="mobile-agent" content="format=html5;url=https://www.zhihu.com/topic/19550901/top-answers">
<meta id="znonce" name="znonce" content="edf2ac5500c640c0b3a7d5b784f0b9c8">



<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-152.87c020b9.png" sizes="152x152">
<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-120.496c913b.png" sizes="120x120">
<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-76.dcf79352.png" sizes="76x76">
<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-60.9911cffb.png" sizes="60x60">


<link rel="shortcut icon" href="https://static.zhihu.com/static/favicon.ico" type="image/x-icon">

<link rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/static/search.xml" title="知乎" />
<link rel="stylesheet" href="https://static.zhihu.com/static/revved/-/css/z.96020364.css">





<!--[if lt IE 9]>
<script src="https://static.zhihu.com/static/components/respond/dest/respond.min.js"></script>
<link href="https://static.zhihu.com/static/components/respond/cross-domain/respond-proxy.html" id="respond-proxy" rel="respond-proxy" />
<link href="/static/components/respond/cross-domain/respond.proxy.gif" id="respond-redirect" rel="respond-redirect" />
<script src="/static/components/respond/cross-domain/respond.proxy.js"></script>
<![endif]-->
<script src="https://static.zhihu.com/static/revved/-/js/instant.14757a4a.js"></script>

<link rel="canonical" href="https://www.zhihu.com/topic/19550901" />

</head>

<body class="zhi ">




<div role="navigation" class="zu-top" data-za-module="TopNavBar">
<div class="zg-wrap modal-shifting clearfix" id="zh-top-inner">
<a href="/" class="zu-top-link-logo" id="zh-top-link-logo" data-za-c="view_home" data-za-a="visit_home" data-za-l="top_navigation_zhihu_logo">知乎</a>

<div class="top-nav-profile">
<a href="/people/liu-yuan-39-9" class="zu-top-nav-userinfo ">
<span class="name">文刀水原</span>
<img class="Avatar" src="https://pic2.zhimg.com/56a9754ca686ba7d3b1e725c6452ccd1_s.png" srcset="https://pic2.zhimg.com/56a9754ca686ba7d3b1e725c6452ccd1_xs.png 2x" alt="文刀水原" />
<span id="zh-top-nav-new-pm" class="zg-noti-number zu-top-nav-pm-count"
style="visibility:hidden" data-count="0">

</span>
</a>
<ul class="top-nav-dropdown" id="top-nav-profile-dropdown">
<li>
<a href="/people/liu-yuan-39-9">
<i class="zg-icon zg-icon-dd-home"></i>我的主页
</a>
</li>

<li>
<a href="/inbox">
<i class="zg-icon zg-icon-dd-pm"></i>私信
<span id="zh-top-nav-pm-count" class="zu-top-nav-pm-count zg-noti-number"
style="visibility:hidden" data-count="0">

</span>
</a>
</li>
<li>
<a href="/settings">
<i class="zg-icon zg-icon-dd-settings"></i>设置
</a>
</li>
<li>
<a href="/logout">
<i class="zg-icon zg-icon-dd-logout"></i>退出
</a>
</li>
</ul>

</div>



<button class="zu-top-add-question" id="zu-top-add-question">提问</button>


<div role="search" id="zh-top-search" class="zu-top-search">
<form method="GET" action="/search" id="zh-top-search-form" class="zu-top-search-form">



<input type="hidden" name="type" value="content">
<label for="q" class="hide-text">知乎搜索</label><input type="text" class="zu-top-search-input" id="q" name="q" autocomplete="off" value="" maxlength="100" placeholder="搜索你感兴趣的内容...">
<button type="submit" class="zu-top-search-button"><span class="hide-text">搜索</span><span class="sprite-global-icon-magnifier-dark"></span></button>
</form>
</div>



<div id="zg-top-nav" class="zu-top-nav">
<ul class="zu-top-nav-ul zg-clear">

<li class="zu-top-nav-li " id="zh-top-nav-home">
<a class="zu-top-nav-link" href="/" id="zh-top-link-home" data-za-c="view_home" data-za-a="visit_home" data-za-l="top_navigation_home">首页</a>
</li>



<li class="top-nav-topic-selector zu-top-nav-li current" id="zh-top-nav-topic">
<a class="zu-top-nav-link" href="/topic" id="top-nav-dd-topic">话题</a>
</li>

<li class="zu-top-nav-li " id="zh-top-nav-explore">
<a class="zu-top-nav-link" href="/explore">发现</a>
</li>

<li class="top-nav-noti zu-top-nav-li ">
<a class="zu-top-nav-link" href="javascript:;" id="zh-top-nav-count-wrap" role="button"><span class="mobi-arrow"></span>消息</a>
</li>



</ul>
<div class="zu-top-nav-live zu-noti7-popup zg-r5px no-hovercard" id="zh-top-nav-live-new" role="popup" tabindex="0">
<div class="zu-top-nav-live-inner zg-r5px">
<div class="zu-top-live-icon">&nbsp;</div>
<div class="zu-home-noti-inner" id="zh-top-nav-live-new-inner">
<div class="zm-noti7-popup-tab-container clearfix" tabindex="0">
<button class="zm-noti7-popup-tab-item message">
<span class="icon">消息</span>
</button>
<button class="zm-noti7-popup-tab-item user">
<span class="icon">用户</span>
</button>
<button class="zm-noti7-popup-tab-item thanks">
<span class="icon">赞同和感谢</span>
</button>
</div>
</div>
<div class="zm-noti7-frame-border top"></div>
<div class="zm-noti7-frame">
<div class="zm-noti7-content message">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<span class="noti-spinner-loading"></span>
</div>
</div>
</div>
</div>
<div class="zm-noti7-content user" style="display:none;">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<span class="noti-spinner-loading"></span>
</div>
</div>
</div>
</div>
<div class="zm-noti7-content thanks" style="display:none;">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<span class="noti-spinner-loading"></span>
</div>
</div>
</div>
</div>
</div>
<div class="zm-noti7-frame-border bottom"></div>
<div class="zm-noti7-popup-footer">
<a href="/notifications" class="zm-noti7-popup-footer-all zg-right">查看全部 &raquo;</a>
<a href="/settings/notification" class="zm-noti7-popup-footer-set" title="通知设置" ><i class="zg-icon zg-icon-settings"></i></a>
</div>
</div>
</div>

</div>

</div>
</div>


<div class="zu-global-notify" id="zh-global-message" style="display:none">
<div class="zg-wrap">
<div class="zu-global-nitify-inner">
<a class="zu-global-notify-close" href="javascript:;" title="关闭" name="close">x</a>
<span class="zu-global-notify-icon"></span>
<span class="zu-global-notify-msg"></span>
</div>
</div>
</div>




<div class="zg-wrap zu-main clearfix "  role="main">
<div class="zu-main-content">
<div class="zu-main-content-inner">


<div itemscope itemtype="https://schema.org/CreativeWork/Topic">
<div class="topic-avatar" itemprop="image" itemscope itemtype="http://schema.org/ImageObject">
<div>
<a class="zm-entry-head-avatar-link" href="/topic/19550901" id="zh-avartar-edit-form">
<img alt="前端开发" src="https://pic1.zhimg.com/v2-8e66233f5558e741bad3a8c50b9566c8_m.jpg" class="zm-avatar-editor-preview"></a>
<meta itemprop="image" content="https://pic1.zhimg.com/v2-8e66233f5558e741bad3a8c50b9566c8_l.jpg" />
</div>

<span class="zm-entry-head-avatar-edit-button">修改</span>

</div>
<div class="topic-info">
<div class="topic-name" id="zh-topic-title">
<h1 class="zm-editable-content" data-disabled="1">前端开发</h1>
<div class="zm-editable-editor-wrap" style="display:none">
<input type="text" class="zm-editable-editor-input zg-form-text-input" style="width:150px" />
<span class="zm-command">
<a href="javascript:;" name="save" class="zg-btn-blue" style="margin:0 15px;">完成</a>
<a href="javascript:;" name="cancel" class="zm-command-cancel">取消</a>
</span>
</div>
</div>
<a href="#" class="meta-item share-button zg-right" name="share"><i class="z-icon-share"></i>分享</a>


<div class="zm-topic-topbar">
<div class="zm-topic-topbar-nav clearfix">


<ul class="zm-topic-topbar-nav-list zg-left clearfix">






<li class="zm-topic-topbar-nav-list-item">
<a class="zg-link-litblue-normal" href="/topic/19550901/hot">动态</a>
</li>





<li class="zm-topic-topbar-nav-list-item current">
<span>精华</span>
</li>





<li class="zm-topic-topbar-nav-list-item">
<a class="zg-link-litblue-normal" href="/topic/19550901/unanswered">等待回答</a>
</li>



</ul>

</div>

</div>
</div>
<div class="zm-topic-list-container" itemprop="hasPart" itemscope itemtype="http://schema.org/ItemList/QuestionList">
<div class="zu-top-feed-list" id="zh-topic-top-page-list">
<meta itemprop="questionCount" content="36909" />
<meta itemprop="topAnswerCount" content="999" />
<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="381" data-type="Answer">
<link itemprop="url" href="/question/35737930/answer/116146170">
<meta itemprop="answer-id" content="41941497" />
<meta itemprop="answer-url-token" content="116146170" />
<meta itemprop="answerCount" content="131" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/35737930" target="_blank" data-id="6501822" data-za-element-name="Title">
为什么一些公司招前端不想要培训班出来的人？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/35737930/answer/116146170">
<!-- <meta itemprop="answer-id" content="41941497">
<meta itemprop="answer-url-token" content="116146170"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>237</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">237</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$feclass"
target="_blank" href="/people/feclass"
>张小河</a></span><span title="海棠学院创始人/微：feclass66" class="bio">
海棠学院创始人/微：feclass66
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="237" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">237</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="6501822" data-action="/answer/content" data-author-name="张小河" data-entry-url="/question/35737930/answer/116146170">

<textarea hidden class="content">不得不承认现在太多培训机构&quot;批量生产&quot;,造成了这个行业涌入了太多不合格的前端er&lt;br&gt;&lt;br&gt;但是我想说：&lt;br&gt;&lt;i&gt;&lt;b&gt;如果大学不是计算机专业怎么办？然后我们就应该自学吗？&lt;br&gt;除了自学和报班，我们这些非计算机专业的学生还有其他通道吗？&lt;/b&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;问题是&lt;br&gt;&lt;b&gt;&lt;i&gt;自学就一定好吗？&lt;br&gt;自学就适合每一个人吗？&lt;/i&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;每个人的经历不一样，如果是对前端很感兴趣想从事前端怎么办？&lt;br&gt;对的，网上一堆堆资料，视频，教程。请问认真看完的有几个？把里面的案例一个一个看完，并且练习一遍的又有几个？&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;而且，自己看资料/视频和坐在培训班教室里学习的本质差别是什么？&lt;/b&gt;&lt;/i&gt;&lt;br&gt;这么一比较，好像培训班还有个老师可以问一下问题。&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;培训班最大的问题是：&lt;/b&gt;&lt;/i&gt;&lt;br&gt;日了dog的师资&lt;br&gt;吹破牛皮的广告&lt;br&gt;不负责任的管理&lt;br&gt;完全追求金钱的哄骗、误导&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;培训机构不是神，其实除了把自己的课程做的好一点，其他的什么都保证不了！&lt;/b&gt;&lt;/i&gt;&lt;br&gt;什么包就业，骗子！&lt;br&gt;什么包学会，骗子！&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;就业不就业看自己的学习的技术！&lt;br&gt;能不能学会多半看自己的努力！&lt;/b&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;培训机构最大的意义&lt;br&gt;&lt;/b&gt;&lt;/i&gt;是提供了体系的课程，和一个学习氛围。别的什么都没有&lt;br&gt;&lt;br&gt;现在好多培训机构为了抢人，各种吹牛，各种虚假承诺。然后学生过来学习，发现什么玩意没学到。好吧，那没学到好的技能，那也得工作啊，毕竟前端这么火对不对？于是开始包装简历，各种项目经验。然后遇到楼上这些技术超棒的面试官，然后被深深的鄙视了一番，跑到知乎上大发牢骚&quot;现在培训班的学生都不靠谱啊~~&quot;，点赞无数~~&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;错不在学生，好吗&lt;/b&gt;&lt;/i&gt;&lt;br&gt;他们也许是真的想学习，也许是被忽悠过去。如果有更好的前端学习/从业途径，我想没人愿意花一两万去报个什么培训班。&lt;br&gt;&lt;br&gt;再说一遍：&lt;br&gt;&lt;i&gt;&lt;b&gt;就业不就业看自己的学习的技术！&lt;br&gt;能不能学会多半看自己的努力！&lt;br&gt;&lt;br&gt;不要迷信培训班！&lt;br&gt;&lt;/b&gt;&lt;/i&gt;&lt;br&gt;&lt;a class=&quot;internal&quot; href=&quot;https://www.zhihu.com/question/30180100/answer/116131544&quot;&gt;怎么学习前端开发？求推荐学习路线？

？ - 张小河的回答&lt;/a&gt;</textarea>


<div class="zh-summary summary clearfix">

不得不承认现在太多培训机构"批量生产",造成了这个行业涌入了太多不合格的前端er 但是我想说： <i><b>如果大学不是计算机专业怎么办？然后我们就应该自学吗？ 除了自学和报班，我们这些非计算机专业的学生还有其他通道吗？</b></i> 问题是 <b><i>自学就一定好吗？ 自学就适合每…</i></b>

<a href="/question/35737930/answer/116146170" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-08-11" target="_blank" href="/question/35737930/answer/116146170">编辑于 2016-08-11</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-6501822"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>36 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="382" data-type="Answer">
<link itemprop="url" href="/question/34952563/answer/60672228">
<meta itemprop="answer-id" content="19680237" />
<meta itemprop="answer-url-token" content="60672228" />
<meta itemprop="answerCount" content="12" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/34952563" target="_blank" data-id="6187615" data-za-element-name="Title">
a 标签为什么能够包含块级元素？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/34952563/answer/60672228">
<!-- <meta itemprop="answer-id" content="19680237">
<meta itemprop="answer-url-token" content="60672228"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>237</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">237</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$justineo"
target="_blank" href="/people/justineo"
>顾轶灵</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/justineo#hilightbadge" target="_blank">CSS、前端开发话题优秀回答者</a></span>



<span title="http://justineo.github.io/" class="bio">
<a href="//link.zhihu.com/?target=http%3A//justineo.gith" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">justineo.gith</span><span class="invisible"></span><i class="icon-external"></i></a>…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="237" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">237</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="6187615" data-action="/answer/content" data-author-name="顾轶灵" data-entry-url="/question/34952563/answer/60672228">

<textarea hidden class="content">这个和 CSS 没关系。而且按新的 HTML 规范，已经不按 inline 和 block 来区分元素类型了。&lt;br&gt;&lt;br&gt;在规范中每个元素会规定如下两项：&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/html/dom.html%23element-dfn-categories&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Categories&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/html/dom.html%23element-dfn-content-model&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Content Model 
&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;Categories 是改元素本身的分类，content model 规定了合法的元素的内容（子元素、文本等）类型。&lt;br&gt;&lt;br&gt;a 元素的 content model 为 &lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/html/text-level-semantics.html%23the-a-elementtransparent&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;transparent&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;br&gt;&lt;blockquote&gt;Some elements are described as transparent; they have &quot;transparent&quot; in the
  description of their content model. The content model of a &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/html/dom.html%23transparent&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;transparent&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; element is
  derived from the content model of its parent element: the elements required in the part of the
  content model that is &quot;transparent&quot; are the same elements as required in the part of the content
  model of the parent of the transparent element in which the transparent element finds itself.&lt;/blockquote&gt;大意就是这类元素本身内部可以有任何类型的内容，是否合法要看其父元素的 content model 和其内容的 categories。&lt;br&gt;&lt;br&gt;比如我们要看 p &amp;gt; ins &amp;gt; a &amp;gt; div 是否合法，过程是这样的：&lt;br&gt;p 元素的 content model 是 phrasing content，ins 本身属于 phrasing content 故可以嵌套；&lt;br&gt;ins 元素的 content model 是 transparent，故在此时里面是否能有 a 需检查 p &amp;gt; a 的合法性；&lt;br&gt;a 元素也属于 phrasing content，故 p &amp;gt; ins &amp;gt; a 合法；&lt;br&gt;a 元素的 content model 也是 transparent，故此时里面包含 div 的合法性向上传递，检查 ins &amp;gt; div 又向上传递，变成检查 p &amp;gt; div；&lt;br&gt;div 不属于 phrasing content，所以这个嵌套是不合法的。</textarea>


<div class="zh-summary summary clearfix">

这个和 CSS 没关系。而且按新的 HTML 规范，已经不按 inline 和 block 来区分元素类型了。 在规范中每个元素会规定如下两项： <a href="//link.zhihu.com/?target=http%3A//www.w3.org/TR/html/dom.html%23element-dfn-categories" class=" wrap external" target="_blank" rel="nofollow noreferrer">Categories <i class="icon-external"></i></a><a class=" wrap external" href="//link.zhihu.com/?target=http%3A//www.w3.org/TR/html/dom.html%23element-dfn-content-model" target="_blank" rel="nofollow noreferrer">Content Model 
<i class="icon-external"></i></a>Categories 是改元素本身的分类，content model 规定了合法的元素的内容（子元素、文本等）类型。 a …

<a href="/question/34952563/answer/60672228" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-08-25" target="_blank" href="/question/34952563/answer/60672228">编辑于 2015-08-25</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-6187615"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>22 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="383" data-type="Answer">
<link itemprop="url" href="/question/37011441/answer/71639106">
<meta itemprop="answer-id" content="24076975" />
<meta itemprop="answer-url-token" content="71639106" />
<meta itemprop="answerCount" content="9" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/37011441" target="_blank" data-id="7011538" data-za-element-name="Title">
如何学习前端模块化知识？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/37011441/answer/71639106">
<!-- <meta itemprop="answer-id" content="24076975">
<meta itemprop="answer-url-token" content="71639106"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>235</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">235</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$huxpro"
target="_blank" href="/people/huxpro"
>黄玄</a></span><span title="伪前端工程师" class="bio">
伪前端工程师
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="235" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">235</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="7011538" data-action="/answer/content" data-author-name="黄玄" data-entry-url="/question/37011441/answer/71639106">

<textarea hidden class="content">新补充 CSS 篇：都 2015 年了，CSS 怎么还是这么糟糕 －&lt;b&gt;《&lt;a href=&quot;//link.zhihu.com/?target=http%3A//huangxuan.me/css-sucks-2015/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Still Sucks 2015&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;》&lt;/b&gt;&lt;br&gt;&lt;br&gt;---------------------&lt;br&gt;&lt;br&gt;谢  &lt;a data-hash=&quot;5f4db1fe59d4b6137bf97985413fd6dc&quot; href=&quot;//www.zhihu.com/people/5f4db1fe59d4b6137bf97985413fd6dc&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@苏墨橘&quot; data-tip=&quot;p$b$5f4db1fe59d4b6137bf97985413fd6dc&quot; data-hovercard=&quot;p$b$5f4db1fe59d4b6137bf97985413fd6dc&quot;&gt;@苏墨橘&lt;/a&gt; 邀，这题大概的确适合我答……&lt;br&gt;&lt;br&gt;放眼望去……又是 AMD/Require.js/Sea.js，又是 CommonJS/Browserify/Webpack，还有 ES6/Babel，题主是不是一下就晕了？&lt;br&gt;&lt;br&gt;想知道它们都是什么？&lt;br&gt;想知道 JavaScript 模块的实现原理？&lt;br&gt;想知道 JavaScript 模块化的历史、发展历程与未来？&lt;br&gt;&lt;br&gt;&lt;b&gt;JavaScript 模块化七日谈 -《&lt;a href=&quot;//link.zhihu.com/?target=http%3A//huangxuan.me/js-module-7day/%23/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaScript Modularization Journey&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;》，这是我之前做分享的 Slides，送给你：&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;第一日 上古时期 &lt;b&gt;&lt;em&gt;Module?&lt;/em&gt;&lt;/b&gt; 从设计模式说起&lt;/li&gt;&lt;li&gt;第二日 石器时代  &lt;em&gt;&lt;b&gt;Script Loader&lt;/b&gt;&lt;/em&gt;  只有封装性可不够，我们还需要加载&lt;/li&gt;&lt;li&gt;第三日 蒸汽朋克  &lt;em&gt;&lt;b&gt;Module Loader&lt;/b&gt;&lt;/em&gt;  模块化架构的工业革命&lt;/li&gt;&lt;li&gt;第四日 号角吹响  &lt;em&gt;&lt;b&gt;CommonJS&lt;/b&gt;&lt;/em&gt;  征服世界的第一步是跳出浏览器&lt;/li&gt;&lt;li&gt;第五日 双塔奇兵  &lt;em&gt;&lt;b&gt;AMD/CMD&lt;/b&gt;&lt;/em&gt;  浏览器环境模块化方案&lt;/li&gt;&lt;li&gt;第六日 精灵宝钻  &lt;em&gt;&lt;b&gt;Browserify/Webpack&lt;/b&gt;&lt;/em&gt;  大势所趋，去掉这层包裹！&lt;/li&gt;&lt;li&gt;第七日 王者归来  &lt;em&gt;&lt;b&gt;ES6 Module&lt;/b&gt;&lt;/em&gt;  最后的战役&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;上次这个 Slides 在微博上分享出来，出乎意料引起不少转发，感谢  &lt;a data-hash=&quot;0d9b98af12015c94cff646a6fc0773b5&quot; href=&quot;//www.zhihu.com/people/0d9b98af12015c94cff646a6fc0773b5&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@寸志&quot; data-tip=&quot;p$b$0d9b98af12015c94cff646a6fc0773b5&quot; data-hovercard=&quot;p$b$0d9b98af12015c94cff646a6fc0773b5&quot;&gt;@寸志&lt;/a&gt; 赞美为 “前端模块化白皮书”。&lt;br&gt;&lt;br&gt;由于最近越来越多的使用 Webpack，所以这次分享出来，我特别新增了大量 Webpack 的内容（包括 Loaders/Hot Reload Plugin/Code Splitting 及一些学习资源），并且加上了 &lt;a data-hash=&quot;cfdec6226ece879d2571fbc274372e9f&quot; href=&quot;//www.zhihu.com/people/cfdec6226ece879d2571fbc274372e9f&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@尤雨溪&quot; data-tip=&quot;p$b$cfdec6226ece879d2571fbc274372e9f&quot; data-hovercard=&quot;p$b$cfdec6226ece879d2571fbc274372e9f&quot;&gt;@尤雨溪&lt;/a&gt; 大大提醒的 Browserify + babelify 与 Webpack + babel-loader &lt;br&gt;&lt;br&gt;这个 Web Slides 开源在&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/Huxpro/js-module-7day&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我的 Github 上&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，欢迎你帮助我完善这个展示文稿，你可以给我提 issue，可以 fork &amp;amp; pull request。如果它能帮助到你了，希望你还能不吝啬 star 一下这个项目&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/bd5befa7e1d9c8431d53cff31098f6c4_b.png&quot; data-rawwidth=&quot;504&quot; data-rawheight=&quot;504&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;504&quot; data-original=&quot;https://pic1.zhimg.com/bd5befa7e1d9c8431d53cff31098f6c4_r.png&quot;&gt;你也可以通过扫码在手机上观看 ;)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/473ad8870f2390e9f50055626ad2676d_b.png&quot; data-rawwidth=&quot;440&quot; data-rawheight=&quot;440&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;440&quot; data-original=&quot;https://pic2.zhimg.com/473ad8870f2390e9f50055626ad2676d_r.png&quot;&gt;以上</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic1.zhimg.com/bd5befa7e1d9c8431d53cff31098f6c4_200x112.png" data-rawwidth="504" data-rawheight="504" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic1.zhimg.com/bd5befa7e1d9c8431d53cff31098f6c4_r.png">
新补充 CSS 篇：都 2015 年了，CSS 怎么还是这么糟糕 －<b>《<a href="//link.zhihu.com/?target=http%3A//huangxuan.me/css-sucks-2015/" class=" wrap external" target="_blank" rel="nofollow noreferrer">CSS Still Sucks 2015<i class="icon-external"></i></a>》</b> --------------------- 谢 <a data-hash="5f4db1fe59d4b6137bf97985413fd6dc" href="//www.zhihu.com/people/5f4db1fe59d4b6137bf97985413fd6dc" class="member_mention" data-editable="true" data-title="@苏墨橘" data-tip="p$b$5f4db1fe59d4b6137bf97985413fd6dc" data-hovercard="p$b$5f4db1fe59d4b6137bf97985413fd6dc">@苏墨橘</a> 邀，这题大概的确适合我答…… 放眼望去……又是 AMD/Require.js/Sea.js，又是 CommonJS/Browserify/Webpack，还有 ES6/Babel，题主是不…

<a href="/question/37011441/answer/71639106" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-11-10" target="_blank" href="/question/37011441/answer/71639106">编辑于 2016-02-10</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-7011538"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>15 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="384" data-type="Answer">
<link itemprop="url" href="/question/38248538/answer/76270424">
<meta itemprop="answer-id" content="25932854" />
<meta itemprop="answer-url-token" content="76270424" />
<meta itemprop="answerCount" content="48" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/38248538" target="_blank" data-id="7506682" data-za-element-name="Title">
2016 年前端开发领域有什么趋势值得关注？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/38248538/answer/76270424">
<!-- <meta itemprop="answer-id" content="25932854">
<meta itemprop="answer-url-token" content="76270424"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>234</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">234</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$otakustay"
target="_blank" href="/people/otakustay"
>张立理</a></span><span title="Web前端工程师" class="bio">
Web前端工程师
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="234" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">234</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="7506682" data-action="/answer/content" data-author-name="张立理" data-entry-url="/question/38248538/answer/76270424">

<textarea hidden class="content">无需谈具体的框架、技术、工具，有很多好的理念确实是有这些工具框架引出的，但是最重要的依旧是这些理念，我列个10条我认为核心的发展趋势&lt;br&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;ES正在变为一个Living standard，以后我们谈论这个语言将不会再说版本号，而是谈各个feature的使用&lt;/li&gt;&lt;li&gt;以模块而非文件为核心的设计和构建，程序、非程序资源均抽象成模块&lt;/li&gt;&lt;li&gt;数据在实现中趋向Immutable，对数据的所有者和读写控制变得更为严格&lt;/li&gt;&lt;li&gt;ES语言在实践上逐渐采纳静态类型的理念，各种被滥用的动态性将慢慢进入不推荐的范畴&lt;/li&gt;&lt;li&gt;数据为抽象和组件为抽象的两种体系继续争斗，直到再出来一个新事物完成两者的大一统&lt;/li&gt;&lt;li&gt;前端掌控中间件的系统分层模式开始推广和流行，让前端在网络和协议层面上拥有更多的控制力和创新发挥空间&lt;/li&gt;&lt;li&gt;开始探索基于HTTP/2的构建实践和原则，一年的时间大约勉强够推出一些所谓的最佳实践，是不是经得住时间的考验就未知了&lt;/li&gt;&lt;li&gt;以flex为首的新的CSS布局模式开始被接受并实际推广应用，grid layout将走上台面，伴随着一堆科普文和《Grid与Table的异同之我见》之流被各种玩坏&lt;/li&gt;&lt;li&gt;全站HTTPS化终于成为主流的追求，但追求和实现之间依旧距离遥远&lt;/li&gt;&lt;li&gt;前端对部署和运维将更为关注，全站CDN等都将被作为系统设计的一部分纳入考虑&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;当然依旧会有很多难题我并不看好能在2016解决，仅个人观点：&lt;br&gt;&lt;ol&gt;&lt;li&gt;WYSIWYG编辑器依旧是一个世纪难题，产品丰富的创意与前端复杂的实现的矛盾不可调和&lt;/li&gt;&lt;li&gt;复杂文件上传依旧不会有很好的解决方案，配合对特写格式文件的预处理（如图片裁切压缩）更加艰难&lt;/li&gt;&lt;li&gt;因为manifest被浏览器实现玩坏而导致各种私自实现客户端缓存（如利用localStorage）依旧遍地开花不可收拾&lt;/li&gt;&lt;li&gt;对性能的追求被过分解读和歪曲，半桶水们不切实际地堆积各种最佳实践却不以数据为基点认真探索自己的系统是否真有性能问题，问题结点何在&lt;/li&gt;&lt;li&gt;性能上延迟与FPS被过分看重，而内存消耗被过分轻视&lt;/li&gt;&lt;li&gt;函数式被过分推崇，依旧是半桶水们的锅&lt;/li&gt;&lt;li&gt;Web Components并不被看好在2016能有质的突破和推广&lt;/li&gt;&lt;li&gt;基于前端技术的跨平台跨终端解决方案将倒下一大批，很有可能里面就有Reactive Native的尸体&lt;/li&gt;&lt;li&gt;CSS的整体解决方案和复用、扩展、可维护性设计始终没有被重视&lt;/li&gt;&lt;li&gt;前端人才依旧呈两极分化的趋势，新手和高端都逐渐饱和，中间真正能干活能干好活的非常紧缺&lt;/li&gt;&lt;/ol&gt;</textarea>


<div class="zh-summary summary clearfix">

无需谈具体的框架、技术、工具，有很多好的理念确实是有这些工具框架引出的，但是最重要的依旧是这些理念，我列个10条我认为核心的发展趋势 ES正在变为一个Living standard，以后我们谈论这个语言将不会再说版本号，而是谈各个feature的使用以模块而非文件…

<a href="/question/38248538/answer/76270424" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/38248538/answer/76270424">发布于 2015-12-11</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-7506682"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>26 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="385" data-type="Answer">
<link itemprop="url" href="/question/21060448/answer/129210892">
<meta itemprop="answer-id" content="47196768" />
<meta itemprop="answer-url-token" content="129210892" />
<meta itemprop="answerCount" content="32" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/21060448" target="_blank" data-id="604766" data-za-element-name="Title">
前端工程师面试时被问到为什么要做前端时，怎么回答比较合理？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/21060448/answer/129210892">
<!-- <meta itemprop="answer-id" content="47196768">
<meta itemprop="answer-url-token" content="129210892"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>234</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">234</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$excited-vczh"
target="_blank" href="/people/excited-vczh"
>vczh</a></span><span title="专业造轮子，拉黑抢前排。gaclib.net" class="bio">
专业造轮子，拉黑抢前排。…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="234" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">234</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="604766" data-action="/answer/content" data-author-name="vczh" data-entry-url="/question/21060448/answer/129210892">

<textarea hidden class="content">“因为没有女朋友，总要找些事情来填补下班的空虚。”</textarea>


<div class="zh-summary summary clearfix">

“因为没有女朋友，总要找些事情来填补下班的空虚。”

<a href="/question/21060448/answer/129210892" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/21060448/answer/129210892">发布于 2016-10-31</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-604766"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>59 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="386" data-type="Answer">
<link itemprop="url" href="/question/20797118/answer/63480740">
<meta itemprop="answer-id" content="20806762" />
<meta itemprop="answer-url-token" content="63480740" />
<meta itemprop="answerCount" content="19" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/20797118" target="_blank" data-id="499295" data-za-element-name="Title">
网页头部的声明应该是用 lang=&quot;zh&quot; 还是 lang=&quot;zh-cn&quot;？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/20797118/answer/63480740">
<!-- <meta itemprop="answer-id" content="20806762">
<meta itemprop="answer-url-token" content="63480740"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>233</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">233</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$franciszhao"
target="_blank" href="/people/franciszhao"
>猎奇怪蜀黍</a></span><span title="本质骑士认证" class="bio">
本质骑士认证
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="233" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">233</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="499295" data-action="/answer/content" data-author-name="猎奇怪蜀黍" data-entry-url="/question/20797118/answer/63480740">

<textarea hidden class="content">zh 是中文，代表的是宏语言（Macrolanguage），zh 单独用表示中文整体，可以是方言、文言文、简繁体等混合内容，毕竟大陆地区大部分人都能认识不少繁体字，台湾地区大部分人也能认识很多简体字。理论上 zh-CN 表示的是中国大陆中文，包含方言和简繁体，但默认指简体普通话，局限性就体现出来了，没法表达繁体普通话，这时为了精准性，应该用独立语种替换，包括但不仅限于普通话和七大方言：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;cmn 普通话（官话、国语）
wuu 吴语（江浙话、上海话）、czh 徽语（徽州话、严州话、吴语-徽严片）
hak 客家语
yue 粤语（广东话）
nan 闽南语（福建话、台语）、cpx 莆仙话（莆田话、兴化语）、cdo 闽东语、mnp 闽北语、zco 闽中语
gan 赣语（江西话）
hsn 湘语（湖南话）
cjy 晋语（山西话、陕北话）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;语言文字标签书写顺序：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;language-extlang-script-region-variant-extension-privateuse
语言文字种类-扩展语言文字种类-书写格式-国家和地区-变体-扩展-私有
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;语言文字标签示例：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;language:
fr 法语
es 西班牙语

language-extlang 或 language:
zh-lzh 或 lzh 中文 (文言文)
sgn-csl 或 csl 手语 (中国大陆)

language-region:
zh-CN 中文 (简体, 中国大陆)
en-US 英语 (美国)

language-script:
cmn-Hans 普通话 (简体)
yue-Hant 粤语 (繁体)

language-script-region：
cmn-Hans-CN 普通话 (简体, 中国大陆)
cmn-Hant-TW 普通话 (繁体, 台湾)

language-script-variant:
zh-Latn-pinyin 汉语拼音（例：nǐ，拉丁字母形式）
zh-Bopo-pinyin 注音拼音（例：ㄋ丨ˇ，罗马字形式，中国大陆1958年以前使用，台湾目前使用）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;附注：&lt;br&gt;&lt;ol&gt;&lt;li&gt;以下所有 zh 开头写法已于 2009 年废弃，&lt;b&gt;不推荐使用&lt;/b&gt;，请直接去掉 zh- 前缀并使用 cmn、wuu、yue、gan 等 (上述标记已由 2005 年的 extlang 升级到 2009 年的 language，维基百科吴、粤、赣等语言版本均已使用最新的标准写法) 代替即可：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;zh-Hans, zh-Hans-CN, zh-cmn, zh-cmn-Hans, zh-cmn-Hant, zh-wuu, zh-yue, zh-gan
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;废弃可能原因：在语言学的分类上，中国语言学者多认为吴语、粤语、闽语等是汉语的方言，而西方学者多认为这些语言是一门和汉语同级关系的单独语种。&lt;img data-rawheight=&quot;800&quot; data-rawwidth=&quot;600&quot; src=&quot;https://pic3.zhimg.com/61624e335fdad92f2db932ece67288ca_b.jpg&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic3.zhimg.com/61624e335fdad92f2db932ece67288ca_r.jpg&quot;&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;以下两种写法均正确，后者描述更精准，但目前浏览器和操作系统都只支持前者，使用新标准可能会造成无法匹配浏览器用户定义字体、网页翻译、程序语言自动切换等功能，前端和码农为了兼容性推荐使用前者：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;zh-CN 中文 (简体, 中国大陆) 对应 cmn-Hans-CN 普通话 (简体, 中国大陆)
zh-SG 中文 (简体, 新加坡)   对应 cmn-Hans-SG 普通话 (简体, 新加坡)
zh-HK 中文 (繁体, 香港)     对应 cmn-Hant-HK 普通话 (繁体, 香港)
zh-MO 中文 (繁体, 澳门)     对应 cmn-Hant-MO 普通话 (繁体, 澳门)
zh-TW 中文 (繁体, 台湾)     对应 cmn-Hant-TW 普通话 (繁体, 台湾)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;同是简体中文页面， 默认或书面语均标记为 cmn 普通话，全文使用地方方言表达时，使用相应语言文字标签标记，例：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;“你” “我们” 用 cmn-Hans 普通话 (简体)
“侬” “啊啦” 用 wuu-Hans 吴语 (简体)
“你” “我哋” 用 yue-Hans 粤语 (简体)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;一般情况不用 region 选项，但如果要针对特定地区特定用语的友好性，则应设置区域，例 ：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;“消息” “黄梨” “自行车” 用 cmn-Hans-SG 普通话 (简体, 新加坡)
“消息” “菠萝” “自行车” 用 cmn-Hans-CN 普通话 (简体, 中国大陆)
“消息” “菠蘿” “自行車” 用 cmn-Hant-CN 普通话 (繁体, 中国大陆)
“訊息” “菠蘿” “单车”   用 cmn-Hant-HK 普通话 (繁体, 香港)
“訊息” “鳳梨” “腳踏車” 用 cmn-Hant-TW 普通话 (繁体, 台湾)

“analyse” “color” “elevator” 用 en-US 英语 (美国)
“analyze” “colour” “lift”    用 en-GB 英语 (英国)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;参考：&lt;br&gt;&lt;ol&gt;&lt;li&gt;W3C &lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/International/articles/language-tags/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Language tags in HTML and XML&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;IETF &lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//tools.ietf.org/html/bcp47&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;BCP 47 - Tags for Identifying Languages&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;IANA &lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//www.iana.org/assignments/language-subtag-registry/language-subtag-registry&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Language Subtag Registry&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;转载请私信。&lt;/li&gt;&lt;/ol&gt;</textarea>


<div class="zh-summary summary clearfix">

zh 是中文，代表的是宏语言（Macrolanguage），zh 单独用表示中文整体，可以是方言、文言文、简繁体等混合内容，毕竟大陆地区大部分人都能认识不少繁体字，台湾地区大部分人也能认识很多简体字。理论上 zh-CN 表示的是中国大陆中文，包含方言和简繁体，但默…

<a href="/question/20797118/answer/63480740" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-09-13" target="_blank" href="/question/20797118/answer/63480740">编辑于 2016-05-20</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-499295"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>16 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="387" data-type="Answer">
<link itemprop="url" href="/question/20293486/answer/22932246">
<meta itemprop="answer-id" content="4385059" />
<meta itemprop="answer-url-token" content="22932246" />
<meta itemprop="answerCount" content="13" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/20293486" target="_blank" data-id="297657" data-za-element-name="Title">
A &amp;&amp; B || C 的效率比 A ? B : C 更高吗？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/20293486/answer/22932246">
<!-- <meta itemprop="answer-id" content="4385059">
<meta itemprop="answer-url-token" content="22932246"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>233</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">233</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$xiao-jing-mo"
target="_blank" href="/people/xiao-jing-mo"
>萧井陌</a></span><span title="微信公众号：炼瓜研究所 技术社区 http://cocode.cc" class="bio">
微信公众号：炼瓜研究所 技术社区 …
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="233" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">233</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="297657" data-action="/answer/content" data-author-name="萧井陌" data-entry-url="/question/20293486/answer/22932246">

<textarea hidden class="content">update:&lt;br&gt;刚看完霍比特人预告片2回来, 看到许多评论的我眼泪掉下来, 并陷入了深深的沉思.&lt;br&gt;之前看过多次预告片2的预告短片, 我对女护卫队长毫无感觉, 觉得毫无亮点, 但是当她出现在屏幕上的那一瞬间, 我发觉我已经深深地爱上了她, 刹那间脑中浮现的就只有那天夕阳下的奔跑.....&lt;br&gt;要知道我看的是最烂的偏振3D, 要是看UltraAVX HFR我不知道我会不会一口老血溅当场&lt;br&gt;通过今晚的观影经验, 我得出一个定理, 不要过早做出武断的结论啊....&lt;br&gt;&lt;br&gt;&lt;br&gt;对了上面那个结论是对你说的&lt;a data-hash=&quot;22315c2a7c0fb149fe446c1855f4554d&quot; href=&quot;//www.zhihu.com/people/22315c2a7c0fb149fe446c1855f4554d&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@Qin Wei&quot; data-tip=&quot;p$b$22315c2a7c0fb149fe446c1855f4554d&quot; data-hovercard=&quot;p$b$22315c2a7c0fb149fe446c1855f4554d&quot;&gt;@Qin Wei&lt;/a&gt;, 我无意与你争长短, 但是我觉得你说得不对, 我怕当年的我受你误导, 所以在这里说一下:&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;做题和实战不同没什么问题，　&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;我没说做题和实战不同有问题, 我相信我表达的意思是&quot;这类问题&quot;贻害人间.&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;blockquote&gt;教科书上也没让你那么写代码。　&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;我不认为, 写在教材上花时间让你搞的东西是&quot;没让你那么写代码&quot;, 它有标注&quot;&lt;u&gt;&lt;b&gt;同学们, 这是反例, 引以为鉴呐, 这么写是要扣分的呀&lt;/b&gt;&lt;/u&gt;&quot;吗? 退99.9%步, 不论教材意欲何为, 至少它造成了这样的后果, 这种现象就值得批驳. 而且面对黑风双煞我觉得武林中正派人士不必讲什么江湖道义, 后退都是多余的&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;起手两招名曰偷换概念, 也叫&lt;b&gt;&lt;u&gt;稻草人谬误&lt;/u&gt;&lt;/b&gt;, 出自史记&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;那些看上变态的考题不过是为了加深对概念的理解。　&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;我不认为, 那种考题是为了加深对概念的理解, 因为我小时候看过一则故事叫三重楼喻&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;续招唤作&lt;b&gt;&lt;u&gt;转移话题其疾如风&lt;/u&gt;&lt;/b&gt;, 孙子兵法有载&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;要从实用上考虑课本上９９％的题都无法直接影射到实践中去那么是不是要说习题都无用呢。　&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;我没说课本和实践无法直接影射, 我说的是教材教了很多错误的思想, 我也没说习题勿用, 我说黑风双煞害人&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;大招揉杂了以偏概全和转移话题两招, 端的凌厉了得&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;篮球运动员要推胸这样的基础练习，　而在赛场上没有杠铃让你去推那是否能说练习卧推也无用呢。&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;呃...如果不是我由于深度沉浸在队长的倩影中导致记忆紊乱, 球员力量训练应该是卧推, 推胸什么的, 感觉好黄好暴力, 好像是100分前夜的消遣...不知道是不是我想多了....  卧推是科学且标准的力量训练方法, 如果你非要用这个类比, 应该是等到我说了&quot;实践中也不要你手写数据结构和算法所以学数据结构和算法是无用的&quot;这种话之后的事情.... 我觉得篮球里面能和黑风双煞类比的应该是掐腰子, 伸黑脚, 推后背.  无论如何, 错误的东西也不可能是基础知识的组成部分, 对吧?&lt;/li&gt;&lt;/ul&gt;&lt;i&gt;最后一击以转移话题以偏概全偷换概念做超必杀, 显然是跑江湖的老手所为. 若不是这个姓曲多读了几本书, 怕是早已命丧当场&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;再说这回答离题也太远了吧　居然１００多个赞&lt;/blockquote&gt;&lt;i&gt;我不觉得针对这样一个简单疑问句的问题用&quot;YES&quot; or &quot;NO&quot;来作答是更近的答案&lt;br&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;最后向 &lt;a data-hash=&quot;22315c2a7c0fb149fe446c1855f4554d&quot; href=&quot;//www.zhihu.com/people/22315c2a7c0fb149fe446c1855f4554d&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@Qin Wei&quot; data-tip=&quot;p$t$22315c2a7c0fb149fe446c1855f4554d&quot; data-hovercard=&quot;p$b$22315c2a7c0fb149fe446c1855f4554d&quot;&gt;@Qin Wei&lt;/a&gt; 你也是向大家推荐一本书 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//book.douban.com/subject/1504957/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;学会提问 (豆瓣)&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;, 可助你有效抓住问题本质, 避免逻辑谬误, 有病治病没病防身, 男可滋阴壮阳女可益气养颜, 少年朋友看了可以一夜会连点七个赞, 老年朋友看了反对也有力了, 没有帮助也更勤奋了, 一口气几十个反对+举报也不会费劲了. 一本书你看不来吃亏, 一本书你也看不了上当....&lt;br&gt;&lt;br&gt;最后的最后有人问黑风双煞是谁, ref如下:&lt;br&gt;&lt;a href=&quot;http://www.zhihu.com/question/22793863/answer/22686351&quot; class=&quot;internal&quot;&gt;谭浩强在程序员圈子里的口碑如何？为什么？&lt;/a&gt;&lt;br&gt;&lt;br&gt;+++++++&lt;br&gt;&lt;br&gt;这是一个老问题了, 不过戳到了我的不爽点....&lt;br&gt;&lt;br&gt;这是一个教育缺陷, 即专业程序员和业界的共识与学校教育严重不相符&lt;br&gt;学校教书, 喜欢扯一些茴香豆问题来试图难倒你&lt;br&gt;学校和老师在乎的, 是能不能用茴香豆树立权威碾压你&lt;br&gt;比如&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+++++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//a是几&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//a是几&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//心虚的我决定申明一下上面的代码是黑风双煞的手笔&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//我是万万不敢不加空格不加括号乱取名字滥用异形代码的&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;又比如&lt;br&gt;&lt;ul&gt;&lt;li&gt;不打括号让你猜运算符优先级表&lt;br&gt;&lt;/li&gt;&lt;li&gt;告诉你多写x行代码绕个大圈子可以获得更高的效率&lt;br&gt;&lt;/li&gt;&lt;li&gt;告诉你用一个复杂的逻辑可以把代码缩成一行&lt;/li&gt;&lt;li&gt;所谓位优化&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;然后深受劣质学校洗脑长大的程序员, 把所谓私藏经验扩散到网络,  遗毒无穷&lt;br&gt;&lt;br&gt;&lt;br&gt;事实是&lt;br&gt;&lt;ol&gt;&lt;li&gt;程序是写给人看的&lt;/li&gt;&lt;li&gt;99.9%的程序都无关效率&lt;/li&gt;&lt;li&gt;剩下的0.1%的需要追求程序中, 瞎写的所谓优化也99.9%不会是性能热点&lt;/li&gt;&lt;li&gt;程序是写给人看的&lt;/li&gt;&lt;/ol&gt;</textarea>


<div class="zh-summary summary clearfix">

update: 刚看完霍比特人预告片2回来, 看到许多评论的我眼泪掉下来, 并陷入了深深的沉思. 之前看过多次预告片2的预告短片, 我对女护卫队长毫无感觉, 觉得毫无亮点, 但是当她出现在屏幕上的那一瞬间, 我发觉我已经深深地爱上了她, 刹那间脑中浮现的就只有那天…

<a href="/question/20293486/answer/22932246" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2014-02-27" target="_blank" href="/question/20293486/answer/22932246">编辑于 2014-12-02</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-297657"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>59 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="388" data-type="Answer">
<link itemprop="url" href="/question/53150351/answer/133912199">
<meta itemprop="answer-id" content="49085136" />
<meta itemprop="answer-url-token" content="133912199" />
<meta itemprop="answerCount" content="9" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/53150351" target="_blank" data-id="13478752" data-za-element-name="Title">
如何看待 svelte 这个前端框架？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/53150351/answer/133912199">
<!-- <meta itemprop="answer-id" content="49085136">
<meta itemprop="answer-url-token" content="133912199"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>233</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">233</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$evanyou"
target="_blank" href="/people/evanyou"
>尤雨溪</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/evanyou#hilightbadge" target="_blank">前端开发、JavaScript、前端工程师话题优秀回答者</a></span>



<span title="为 JavaScript Fatigue 做了一些微小的工作" class="bio">
…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="233" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">233</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="13478752" data-action="/answer/content" data-author-name="尤雨溪" data-entry-url="/question/53150351/answer/133912199">

<textarea hidden class="content">作者是 Rich Harris，也就是 Ractive, Rollup 和 Buble 的作者，堪称前端界的轮子哥，现在又带来新轮子了！&lt;br&gt;&lt;br&gt;这个框架的 API 设计是从 Ractive 那边传承过来的（自然跟 Vue 也非常像），但这不是重点。Svelte 的核心思想在于『通过静态编译减少框架运行时的代码量』。举例来说，当前的框架无论是 React Angular 还是 Vue，不管你怎么编译，使用的时候必然需要『引入』框架本身，也就是所谓的运行时 (runtime)。但是用 Svelte 就不一样，一个 Svelte 组件编译了以后，所有需要的运行时代码都包含在里面了，除了引入这个组件本身，你不需要再额外引入一个所谓的框架运行时！&lt;br&gt;&lt;br&gt;当然，这不是说 Svelte 没有运行时，但是出于两个原因这个代价可以变得很小：&lt;br&gt;&lt;br&gt;1. Svelte 的编译风格是将模板编译为命令式 (imperative) 的原生 DOM 操作。比如这段模板：&lt;br&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&amp;gt;&lt;/span&gt;{{ msg }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;会被编译成如下代码：&lt;br&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;renderMainFragment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createTextNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

		&lt;span class=&quot;nx&quot;&gt;teardown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;detach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;detach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;可以看到，跟基于 Virtual DOM 的框架相比，这样的输出不需要 Virtual DOM 的 diff/patch 操作，自然可以省去大量代码，同时，性能上也和 vanilla JS 相差无几（仅就这个简单示例而言），内存占用更是极佳。这个思路其实并不是它首创，之前有一个性能爆表的模板引擎 Monkberry.js 也是这样实现的，ng2 的模板编译其实也跟这个很类似（但是中间加了一层渲染抽象层）。&lt;br&gt;&lt;br&gt;2. 对于特定功能，Svelte 依然有对应的运行时代码，比如组件逻辑，if/else 切换逻辑，循环逻辑等等... 但它在编译时，如果一个功能没用到，对应的代码就根本不会被编译到结果里去。这就好像用 Babel 的时候没有用到的功能的 helper 是不会被引入的，又好像用 lodash 或者 RxJS 的时候只选择性地引入对应的函数。&lt;br&gt;&lt;br&gt;基于这两个特点，Svelte 应用的最终代码量可以非常小。比如它的 TodoMVC min+gzip 之后只有 3kb。&lt;br&gt;&lt;br&gt;但是，Svelte 也不是没有它的潜在问题：&lt;br&gt;&lt;br&gt;1. 虽然在简单的 demo 里面代码量确实非常小，但同样的组件模板，这样的 imperative 操作生成的代码量会比 vdom 渲染函数要大，多个组件中会有很多重复的代码（虽然 gzip 时候可以缓解，但 parse 和 evaluate 是免不了的）。项目里的组件越多，代码量的差异就会逐渐缩小。同时，使用的功能越多，Svelte 要包含的运行时代码也越多，最终在实际生产项目中能有多少尺寸优势，其实很难说。&lt;br&gt;&lt;br&gt;2. Svelte 在大型应用中的性能还有待观察，尤其是在大量动态内容和嵌套组件的情况下。它的更新策略决定了它也需要类似 React 的 shouldComponentUpdate 的机制来防止过度更新。另一方面，其性能优势比起现在的主流框架并不是质的区别，现在大部分主流框架的性能都可以做到 vanilla js 的 1.2~1.5 倍慢，基于 Virtual DOM 的 Inferno 更是接近原生，证明了 Virtual DOM 这个方向理论上的可能性，所以可以预见以后 web 的性能瓶颈更多是 DOM 本身而不是框架。&lt;br&gt;&lt;br&gt;3. Svelte 的编译策略决定了它跟 Virtual DOM 绝缘（渲染函数由于其动态性，无法像模板那样可以被可靠地静态分析），也就享受不到 Virtual DOM 带来的诸多好处，比如基于 render function 的组件的强大抽象能力，基于 vdom 做测试，服务端/原生渲染亲和性等等。这一点在我看来比较关键。让我在一点点性能和 Virtual DOM 之间做抉择的话，我还是会选择 Virtual DOM。&lt;br&gt;&lt;br&gt;最后，我个人觉得 Svelte 最具有优势的地方，就是用来编译可独立分发的 Web Components。传统框架和 Web Components 结合最大的问题就在于运行时：单独分发的 WC 里面直接打包框架运行时显然不现实，不打包的话，又做不到开箱即用。但 Svelte 就没有这个问题，可以说是最适合这个用例的框架。</textarea>


<div class="zh-summary summary clearfix">

作者是 Rich Harris，也就是 Ractive, Rollup 和 Buble 的作者，堪称前端界的轮子哥，现在又带来新轮子了！ 这个框架的 API 设计是从 Ractive 那边传承过来的（自然跟 Vue 也非常像），但这不是重点。Svelte 的核心思想在于『通过静态编译减少框架运行时的…

<a href="/question/53150351/answer/133912199" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-12-02" target="_blank" href="/question/53150351/answer/133912199">编辑于 2016-12-02</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-13478752"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>21 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="389" data-type="Answer">
<link itemprop="url" href="/question/20167122/answer/14194448">
<meta itemprop="answer-id" content="798146" />
<meta itemprop="answer-url-token" content="14194448" />
<meta itemprop="answerCount" content="21" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/20167122" target="_blank" data-id="246962" data-za-element-name="Title">
「带 BOM 的 UTF-8」和「无 BOM 的 UTF-8」有什么区别？网页代码一般使用哪个？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/20167122/answer/14194448">
<!-- <meta itemprop="answer-id" content="798146">
<meta itemprop="answer-url-token" content="14194448"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>231</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">231</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$lianghai"
target="_blank" href="/people/lianghai"
>梁海</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/lianghai#hilightbadge" target="_blank">字体设计、CSS、语言、用户界面设计话题优秀回答者</a></span>



<span title="U+6211, U+7231, U+5B83" class="bio">
…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="231" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">231</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="246962" data-action="/answer/content" data-author-name="梁海" data-entry-url="/question/20167122/answer/14194448">

<textarea hidden class="content">UTF-8 不需要 BOM，尽管 Unicode 标准允许在 UTF-8 中使用 BOM。&lt;br&gt;所以不含 BOM 的 UTF-8 才是标准形式，在 UTF-8 文件中放置 BOM 主要是微软的习惯（顺便提一下：把带有 BOM 的小端序 UTF-16 称作「Unicode」而又不详细说明，这也是微软的习惯）。&lt;br&gt;BOM（byte order mark）是为 UTF-16 和 UTF-32 准备的，用于标记字节序（byte order）。微软在 UTF-8 中使用 BOM 是因为这样可以把 UTF-8 和 ASCII 等编码明确区分开，但这样的文件在 Windows 之外的操作系统里会带来问题。&lt;br&gt;&lt;br&gt;「UTF-8」和「带 BOM 的 UTF-8」的区别就是有没有 BOM。即文件开头有没有 U+FEFF。&lt;br&gt;&lt;br&gt;UTF-8 的网页代码不应使用 BOM，否则常常会出错。这是一个小例子： &lt;a href=&quot;http://www.zhihu.com/question/20138814&quot; class=&quot;internal&quot;&gt;为什么这个网页代码 &amp;lt;head&amp;gt; 内的信息会被浏览器理解为在 &amp;lt;body&amp;gt; 内？&lt;/a&gt;&lt;br&gt;&lt;br&gt;另附《The Unicode Standard, Version 6.0》之 3.10 D95 UTF-8 encoding scheme 的一段话：&lt;blockquote&gt;While there is obviously no need for a byte order signature when using UTF-8, there are occasions when processes convert UTF-16 or UTF-32 data containing a byte order mark into UTF-8. When represented in UTF-8, the byte order mark turns into the byte sequence. Its usage at the beginning of a UTF-8 data stream is neither required nor recommended by the Unicode Standard, but its presence does not affect conformance to the UTF-8 encoding scheme. Identification of the  byte sequence at the beginning of a data stream can, however, be taken as a near-certain indication that the data stream is using the UTF-8 encoding scheme.&lt;/blockquote&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.unicode.org/versions/Unicode6.0.0/ch03.pdf&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;unicode.org/versions/Un&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;icode6.0.0/ch03.pdf&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>


<div class="zh-summary summary clearfix">

UTF-8 不需要 BOM，尽管 Unicode 标准允许在 UTF-8 中使用 BOM。 所以不含 BOM 的 UTF-8 才是标准形式，在 UTF-8 文件中放置 BOM 主要是微软的习惯（顺便提一下：把带有 BOM 的小端序 UTF-16 称作「Unicode」而又不详细说明，这也是微软的习惯）。 BOM（byt…

<a href="/question/20167122/answer/14194448" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2012-04-09" target="_blank" href="/question/20167122/answer/14194448">编辑于 2013-01-29</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-246962"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>36 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="390" data-type="Answer">
<link itemprop="url" href="/question/29922082/answer/46141819">
<meta itemprop="answer-id" content="13852716" />
<meta itemprop="answer-url-token" content="46141819" />
<meta itemprop="answerCount" content="11" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/29922082" target="_blank" data-id="4151378" data-za-element-name="Title">
如何进行前端自动化测试？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/29922082/answer/46141819">
<!-- <meta itemprop="answer-id" content="13852716">
<meta itemprop="answer-url-token" content="46141819"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>230</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">230</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$fouber"
target="_blank" href="/people/fouber"
>张云龙</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/fouber#hilightbadge" target="_blank">前端开发、JavaScript话题优秀回答者</a></span>



<span title="全民直播CTO" class="bio">
全民直播CTO
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="230" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">230</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="4151378" data-action="/answer/content" data-author-name="张云龙" data-entry-url="/question/29922082/answer/46141819">

<textarea hidden class="content">没人邀请，路过回答。&lt;br&gt;&lt;br&gt;前端测试是前端工程方面的重要分支，有过一些探索，这里简单分享一下。&lt;br&gt;&lt;br&gt;首先，还是要强调一点：&lt;br&gt;&lt;blockquote&gt;前端是一种特殊的GUI软件&lt;br&gt;&lt;/blockquote&gt;看过我最近一年内做前端工程方面相关分享的人可能有印象，我总是在强调这一点。前端测试也跟这个理论基础有所关联。&lt;br&gt;&lt;br&gt;在这里，我还想吐槽一下：&lt;br&gt;&lt;blockquote&gt;API测试方法论在测试GUI时并不能解决所有问题。&lt;br&gt;&lt;/blockquote&gt;与很多前端工程师讨论过前端测试，大家更多的还是盯着API测试方法论。诚然，前端有那么一小部分代码是可以用API测试保证质量的，但前端项目中的绝大多数代码是GUI界面，&lt;b&gt;&lt;u&gt;前端测试应该向传统GUI测试方法论需求解决方案&lt;/u&gt;&lt;/b&gt;：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//baike.baidu.com/view/5131653.htm&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GUI软件测试_百度百科&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ，这个百科词条介绍的很不错，大家可以感受一下GUI测试相关概念和方法。它的测试用例、覆盖率统计、测试方法等等都与API测试有着很大的不同。&lt;br&gt;&lt;br&gt;统一了这个认知之后，我们来讨论一下前端GUI测试的特殊性。根据百科词条上的那些介绍，相信大家都能感觉到GUI测试的成本非常高，而前端这种特殊的GUI软件，具有天生的快速迭代特征，这使得case维护成本也变得非常高，经常跟不上迭代速度。&lt;br&gt;&lt;br&gt;一个标准的互联网应用产品的前端部分，我粗略估计大概有20%的业务基础代码比较稳定，比如通用组件、通用算法和数据模块等，可以针对这些建立复杂一些的API和GUI测试用例来保证质量。剩下80%的部分不是很稳定，每天都在迭代，针对他们维护case的成本非常高。目前业界中号称做了自动化测试的项目，也大多是在做那稳定的20%。&lt;br&gt;&lt;br&gt;关于稳定部分的单元测试方法我这里就不赘述了， &lt;a data-hash=&quot;5b651f38d9d96a995107ec0e855cf5c1&quot; href=&quot;//www.zhihu.com/people/5b651f38d9d96a995107ec0e855cf5c1&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@貘吃馍香&quot; data-tip=&quot;p$b$5b651f38d9d96a995107ec0e855cf5c1&quot; data-hovercard=&quot;p$b$5b651f38d9d96a995107ec0e855cf5c1&quot;&gt;@貘吃馍香&lt;/a&gt; 的答案给出了很多关键字，有兴趣的去搜索就好了。我想讨论的是针对剩下80%不稳定部分的工程化测试方案。据我了解，前端测试面对这些问题还是很无力的，业内大部分团队还是靠堆人解决。&lt;br&gt;&lt;br&gt;面对这种现状，我其实也没想到过什么好的方法，基本原则就是：&lt;b&gt;&lt;u&gt;以最低的成本建立和维护自动化测试用例&lt;/u&gt;&lt;/b&gt;。到目前为止，就想到过两个方案（都不是测试方案，只是回归测试辅助）：&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;1. 不太靠谱的“超级工位”大法。&lt;/u&gt;&lt;/b&gt;&lt;br&gt;这个方案可以说根本不是什么技术方案，而是一个办公设施，就是我们准备一个工位，摆上所有我们需要测试的主流设备，然后设备通过某种方式与一台电脑相连接，测试人员坐在工位上，在电脑中输入某个url，就能同步到所有设备中，然后开始逐个的人肉测试。&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/1d159b48ada0a69c81926897e0fbb1b7_b.jpg&quot; data-rawwidth=&quot;4208&quot; data-rawheight=&quot;2368&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;4208&quot; data-original=&quot;https://pic4.zhimg.com/1d159b48ada0a69c81926897e0fbb1b7_r.jpg&quot;&gt;超级工位大法示意图（应该很多设备的，这里就是随便展示一下而已。。。）&lt;br&gt;相比现在的前端GUI测试，超级工位已经算是从0到1的飞跃了，虽然没解决什么技术问题，但为测试前的准备工作做好了铺垫。如果把前端测试比作吃屎，超级工位就是为这餐准备了一个好一点的餐桌。。。&lt;br&gt;&lt;br&gt;&lt;u&gt;2. 靠谱一些的“页面差异监控”&lt;/u&gt;&lt;br&gt;&lt;br&gt;12年的时候还在百度，当时有同事去美国参加velocity，twitter分享了一下他们的开发流程，其中有一个环节就是页面对比监控，利用了一个叫pdiff的工具，每次提交代码，会自动对比页面之间的差异然后提醒测试人员注意回归。这也是一个典型的GUI测试零成本维护用例的案例。不过pdiff这个工具是基于像素对比的，误报率比较高，所以去年我做了一个这个项目：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/fouber/page-monitor&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;fouber/page-monitor · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 基于DOM树的diff，这样就能很大程度上自主控制要监控的元素，可以设置监控样式、文本的变化，比起像素diff智能了一些。&lt;br&gt;&lt;br&gt;其工作原理就是利用phantom或其他headless浏览器访问页面，然后截图，然后执行一段js，遍历整个dom树，获取元素计算样式和元素内文本内容，构造出一个JSON结构，然后每次diff这个json来判断页面差异，并标记在截图上展示。dom树的diff过程有点类似react的虚拟dom树diff。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/09918f07833307ba8aa048cc0dfc0d88_b.jpg&quot; data-rawwidth=&quot;377&quot; data-rawheight=&quot;199&quot; class=&quot;content_image&quot; width=&quot;377&quot;&gt;（react的dom树diff算法示意图）&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/70b8cc915557675fd67b3a8d7653328a_b.jpg&quot; data-rawwidth=&quot;452&quot; data-rawheight=&quot;130&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;452&quot; data-original=&quot;https://pic3.zhimg.com/70b8cc915557675fd67b3a8d7653328a_r.jpg&quot;&gt;（react的dom树diff算法示意图）&lt;br&gt;&lt;br&gt;DOM树diff我们可以分辨出元素样式修改/内容修改/新增元素/删除元素四种不同的页面差异，我们可以配置选择器来忽略元素。四种页面差异的效果图：&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/ade3e3c68f4138355841d4dd39d5ee6a_b.jpg&quot; data-rawwidth=&quot;684&quot; data-rawheight=&quot;678&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;684&quot; data-original=&quot;https://pic3.zhimg.com/ade3e3c68f4138355841d4dd39d5ee6a_r.jpg&quot;&gt;新增元素（绿色区域标记部分，“i am new here”）&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/8a92b15d9f6e0662c245c0d4c02fa957_b.jpg&quot; data-rawwidth=&quot;684&quot; data-rawheight=&quot;678&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;684&quot; data-original=&quot;https://pic4.zhimg.com/8a92b15d9f6e0662c245c0d4c02fa957_r.jpg&quot;&gt;删除元素（灰色区域标记部分，“你好”）&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/4025954fd93cde9fda41a492c47bba83_b.jpg&quot; data-rawwidth=&quot;684&quot; data-rawheight=&quot;655&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;684&quot; data-original=&quot;https://pic4.zhimg.com/4025954fd93cde9fda41a492c47bba83_r.jpg&quot;&gt;内容修改（黄色区域标记部分，“百-度”，“新-浪”）&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/108970b55c63dc9aed5ff99fffaff2a3_b.jpg&quot; data-rawwidth=&quot;684&quot; data-rawheight=&quot;655&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;684&quot; data-original=&quot;https://pic4.zhimg.com/108970b55c63dc9aed5ff99fffaff2a3_r.jpg&quot;&gt;样式修改（红色区域标记的部分）&lt;br&gt;&lt;br&gt;基于这样的页面差异对比监控，我们可以建立一个任务系统，把应用的所有页面url监控起来，这样每次版本迭代提交代码后，系统就能自动告诉我们，哪些页面的元素展现发生了改变，用于确定回归范围。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/ce4b31a398656cce8851d79ae1e81497_b.jpg&quot; data-rawwidth=&quot;962&quot; data-rawheight=&quot;910&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;962&quot; data-original=&quot;https://pic4.zhimg.com/ce4b31a398656cce8851d79ae1e81497_r.jpg&quot;&gt;（目前我还只是把这个系统用于竞品或者自家产品的运营监控）&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/c199c278699b0c61d1fd591fa317c364_b.jpg&quot; data-rawwidth=&quot;998&quot; data-rawheight=&quot;900&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;998&quot; data-original=&quot;https://pic1.zhimg.com/c199c278699b0c61d1fd591fa317c364_r.jpg&quot;&gt;（百度 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//fex.baidu.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;@FEX&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 团队开发的基于像素diff的组件监控平台）&lt;br&gt;&lt;br&gt;用监控的方式确定测试回归范围，是一种“少吃屎”的手段，符合工程化要求，能比较大范围的应用，虽然不能完美解决GUI中的交互问题，但能保证GUI的展现问题已经是不小的进步了。&lt;br&gt;&lt;br&gt;=====[ 补充 ]=====&lt;br&gt;经评论中  &lt;a data-hash=&quot;5b651f38d9d96a995107ec0e855cf5c1&quot; href=&quot;//www.zhihu.com/people/5b651f38d9d96a995107ec0e855cf5c1&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@貘吃馍香&quot; data-tip=&quot;p$b$5b651f38d9d96a995107ec0e855cf5c1&quot; data-hovercard=&quot;p$b$5b651f38d9d96a995107ec0e855cf5c1&quot;&gt;@貘吃馍香&lt;/a&gt; 大大的提醒，这里强调一下，&lt;b&gt;&lt;u&gt;页面差异监控的目的是方便的通知人肉回归范围，这并非测试方案，而是一种辅助测试的手段&lt;/u&gt;&lt;/b&gt;。</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic4.zhimg.com/1d159b48ada0a69c81926897e0fbb1b7_200x112.jpg" data-rawwidth="4208" data-rawheight="2368" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic4.zhimg.com/1d159b48ada0a69c81926897e0fbb1b7_r.jpg">
没人邀请，路过回答。 前端测试是前端工程方面的重要分支，有过一些探索，这里简单分享一下。 首先，还是要强调一点： 前端是一种特殊的GUI软件 看过我最近一年内做前端工程方面相关分享的人可能有印象，我总是在强调这一点。前端测试也跟这个理论基础有所…

<a href="/question/29922082/answer/46141819" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-04-28" target="_blank" href="/question/29922082/answer/46141819">编辑于 2015-04-29</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-4151378"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>23 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="391" data-type="Answer">
<link itemprop="url" href="/question/20249919/answer/14484149">
<meta itemprop="answer-id" content="914759" />
<meta itemprop="answer-url-token" content="14484149" />
<meta itemprop="answerCount" content="22" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/20249919" target="_blank" data-id="280105" data-za-element-name="Title">
为什么有人说前端开发水很深，工作量有时比后台还多？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/20249919/answer/14484149">
<!-- <meta itemprop="answer-id" content="914759">
<meta itemprop="answer-url-token" content="14484149"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>230</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">230</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$hi-xw"
target="_blank" href="/people/hi-xw"
>肖旺</a></span><span title="A little learning." class="bio">
A little learning.
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="230" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">230</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="280105" data-action="/answer/content" data-author-name="肖旺" data-entry-url="/question/20249919/answer/14484149">

<textarea hidden class="content">&lt;blockquote&gt;上联：为需求而生，为用户而死，为浏览器奋斗一辈子！&lt;br&gt; 下联：吃C S S 亏，上 J S 的当，最后死在兼容上！&lt;br&gt; 横批：前端人生&lt;/blockquote&gt;  </textarea>


<div class="zh-summary summary clearfix">

上联：为需求而生，为用户而死，为浏览器奋斗一辈子！ 下联：吃C S S 亏，上 J S 的当，最后死在兼容上！ 横批：前端人生 

<a href="/question/20249919/answer/14484149" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/20249919/answer/14484149">发布于 2012-05-21</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-280105"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>17 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="392" data-type="Answer">
<link itemprop="url" href="/question/46207738/answer/100940740">
<meta itemprop="answer-id" content="35829435" />
<meta itemprop="answer-url-token" content="100940740" />
<meta itemprop="answerCount" content="61" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/46207738" target="_blank" data-id="10696744" data-za-element-name="Title">
花整个大学的时间研究前端好吗？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/46207738/answer/100940740">
<!-- <meta itemprop="answer-id" content="35829435">
<meta itemprop="answer-url-token" content="100940740"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>228</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">228</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$mao-xian-ren"
target="_blank" href="/people/mao-xian-ren"
>丁一</a></span><span title="说不定是前端工程师" class="bio">
说不定是前端工程师
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="228" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">228</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="10696744" data-action="/answer/content" data-author-name="丁一" data-entry-url="/question/46207738/answer/100940740">

<textarea hidden class="content">我觉得「花整个大学的时间研究前端」未尝不可。&lt;br&gt;&lt;br&gt;狭义来讲，前端就是 Javascript、CSS 和 HTML，这些没有太多的计算机基础知识其实也是可以很快上手，如果以后一直持续学习，依然觉得自己对这一方面很有兴趣，那这些功夫并不算白费。另外，学习的时候我个人是非常推荐去看书的，尤其是基础书籍，这些书会让你对知识有一个全局的视野，以后遇到问题解决问题的时候不是见招拆招，而是能够举一反三地从更高层次思考问题的解决方案，而且这些基础书籍往往通俗易懂，看这些书绝对是磨刀不误砍柴工。&lt;br&gt;&lt;br&gt;再进一步，学习的过程中你一定会接触更多领域的事物，有好奇心的你大概就会投入精力去研究它们有趣的地方，而有前端延伸出来的领域是很多的。&lt;br&gt;&lt;br&gt;最开始你可能从一些入门教程上学会原生 Javascript 的一些 DOM 操作以及 CSS 的简单用法，这时你可能已经算入门了，之后你学习了 jQuery，感觉如虎添翼，js 技术一日千里，你读了 jQuery 的 API，各种链式操作了然于心。后来你开始仿制各大门户以及各种酷炫网站的页面，这个时候你或许会知道什么是切图，知道怎么用 CSS 对页面进行布局。左右边栏、无限瀑布流、三栏式，你渐渐明白这些主流用法，对 position、float 多了许多想法，知道了什么是清除浮动，每每听说 flexbox 为布局而生，之后你回想起书上说的 BFC（Block Formatting Context），忽然对很多基础概念多了不少领悟，于是觉得有必要再去翻一翻那些「入门书籍」中的某些章节。&lt;br&gt;&lt;br&gt;后来，你发现这些网站用 jQuery 的没有你想象的那么多，于是你听说了 Single Page App，你知道了 MVC、MVVM 这些由来已久的概念。你开始知道 Angular、React、Vue 以及更多的框架，你开始进入 js 框架的世界，你在各种框架中游走，看各种人比较各种框架的优劣，惊叹于各个框架的神奇之处，你甚至找到了一些行将就木的框架，后来才发现它只是页面改版得比较新潮而已。后来，你终于选择了一个框架进行深入，却发现这次的纠结程度比选框架还要严重。&lt;br&gt;&lt;br&gt;开始学习新的框架后，你一头扎紧框架的生态环境中，你开始知道越来越多的概念，无论是 Angular 的双向绑定，还是 React 的生命周期。你困惑于是否使用路由，如何管理数据，用哪个库来实现某个功能，还是自己造个轮子？没关系，你有可能根本就没选，只是一咬牙用了个 starter-kit。整个开发体系被构建之后，你顺风顺水地完成了一系列页面的开发，效率高到飞起。途中，你开始知道什么是前端构建、webpack、gulp，开始使用 nodejs，你开始系统学习 ES6，开始了解 babel.js 这种 transpiler，你知道这一切都是为了提升前端的加载速度，你开始接触前端优化：文件压缩，文件合并、雪碧图、CDN、gzip。你开始探究一直印象比较模糊的浏览器缓存机制，知道了 200 (from cache) 和 304 的区别，知道怎么触发缓存和防止缓存。&lt;br&gt;&lt;br&gt;CSS 方面你开始接触 SASS，有了更加趁手的 CSS 书写工具，你开始纠结于 React 的 inline css 的用法是否合理，后来又听说了 css modules、postcss，旧的疑惑被抛之脑后，新的困惑又接踵而至。&lt;br&gt;&lt;br&gt;后来你接触了 Isomorphic/Universal Javascript 的概念，知道了前后端分离，知道了首屏加载时间优化，开始研究 System.js，研究如何部署代码，或许你会开始对后端感兴趣，不经意间又掉到了后端的深坑之中，渐渐地接触到 Nginx、load balance、https、域名提供商、DNS 解析服务提供商、云服务提供商、容器化、异常捕获、基本运维知识、服务器监控，你会发现，你的专业课会让你理解地更快更多。你有些兴奋，有些畏惧，「我一个做前端的怎么就去搞后端了呢？」&lt;br&gt;&lt;br&gt;不知道什么时候，你按捺不住买了一台 Macbook 或者给自己的 PC 装上了一个奇怪的 Linux 发行版，开始研究怎么更好地进行工作，学习一些基础的 *nix 命令，学习写一写小脚本，让自己更有效率。开始稍微接触操作系统、计算机组成原理、计算机网络，惊觉这不是我们专业课吗。你开始学着科学上网，从互联网上获取真正的第一手知识，浏览 GitHub 上瑰丽的代码，如同游览天堂，看这些风靡全球的 repository 是由怎么的高手编写的。后来你开始技痒难耐，在 GitHub 上提交 issue，提交 pr，开始自己的项目，你开始激动于连成一片绿色的 Contributions 面板，还听说有人要完成 365 longest streak。&lt;br&gt;&lt;br&gt;哦，我忘了说，你可能要在各种编辑器之间来回折腾很久，Vim 还是 Emacs，Sublime Text 还是 Atom？VS Code 还是 IntelliJ 系列？高兴就好……&lt;br&gt;&lt;br&gt;后来你知道了 leetcode，你开始接触算法，动态规划、图论、贪心，你可能开始觉得有些专业课也不是那么没有道理。&lt;br&gt;&lt;br&gt;你开始做一些小项目，或许是自己的个人网站，你想要自己设计界面，你开始进入设计领域，学习 Sketch、Photoshop，模仿一些大网站完成几个作品，你陷入 icon 设计的泥潭，又进入字体设计的深渊，开始浏览 dribbble、behance，看 Lowpoly 和扁平化的演进，渐渐地心中有些想法。你发觉这是或不是自己要走的路，你浅尝辄止或是就此转行（误&lt;br&gt;&lt;br&gt;你的个人网站想要部署到公网，前面讲的那些后端知识开始派上用场。你买 VPS，买 IP，买域名，使用 DNS 解析商的服务，开始使用 CDN，使用 HTTPS。你甚至想要自己写后端代码，你开始用前后端分离的理念开发个人网站，你接触了 Micro Service 的概念，不知道自己的这个小项目是不是要搞这么复杂，你用 koa.js 进行 RESTful 实践，学习 SQL，规划后端 MVC。&lt;br&gt;&lt;br&gt;这几年之间，或许你会去找个实习，你之前的成果会成为你很好的助力。或许，你会从老师同学朋友那里收到做某个项目的邀请，这都得益于你之前的努力。然后你开始关注编码规范、协作和项目管理。&lt;br&gt;&lt;br&gt;你开始混迹社区，在 v2ex、reddit 上谈笑风生，开始使用 Twitter，关注各种框架、组织、业界大神的动态，订阅博客、周刊，关注各种大会，紧随时代前沿。&lt;br&gt;&lt;br&gt;我常听一个同事说，「你的基础决定你的下限，而它也决定了你能达到的上限」。这句话我是很认同的，如果你有扎实的计算机基础知识，那么，你一是可以知道如何去系统地学习另一个系统的知识，二是可以从更加宏观的角度去思考问题、拥有更宽广的视野，而不是陷在思维误区中不可自拔。所以，你花整个大学的时间研究前端未尝不可，但这并不是你逃避专业课的理由，想要在前端的路上一往无前，扎实丰富的计算机基础知识往往是你绝佳的助力。&lt;br&gt;&lt;br&gt;举个例子，不知道你有没有关注前一段时间的 left-pad 风波，如果你不去学习算法，你可能没法明白左耳朵耗子这个优化（&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/stevemao/left-pad/pull/13&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Improve runtime efficiency by sagivo · Pull Request #13 · stevemao/left-pad · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;） ，而讨论串中的 O(n) 和 O(log(n)) 又是什么意思，如何得来的 。&lt;br&gt;&lt;br&gt;当然，虽然我说了这么多，其实刚入门的新人也不需要有太多压力，因为这些并不是一时半会就能掌握的东西，有些东西更是实践中才可以能搞懂的。所以还是要保持对前端的不断关注，打好基础，持续进步，努力提高知识水平。&lt;br&gt;&lt;br&gt;总结来说，现在我们所说的前端并不只是 Javascript CSS HTML，由它延伸而来的知识往往琐碎而复杂，有许多更是超出了以往人们对前端的认知，如果你想走得更远，专业课会助你远行。而我们自己，也无需给自己设限，你可以去研究前端，也可以去研究设计、后端、运维，甚至去玩票 iOS、Android，开发 PC 客户端。&lt;br&gt;&lt;br&gt;最后，推荐这个 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/JacksonTian/fks&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端技能汇总 Frontend Knowledge Structure&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 的项目，我在上文中说的只是前端中的冰山一角，每个人成长的路径也都不尽相同，这个项目或许对个人成长的大方向有不错的指导作用。</textarea>


<div class="zh-summary summary clearfix">

我觉得「花整个大学的时间研究前端」未尝不可。 狭义来讲，前端就是 Javascript、CSS 和 HTML，这些没有太多的计算机基础知识其实也是可以很快上手，如果以后一直持续学习，依然觉得自己对这一方面很有兴趣，那这些功夫并不算白费。另外，学习的时候我个人…

<a href="/question/46207738/answer/100940740" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/46207738/answer/100940740">发布于 2016-05-15</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-10696744"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>43 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="393" data-type="Answer">
<link itemprop="url" href="/question/22591993/answer/89484703">
<meta itemprop="answer-id" content="31229456" />
<meta itemprop="answer-url-token" content="89484703" />
<meta itemprop="answerCount" content="24" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/22591993" target="_blank" data-id="1217440" data-za-element-name="Title">
前端开发工程师必读书籍有哪些值得推荐？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/22591993/answer/89484703">
<!-- <meta itemprop="answer-id" content="31229456">
<meta itemprop="answer-url-token" content="89484703"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>228</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">228</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$zhu-lin-55"
target="_blank" href="/people/zhu-lin-55"
>朱林</a></span><span title="前端。http://blog.csdn.net/zhulin2609" class="bio">
前端。<a href="//link.zhihu.com/?target=http%3A//blog.csdn.net/zhulin2609" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">blog.csdn.net/zhulin260</span><span class="invisible">9</span><span class="ellipsis"></span><i class="icon-external"></i></a>
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="228" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">228</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="1217440" data-action="/answer/content" data-author-name="朱林" data-entry-url="/question/22591993/answer/89484703">

<textarea hidden class="content">贴一个自己前几天总结的前端书评，js，css，nodejs，基本上是按照由浅入深来排的。&lt;br&gt;原文地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//imweb.io/topic/56d44d720848801a4ba198cf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我的前端书评&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;下面是正文：&lt;br&gt;------------------------------------------------------------------------------&lt;br&gt;&lt;p&gt;2014年一月以来，自己接触web前端开发已经两年多了，记录一下自己前端学习路上看过的，以及道听途说的一些书，基本上按照由浅入深来介绍。&lt;/p&gt;&lt;blockquote&gt;&lt;b&gt;JavaScript&lt;/b&gt;&lt;/blockquote&gt;&lt;b&gt;入门&lt;/b&gt;&lt;p&gt;《JavaScript权威指南（第六版）》 ★★★★★&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/2169b9e01c6b6ea1fc257cc16bde6cb8_b.jpg&quot; data-rawwidth=&quot;315&quot; data-rawheight=&quot;420&quot; class=&quot;content_image&quot; width=&quot;315&quot;&gt;&lt;br&gt;&lt;p&gt;淘宝前端团队翻译的，看译者列表都是一堆大神。这本书又叫犀牛书，号称javascript开发者的圣经，网上对此书评价很多，大概意思都是说这本书是一本JavaScript文档手册，没有完整看过一遍此书的都不能算是一名合格的前端工程师。 我也是从这本书开始接触前端开发的，当时还是华章出版社的校园大使，免费申请到了这本书，可惜的是两年来我一直把它作为一本cookbook来查阅，一直没有好好通读一遍。个人感觉这本书还是写得枯燥了些，不过内容绝对是五颗星，无可挑剔！&lt;/p&gt;&lt;p&gt;《JavaScript高级程序设计》 ★★★★★&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/326b64018bafa1d5cda36b1554daa686_b.jpg&quot; data-rawwidth=&quot;324&quot; data-rawheight=&quot;411&quot; class=&quot;content_image&quot; width=&quot;324&quot;&gt;&lt;br&gt;&lt;p&gt;又称红宝书，雅虎首席前端架构师，YUI的作者Zakas出品。虽然书名带了“高级”二字，但是讲得也很基础，而且行文风格很流畅，每一小节就像是一篇博客，读起来并不枯燥，个人感觉比上面那本犀牛书可读性更强。说到这里，也推荐大家多多关注作者的博客：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.nczonline.net/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;NCZOnline - The official website of Nicholas C. Zakas&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ，上面也有许多高质量的博文。感觉这本书就像是作者平时的博文按照前端知识体系组织成了一本技术书。&lt;/p&gt;&lt;p&gt;《JavaScript DOM编程艺术》&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/cde29b8d97a0daa389f2cbecf8070a89_b.jpg&quot; data-rawwidth=&quot;321&quot; data-rawheight=&quot;414&quot; class=&quot;content_image&quot; width=&quot;321&quot;&gt;&lt;br&gt;&lt;p&gt;作为初学者如果觉得上面两本书作为入门书来说太厚了，也可以看看这本，不厚，评价也很高，但是由于本人没看过，就不作过多评价了。&lt;/p&gt;&lt;p&gt;《JavaScript编程精解》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/9a2722fe24eab1f4ae0e6e6c0d62d048_b.jpg&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;417&quot; class=&quot;content_image&quot; width=&quot;318&quot;&gt;&lt;br&gt;&lt;p&gt;用上下班时间看完的第三本书。看起来比较吃力，第五章函数式编程和第六章的面向对象编程很多都没看懂。全书游戏式的编程教程还是很有意思的。译者tom大叔名头很大，翻译的质量也只是中规中矩吧。不过，还是get到很多技巧！这本书的推荐语说这本书用来入门很好，但是个人认为初学者并不合适看这本书入门，作者在代码示例中不自觉得使用了一些高级用法，初学者看容易晕菜。听说最近出了第二版，加入了NodeJS的内容，这本书是开源的：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//eloquentjavascript.net/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Eloquent JavaScript&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;《JQuery权威指南》 ★★★&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/7859f211f705e5300ddf11a402df998c_b.jpg&quot; data-rawwidth=&quot;252&quot; data-rawheight=&quot;326&quot; class=&quot;content_image&quot; width=&quot;252&quot;&gt;&lt;br&gt;&lt;p&gt;当时在北京实习时，在每天下班回家的地铁上把这本书看完了。错误很多啊，不过其中的语法+示例的形式，确实很适合初学者。但是错误实在太多了，而且有些语句还不通顺，看着很累啊，只能说写得好代码的人，书不一定写得好。&lt;/p&gt;&lt;p&gt;《ECMAScript6入门》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/5fb4a9b874d0e302f0251a1c64c73f6c_b.jpg&quot; data-rawwidth=&quot;309&quot; data-rawheight=&quot;432&quot; class=&quot;content_image&quot; width=&quot;309&quot;&gt;&lt;br&gt;&lt;p&gt;前端工程师当然要关注ECMAScript的发展。阮老师的这本科普小书！短小精悍，通俗易懂。这本书也是开源的：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//es6.ruanyifeng.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;ECMAScript 6入门&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;b&gt;进阶&lt;/b&gt;&lt;p&gt;《编写可维护的JavaScript》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/961d735bd1e2c8a797595ddd6705d3e8_b.jpg&quot; data-rawwidth=&quot;363&quot; data-rawheight=&quot;363&quot; class=&quot;content_image&quot; width=&quot;363&quot;&gt;&lt;br&gt;&lt;p&gt;又一本Zakas的书，还没读完，基本上是zakas那本红宝书的子集，重点是javascript代码风格、规范以及最佳实践。&lt;/p&gt;&lt;p&gt;《JavaScript异步编程》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/ad63d44ba579f5e8940583a7c010b785_b.jpg&quot; data-rawwidth=&quot;303&quot; data-rawheight=&quot;438&quot; class=&quot;content_image&quot; width=&quot;303&quot;&gt;&lt;br&gt;&lt;p&gt;掌握异步编程，显然是一位JS开发者必备的技能，用多看的畅读优惠看完了这本介绍js异步编程的科普小书，书中介绍了js异步编程的概念、场景和工具，不过更重要的是把这些工具给用起来。&lt;/p&gt;&lt;p&gt;《JavaScript设计模式》 ★★★&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/0aa467600fb14237ef3d5ceb72a94d7f_b.jpg&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;417&quot; class=&quot;content_image&quot; width=&quot;318&quot;&gt;&lt;br&gt;&lt;p&gt;作者似乎很偏爱JQuery的源码，不过这本书tom大叔翻译的很烂，代码也很多没有缩进。。。 不推荐。&lt;/p&gt;&lt;p&gt;《Effective JavaScript》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/ce0cc31c8c329c8a0b6fa272d46fad96_b.jpg&quot; data-rawwidth=&quot;363&quot; data-rawheight=&quot;363&quot; class=&quot;content_image&quot; width=&quot;363&quot;&gt;&lt;br&gt;&lt;p&gt;这本书我当时看到最后一章“并发”的部分就很吃力了，显然这是一本进阶的js书籍，还是先把那本权威指南啃完吧！听说这本书上的技巧对于IE6有很好的优化效果，不过显然书上提到的这些技巧肯定已经大量的运用到JQuery、Underscore这样流行的JS库中，这些第三方库已经帮我们把这些优化细节封装得很好了。&lt;/p&gt;&lt;p&gt;《JAVASCRIPT语言精髓与编程实践》&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/338473560070331c041c306537422842_b.jpg&quot; data-rawwidth=&quot;321&quot; data-rawheight=&quot;414&quot; class=&quot;content_image&quot; width=&quot;321&quot;&gt;&lt;br&gt;&lt;p&gt;一本讲JavaScript的硬书，以JavaScript这门语言为栗子，讲述编程语言的特性（动态语言、函数式编程、面向对象编程等等）。作者周爱民老师是前支付宝架构师，现豌豆荚架构师。&lt;/p&gt;&lt;p&gt;《高性能JavaScript》&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/9475b006e0a34b97d43433543edb2f53_b.jpg&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;417&quot; class=&quot;content_image&quot; width=&quot;318&quot;&gt;&lt;br&gt;&lt;p&gt;Zakas大神的又一本神书，高工推荐的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;最近开始看《You dont know JS》了，看了个开头，感觉也很不错！&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;b&gt;CSS&lt;/b&gt;&lt;/blockquote&gt;&lt;b&gt;入门&lt;/b&gt;&lt;p&gt;《Head First HTML与CSS、XHTML（中文版）》&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/e2728975581aec72174514ec43587b5e_b.jpg&quot; data-rawwidth=&quot;336&quot; data-rawheight=&quot;393&quot; class=&quot;content_image&quot; width=&quot;336&quot;&gt;&lt;br&gt;&lt;b&gt;进阶&lt;/b&gt;&lt;p&gt;《CSS权威指南（第三版）》&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/4e7bbed62e29f865bfe8814760509a69_b.jpg&quot; data-rawwidth=&quot;200&quot; data-rawheight=&quot;266&quot; class=&quot;content_image&quot; width=&quot;200&quot;&gt;&lt;br&gt;&lt;p&gt;虽然是一本老书，但是CSS 2.1是基础&lt;/p&gt;&lt;p&gt;《精通CSS（第2版）》&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/d25f7b55a019510f9088a06b4b4535e8_b.jpg&quot; data-rawwidth=&quot;324&quot; data-rawheight=&quot;408&quot; class=&quot;content_image&quot; width=&quot;324&quot;&gt;&lt;br&gt;&lt;p&gt;好吧！以上三本书，我都没看过。。。&lt;/p&gt;&lt;blockquote&gt;&lt;b&gt;网络协议 &amp;amp; 架构&lt;/b&gt;&lt;/blockquote&gt;&lt;p&gt;《HTTP权威指南》 ★★★★★&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/736bfab8c479df6174ee4c7d6f88f5f4_b.jpg&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;417&quot; class=&quot;content_image&quot; width=&quot;318&quot;&gt;&lt;br&gt;&lt;p&gt;涉及web开发的前端、后台、运维的同学都可以看看。web应用架构师必看。其中对其中“缓存”、“负载均衡“等章节印象很深，标准的教科书啊，肯定比看枯燥的HTTP规范好多了。&lt;/p&gt;&lt;p&gt;《Web性能权威指南》&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/3229100b7c0639e36f6acc0aef92fbf4_b.jpg&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;417&quot; class=&quot;content_image&quot; width=&quot;318&quot;&gt;&lt;br&gt;&lt;p&gt;Google工程师教你优化web性能，刚看了个开头，高工推荐，听说讲得比较深。&lt;/p&gt;&lt;p&gt;《大型网站技术架构》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/dc462836651703ea61c4e2d5f0fbfb26_b.jpg&quot; data-rawwidth=&quot;321&quot; data-rawheight=&quot;414&quot; class=&quot;content_image&quot; width=&quot;321&quot;&gt;&lt;br&gt;&lt;p&gt;网站架构入门科普。刚刚看完，写得挺好的，通俗易懂。开篇就明义：“大型网站是演化出来的，而不是设计出来的。”其中负载均衡那一节，基本上是参考的《HTTP权威指南》负载均衡的内容。&lt;/p&gt;&lt;blockquote&gt;&lt;b&gt;NodeJS&lt;/b&gt;&lt;/blockquote&gt;&lt;b&gt;入门&lt;/b&gt;&lt;p&gt;《了不起的Node.js》 ★★★&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/1b9e44aeef11a540e7e611584705bacb_b.jpg&quot; data-rawwidth=&quot;333&quot; data-rawheight=&quot;399&quot; class=&quot;content_image&quot; width=&quot;333&quot;&gt;&lt;br&gt;&lt;p&gt;作为NodeJS入门挺好的一本书，可惜讲得太浅了，基本上就是介绍开发一个简单的NodeJS应用所要用到的一些技术和工具，对里面的原理以及NodeJS本身没有做太多的介绍，停留在介绍第三方库及其API的阶段。&lt;/p&gt;&lt;p&gt;《Node.js开发指南》&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/ba93f14af5afb96eba598cfdcbfba297_b.jpg&quot; data-rawwidth=&quot;324&quot; data-rawheight=&quot;411&quot; class=&quot;content_image&quot; width=&quot;324&quot;&gt;&lt;br&gt;&lt;p&gt;读了一半，就是看这本书理解了NodeJS的事件循环。作者是大神啊。&lt;/p&gt;进阶&lt;p&gt;《深入浅出Node.js》&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/ca0fb121f039228a2db8ae6a3bee8983_b.jpg&quot; data-rawwidth=&quot;324&quot; data-rawheight=&quot;408&quot; class=&quot;content_image&quot; width=&quot;324&quot;&gt;&lt;br&gt;&lt;p&gt;很出名的一本书，对NodeJS的一些原理做了深入介绍，挺不错的，还没看完。&lt;/p&gt;&lt;blockquote&gt;用户体验 &amp;amp; 产品&lt;/blockquote&gt;&lt;p&gt;《点石成金》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/d1dc75f1e0f75314597c8d0c475b4937_b.jpg&quot; data-rawwidth=&quot;327&quot; data-rawheight=&quot;408&quot; class=&quot;content_image&quot; width=&quot;327&quot;&gt;&lt;br&gt;&lt;p&gt;恰好读过第二版和第三版，第三版中添加了mobile web的内容，并且更新和添加了一些新例子，总得来说，我更喜欢第二版的精简。ponyma曾经推荐过的好书。&lt;/p&gt;&lt;p&gt;《结网@改变世界的互联网产品经理》 ★★★★&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/ea72b6530ad94c1508eb4dd8fd7de98d_b.jpg&quot; data-rawwidth=&quot;306&quot; data-rawheight=&quot;435&quot; class=&quot;content_image&quot; width=&quot;306&quot;&gt;&lt;br&gt;&lt;p&gt;这本书读了挺久。用产品开发过程中的实际案例介绍了产品经理的工作内容以及如何开展工作。并从创建产品和个人修炼两个方面描述了需求分析，产品设计，项目管理，产品运营，产品经理的沟通能力以及个人和团队的创新能力等等，附录的推荐书目和工具质量也很高！作者是前腾讯产品经理，糗事百科的创始人，不过好像在知乎上因为创始人股权纠纷的问题，被黑臭了。。。&lt;/p&gt;&lt;p&gt;《参与感》 ★★&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/f45e1f412f95315fea9ff5bcc87dc72e_b.jpg&quot; data-rawwidth=&quot;300&quot; data-rawheight=&quot;441&quot; class=&quot;content_image&quot; width=&quot;300&quot;&gt;&lt;br&gt;&lt;p&gt;很出名的一本书，但其实营销部分讲得一般，老生常谈，不如我的朋友何老湿讲的好啊，不过可能对传统企业转型互联网有一定参考价值。设计那一块说的还挺有意思的，不过肯定还是不如我的另外两位设计师朋友开花和佐叔咯。哈哈！&lt;/p&gt;&lt;p&gt;《创京东》 ★★★&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/2325d90a590c8c6da02f5900d045f2a5_b.jpg&quot; data-rawwidth=&quot;309&quot; data-rawheight=&quot;432&quot; class=&quot;content_image&quot; width=&quot;309&quot;&gt;&lt;br&gt;&lt;p&gt;一本骗钱的书。看完之后的感受是，京东的核心部门是采销，仓储和物流，排名分先后。&lt;/p&gt;&lt;br&gt;&lt;p&gt;题主看到这么多书也不用慌，我都两年了，也没有全部看完 : ）&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;转载请注明出处。&lt;/b&gt;&lt;/p&gt;</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic1.zhimg.com/2169b9e01c6b6ea1fc257cc16bde6cb8_200x112.jpg" data-rawwidth="315" data-rawheight="420" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic1.zhimg.com/2169b9e01c6b6ea1fc257cc16bde6cb8_r.jpg">
贴一个自己前几天总结的前端书评，js，css，nodejs，基本上是按照由浅入深来排的。 原文地址：<a href="//link.zhihu.com/?target=http%3A//imweb.io/topic/56d44d720848801a4ba198cf" class=" wrap external" target="_blank" rel="nofollow noreferrer">我的前端书评<i class="icon-external"></i></a> 下面是正文： ------------------------------------------------------------------------------ 2014年一月以来，自己接触web前端开发已经两年多…

<a href="/question/22591993/answer/89484703" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-03-06" target="_blank" href="/question/22591993/answer/89484703">编辑于 2016-03-06</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-1217440"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>20 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="394" data-type="Answer">
<link itemprop="url" href="/question/32885190/answer/56716875">
<meta itemprop="answer-id" content="18094210" />
<meta itemprop="answer-url-token" content="56716875" />
<meta itemprop="answerCount" content="16" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/32885190" target="_blank" data-id="5359058" data-za-element-name="Title">
前端小白前端小白阶段的项目都是在哪里找的~?
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/32885190/answer/56716875">
<!-- <meta itemprop="answer-id" content="18094210">
<meta itemprop="answer-url-token" content="56716875"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>226</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">226</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$li-chuang-yi"
target="_blank" href="/people/li-chuang-yi"
>yjcxy12</a></span><span title="前端 React Redux" class="bio">
前端 React Redux
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="226" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">226</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="5359058" data-action="/answer/content" data-author-name="yjcxy12" data-entry-url="/question/32885190/answer/56716875">

<textarea hidden class="content">收藏的干货都拿出来啦&lt;br&gt;&lt;ul&gt;&lt;li&gt;Free Code Camp - &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.freecodecamp.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;freecodecamp.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;目前有9个zipline项目都是纯前端，还有好多教学。&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;百度前端学院 - &lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/baidu-ife/ife&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/baidu-ife/if&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;现在正进行中。 找不到组就自己做吧，都没那么难的。&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//thecodeplayer.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;thecodeplayer.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;ul&gt;&lt;li&gt;和上面两个不太一样，是实时代码，观察实时变化，推荐~&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;最终目的是学习，不要所有项目都只用一种技术，这次用了angular，感觉熟悉了很多，下个就用React等等。</textarea>


<div class="zh-summary summary clearfix">

收藏的干货都拿出来啦 Free Code Camp - <a href="//link.zhihu.com/?target=http%3A//www.freecodecamp.com/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://www.</span><span class="visible">freecodecamp.com/</span><span class="invisible"></span><i class="icon-external"></i></a> 目前有9个zipline项目都是纯前端，还有好多教学。百度前端学院 - <a href="//link.zhihu.com/?target=https%3A//github.com/baidu-ife/ife" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">github.com/baidu-ife/if</span><span class="invisible">e</span><span class="ellipsis"></span><i class="icon-external"></i></a> 现在正进行中。 找不到组就自己做吧，都没那么难的。<a href="//link.zhihu.com/?target=http%3A//thecodeplayer.com/" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">thecodeplayer.com/</span><span class="invisible"></span><i class="icon-external"></i></a> 和上面两个不太一样，是实时…

<a href="/question/32885190/answer/56716875" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-07-28" target="_blank" href="/question/32885190/answer/56716875">编辑于 2015-07-28</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-5359058"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>6 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="395" data-type="Answer">
<link itemprop="url" href="/question/24076626/answer/55284360">
<meta itemprop="answer-id" content="17520727" />
<meta itemprop="answer-url-token" content="55284360" />
<meta itemprop="answerCount" content="28" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/24076626" target="_blank" data-id="1812436" data-za-element-name="Title">
JavaScript 的语言设计有哪些缺陷？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/24076626/answer/55284360">
<!-- <meta itemprop="answer-id" content="17520727">
<meta itemprop="answer-url-token" content="55284360"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>225</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">225</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">
<span class="name">匿名用户</span>
</div>

<div class="zm-item-vote-info" data-votecount="225" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">225</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="1812436" data-action="/answer/content" data-author-name="匿名用户" data-entry-url="/question/24076626/answer/55284360">

<textarea hidden class="content">其实我老早就看过这个问题了，一直懒得回答。但过了这么长时间，竟然也没几个准确的答案，实在有点意外。&lt;br&gt;&lt;br&gt;首先要定义「语言设计」覆盖的范围有多广。前面几位说《JavaScript权威指南》减去《JavaScript语言精粹》等于缺陷 ，你们几位压根都没读过《JavaScript权威指南》吧？第一部分讲核心，第二部分讲客户端。只有一半内容关注在语言自身上。难不成DOM、CSS也全归到JavaScript头上？你们见过把MFC的设计缺陷说成是C++缺陷的吗？&lt;br&gt;&lt;br&gt;后面 &lt;a data-title=&quot;@skyler&quot; data-editable=&quot;true&quot; class=&quot;member_mention&quot; href=&quot;//www.zhihu.com/people/cd009aebd3f9bba8f1a829ad98c0a38e&quot; data-hash=&quot;cd009aebd3f9bba8f1a829ad98c0a38e&quot; data-hovercard=&quot;p$b$cd009aebd3f9bba8f1a829ad98c0a38e&quot;&gt;@skyler&lt;/a&gt; 举的 instanceof 的例子，已经有不少人指出过错误，可惜赞同者竟也有不少。我说你们 JavaScript 程序员啊，还需要学习一个，就是 Prototype 那套你们好像搞得很熟的样子，可说来说去就是没搞懂鸡和蛋的问题，至今对OOP的理解仍停留在儿子父亲爷爷的层次上，Naive~ 你们都只会 JavaScript一种语言是吧？我今天算是小小得罪了你们一下，蛤蛤~&lt;br&gt;在JavaScript 这里它叫 Function、Object，在Java里就是 Class、Object，在 C# 里就是 Type、Object。因为JavaScript中类型、类构造器和普通变量全都使用同一个命名空间，所以让人产生了混淆。&lt;br&gt;看 JavaScript 代码：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// true, Array extends Object&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 下面问题来了&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 所有对象都是 Object类型 的实例，&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 所以函数也是 Object类型 的实例，&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 所以 Array构造函数 也是 Object类型 的实例&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; C# 代码：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;再看第二个示例：&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;//false&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 儿子认爹不认爷爷？这是谁教的OOP啊&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 你给我找出个OOP语言，能实现 &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// FooClass instanceof Class  和 new FooClass instanceof Class&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 同时为 True？&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;第三个，就是鸡和蛋的问题：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;对应 Java 代码：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java.lang.Class&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_Object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;java.lang.Object&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 下面全是 true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Class&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Object&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Class&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_Object&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;假如我用集合来类比，我们说：&lt;br&gt;&lt;blockquote&gt;这只动物是一条狗；&lt;br&gt;这条狗是一只中华田园犬；&lt;/blockquote&gt;那么我们有说过「中华田园犬」是一条狗这种狗屁不通的话吗？&lt;br&gt;正确的说法是：&lt;br&gt;&lt;blockquote&gt;For All 中华田园犬，It is a 狗； 即 中华田园犬  ⊆ 狗。&lt;br&gt;这条狗 ∈ 中华田园犬。&lt;br&gt;这条狗 不是集合，所以不可能 ⊆ 狗&lt;/blockquote&gt;所以怎么可能 FooClass instanceof Class  和 new FooClass instanceof Class 同时为真呢？什么情况下会出现鸡和蛋的问题呢？就是声明一个 包含所有集合的集合啊！好了，你们知道这是罗素悖论，但并不妨碍PL中这样设计。开辟鸿蒙，阴阳二分， Object 和 Class 两个东西一起出现了，Object是公的，Class是母的。&lt;br&gt;&lt;br&gt;相关问题：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.coverity.com/2014/10/01/better-nothing/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Better than nothing&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;下面再谈缺陷，不过我建议先看一下我这个回答，消除一些误解：&lt;br&gt;&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//zhi.hu/7l6L&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;有哪些经常被误用的 HTML、JavaScript、CSS 的元素、方法和属性？&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;比如前面 &lt;a data-title=&quot;@Jim Liu&quot; data-editable=&quot;true&quot; class=&quot;member_mention&quot; href=&quot;//www.zhihu.com/people/74aa241d0d503ee8e146cef20aea24db&quot; data-hash=&quot;74aa241d0d503ee8e146cef20aea24db&quot; data-hovercard=&quot;p$b$74aa241d0d503ee8e146cef20aea24db&quot;&gt;@Jim Liu&lt;/a&gt;  、 &lt;a data-title=&quot;@杨博&quot; data-editable=&quot;true&quot; class=&quot;member_mention&quot; href=&quot;//www.zhihu.com/people/8416c7e2d00436a80c0ba318cddc971b&quot; data-hash=&quot;8416c7e2d00436a80c0ba318cddc971b&quot; data-hovercard=&quot;p$b$8416c7e2d00436a80c0ba318cddc971b&quot;&gt;@杨博&lt;/a&gt; 说闭包对GC的影响，我也早纠正过了。以下代码不会导致内存泄漏，除非解释器是实习生写的（好了，终于有人提这个问题了，准确地说，是在ES5标准后，下面的代码才能避免内存泄漏，那就说ES5之前的闭包是实习生设计的吧）：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// This closure only references to i&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;123456&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;X&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Big Object&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;你们可能读了 《ECMAScript Specification》，以为闭包必然持有外部所有变量的引用，这种错误的认识还挺普遍的，我在这个回答里也澄清过了，要清楚&lt;b&gt;Spec只是描述语义，而非具体实现细节&lt;/b&gt;：&lt;br&gt;&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//zhi.hu/5q8r&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;和 C/C++ 相比，JavaScript 的性能差在哪里 ？ &lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;不过我要提醒大家，v8等引擎，即使ES5下在GC实现上也有Bug：&lt;br&gt;&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=https%3A//www.meteor.com/blog/2013/08/13/an-interesting-kind-of-javascript-memory-leak&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;An interesting kind of JavaScript memory leak&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;两个函数 Share 了同一个 Env 对象。颇为讽刺的是，作者将此发表到 HackerNews 上竟然有一群无知的JS程序员认为这是该有的行为，然后还引用《ES Spec》之乎者也起来。不知道这Bug现在修复好没有，不过这也属于解释器实现的问题，并非语言自身缺陷。&lt;br&gt;&lt;br&gt;前面为什么说这代码在ES5标准后才不会产生内存泄漏呢？因为有eval啊，ES5之前，eval只是被当成一个普通函数，eval的上下文是当前Env，这样解释器既无法静态分析eval中的代码，也无法判断哪个函数调用是eval，所以就只好保存所有外部变量。而ES5提出了 Direct Eval：&lt;br&gt;&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//www.ecma-international.org/ecma-262/5.1/%23sec-10.4.2&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.2.1.1&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，&lt;br&gt;非Direct Eval它的上下文是Global Scope，所以解释器可以静态推断出哪些变量不会被引用到。简单示例：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Indirect Eval，a会被释放&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 必须CallExpression的函数名字为 &quot;eval&quot;，g函数会始终导致内存泄漏&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a()&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Direct Eval, a会被引用&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 虽然它不是Direct Eval，但解释器静态分析时仍然需要认定可能会引用 a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;不过具体 Direct Eval 有哪些形式解释起来太长了，自己参考：&lt;br&gt;&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//perfectionkills.com/global-eval-what-are-the-options/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Global eval. What are the options?&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;这个问题在ES5之前算作JavaScript语言自身的缺陷，但现在浏览器几乎都不同程度地支持了ES5这个优化，而且 StrictMode 不允许变量名为 eval，就不需要再担心这个问题了。&lt;br&gt;&lt;br&gt;谈到 JavaScript 设计缺陷，很多人会提到隐式类型转换。没错，这个算设计缺陷。但有个点好像很多人没看明白。在REPL中测试：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; '[object Object]'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 下面一个输出 true， 但后面不能有注释和分号，一加就false了&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; false ，注意结尾的分号了没有？&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;这个不是类型转换的问题，而是REPL语法二义解析的问题。去 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//esprima.org/demo/parse.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Esprima: Parser&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 看语法树。加上括号分号你就明白了：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; '[object Object]'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; 0 ，前面的 {} 被当成了 Block&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;({}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; '[object Object]'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;({}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;===&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;还有，来聊聊 &lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//javascript-puzzlers.herokuapp.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Javascript Puzzlers&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;：&lt;br&gt;&lt;ol&gt;&lt;li&gt;Array#map 方法的类型是 [a] -&amp;gt; ( a -&amp;gt; Int -&amp;gt; [a] -&amp;gt; b) -&amp;gt; [b]，算是API无脑设计，但为毛你们不看文档？好吧，这下你们知道类型注释的重要性了吧，一行简洁明了函数类型注释，远胜啰嗦的文档。&lt;/li&gt;&lt;li&gt;首先 null instanceof Object 为 false应该都明白吧？Java也这样（&lt;a href=&quot;//link.zhihu.com/?target=https%3A//docs.oracle.com/javase/specs/jls/se8/html/jls-4.html%23jls-4.1&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Chapter 4. Types, Values, and Variables&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）。JavaScript 的问题在于没有对应的 null Type，比如Ruby中的NilClass： `nil.instance_of? NilClass # =&amp;gt; true`。这个 JS它爹的笔记说了，要有 null type：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//brendaneich.com/2005/11/js2-design-notes/%23comment-369&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;brendaneich.com/2005/11&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;/js2-design-notes/#comment-369&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;Array#reduce 和前面map一样是API无脑设计。&lt;/li&gt;&lt;li&gt;运算符优先级谁没有？比起来Haskell都该去死了！&lt;/li&gt;&lt;li&gt;Hoisting&lt;/li&gt;&lt;li&gt;他解释错了，并不是因为 2^53 是JS能表示的最大数，而是因为浮点数不是连续的，有洞：&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//stackoverflow.com/questions/19473352/are-there-any-whole-numbers-which-the-double-cannot-represent-within-the-min-max&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Floating point&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 。所以更算不上JS缺陷了，你们还需要多多学习提高姿势：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; true&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// =&amp;gt; true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;Sparse Array，由此还引出了：&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=https%3A//github.com/codemix/fast.js&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;codemix/fast.js · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;浮点数精度问题&lt;/li&gt;&lt;li&gt;挺好的&lt;/li&gt;&lt;li&gt;和前面一样，不该区分 Primitive Type！&lt;br&gt;&lt;/li&gt;&lt;li&gt;浮点数和取余谁没有？C语言取余结果符号还随便呢。&lt;/li&gt;&lt;/ol&gt;其它几个问题根源都差不多，语法、API、浮点数，不多谈。&lt;br&gt;&lt;br&gt;先写到这里……怎么写着写着我反变成JavaScript卫道士了？</textarea>


<div class="zh-summary summary clearfix">

其实我老早就看过这个问题了，一直懒得回答。但过了这么长时间，竟然也没几个准确的答案，实在有点意外。 首先要定义「语言设计」覆盖的范围有多广。前面几位说《JavaScript权威指南》减去《JavaScript语言精粹》等于缺陷 ，你们几位压根都没读过《JavaScri…

<a href="/question/24076626/answer/55284360" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-07-16" target="_blank" href="/question/24076626/answer/55284360">编辑于 2016-05-02</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-1812436"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>42 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="396" data-type="Answer">
<link itemprop="url" href="/question/41618379/answer/98152613">
<meta itemprop="answer-id" content="34709531" />
<meta itemprop="answer-url-token" content="98152613" />
<meta itemprop="answerCount" content="41" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/41618379" target="_blank" data-id="8854785" data-za-element-name="Title">
产品经理如何在设计产品时避免给开发挖坑?
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/41618379/answer/98152613">
<!-- <meta itemprop="answer-id" content="34709531">
<meta itemprop="answer-url-token" content="98152613"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>225</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">225</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$laufei"
target="_blank" href="/people/laufei"
>刘飞</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/laufei#hilightbadge" target="_blank">产品经理话题优秀回答者</a></span>



<span title="想当作家的工科男" class="bio">
想当作家的工科男
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="225" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">225</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="8854785" data-action="/answer/content" data-author-name="刘飞" data-entry-url="/question/41618379/answer/98152613">

<textarea hidden class="content">&lt;b&gt;1. 搞明白基本的一些技术背景和技术概念&lt;/b&gt;&lt;br&gt;&lt;br&gt;产品经理需不需要懂技术是老生常谈的问题，我的回答是肯定要懂，关键在于，懂的技术是怎么样的技术。&lt;br&gt;&lt;br&gt;懂技术并不是就要能自己成为架构师、自己成为工程师，又可以规划技术架构又能实现产品功能。懂技术是要明白&lt;b&gt;技术实现的逻辑&lt;/b&gt;。&lt;br&gt;&lt;br&gt;比如，我们在做的配送业务，需要有配送员、订单、商家多种信息，每种信息是存放在各自的数据结构里的，它们之间又通过逻辑关系串联起来。这些产品上都未必体现得出来，但在很多产品设计的时候要考虑到，要做某个新业务时，发现商家要分截然不同的两类，那中间的逻辑怎么样成本最低，是同一张表用属性区分、还是新造一张表，都是要跟技术一起讨论研究的。&lt;br&gt;&lt;br&gt;平时，也建议多看些技术相关的文章和科普。注意，千万不要买什么《七天掌握安卓系统》之类的书，看一些跟产品息息相关的比较好。&lt;br&gt;&lt;br&gt;还有个公众号，叫做「给产品经理讲技术」，写得很接地气，推荐。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;2. 学会梳理产品逻辑&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;这个逻辑不是 APP 上有几个 tab 页，也不是功能之间简单的关系，说的是背后的几个逻辑：&lt;b&gt;数据结构、信息流程和其它的逻辑关系。&lt;/b&gt;&lt;br&gt;&lt;br&gt;很建议大家看看 &lt;a data-hash=&quot;c637bd3126ba45bef69830f5cd25e662&quot; href=&quot;//www.zhihu.com/people/c637bd3126ba45bef69830f5cd25e662&quot; class=&quot;member_mention&quot; data-hovercard=&quot;p$b$c637bd3126ba45bef69830f5cd25e662&quot;&gt;@苏杰&lt;/a&gt;  老师的《淘宝十年产品事》，里面提到的淘宝产品经理，都是对数据和流程的梳理非常熟练的。&lt;br&gt;&lt;br&gt;然而我见到的很多产品经理，并不太把这个当回事。「只要给我实现就行了，我不关心怎么实现。」&lt;br&gt;&lt;br&gt;数据结构其实是第一重要的东西，可以让产品经理非常深入地理解技术实现的逻辑。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/e2ed02772ff267f073c695e2e022acf5_b.png&quot; data-rawwidth=&quot;692&quot; data-rawheight=&quot;458&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;692&quot; data-original=&quot;https://pic2.zhimg.com/e2ed02772ff267f073c695e2e022acf5_r.png&quot;&gt;&lt;br&gt;比如，这是美团酒店销售的数据结构。可以让整个酒店商品的逻辑一目了然，而不是零散的需求。&lt;br&gt;&lt;br&gt;信息流程则是在有一个信息通路、存在一些状态转化逻辑的情况下，需要考虑的。比如常见的订单从生成到支付到结束的环节，如果也只是零散地提出功能需求，那很可能出现纰漏，技术实现上也不明晰。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/442afdab63c01126303ca83ea54e151d_b.png&quot; data-rawwidth=&quot;1229&quot; data-rawheight=&quot;453&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1229&quot; data-original=&quot;https://pic2.zhimg.com/442afdab63c01126303ca83ea54e151d_r.png&quot;&gt;&lt;br&gt;比如，这是嘟嘟美甲最初交互草稿里，我们梳理的订单状态转化图。&lt;br&gt;&lt;br&gt;还有很多其他的逻辑，也需要梳理清楚。&lt;br&gt;&lt;br&gt;比如，我们前段时间在设计取消订单机制的时候，发现有很多种情况，每种情况的文案也不应该一样，这时候就要梳理出每种具体的提示，不能让技术去帮你完善。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/be165e4e3b494367bb269bbffa8c2054_b.png&quot; data-rawwidth=&quot;1094&quot; data-rawheight=&quot;327&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1094&quot; data-original=&quot;https://pic1.zhimg.com/be165e4e3b494367bb269bbffa8c2054_r.png&quot;&gt;&lt;br&gt;&lt;br&gt;对于应该梳理什么、怎样梳理比较好，可以多问问程序员哥哥们的意见。如果他们看到你的文档，立刻就能想到该怎么实现，那就证明起到作用了。如果每次都要花费大量的时间拆解和讨论，那就是梳理得还不够。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;3. 出现坑的时候，多复盘&lt;/b&gt;&lt;br&gt;&lt;br&gt;不同的产品差异很大，即使再有经验的产品经理，也不一定就永远不会埋坑。&lt;br&gt;&lt;br&gt;坑出现了之后，除了尽快填起来，还要去复盘，多想想，怎么避免下次再进坑。&lt;br&gt;&lt;br&gt;如果是文档写得不周全，那就尽量写得周全些；如果是缺乏沟通，那就在协作时多设立沟通会；如果是需求总会变动，那就研究需求变动的根本原因，把它大事化小小事化了。&lt;br&gt;&lt;br&gt;关于产品技术协作，在我们公司，是设置了一套复盘机制的。每次出现大的问题，都会在解决之后，召集一次大会，所有相关人员加产品和技术的总负责人都在场的情况下，把事情说清楚，搞明白原委，并且会上要制定解决方案。&lt;br&gt;&lt;br&gt;经过一两个月的尝试，我们发现，大多数的坑都是同样的原因，我们就重点攻克这个难点，慢慢让坑变少，原来的大坑也变小了。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;希望能帮到你。</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic2.zhimg.com/e2ed02772ff267f073c695e2e022acf5_200x112.png" data-rawwidth="692" data-rawheight="458" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic2.zhimg.com/e2ed02772ff267f073c695e2e022acf5_r.png">
<b>1. 搞明白基本的一些技术背景和技术概念</b> 产品经理需不需要懂技术是老生常谈的问题，我的回答是肯定要懂，关键在于，懂的技术是怎么样的技术。 懂技术并不是就要能自己成为架构师、自己成为工程师，又可以规划技术架构又能实现产品功能。懂技术是要明白<b>技术…</b>

<a href="/question/41618379/answer/98152613" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/41618379/answer/98152613">发布于 2016-04-30</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-8854785"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>8 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="0">
<meta name="disableCopyAvatar" content="https://pic2.zhimg.com/3ccc6a72c77b13111353777cb33c3659_s.jpg">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-6" target="_blank" class="meta-item copyright">禁止转载</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="397" data-type="Answer">
<link itemprop="url" href="/question/38100109/answer/75190865">
<meta itemprop="answer-id" content="25499877" />
<meta itemprop="answer-url-token" content="75190865" />
<meta itemprop="answerCount" content="37" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/38100109" target="_blank" data-id="7447308" data-za-element-name="Title">
近几年前端工程师挺火，但是深入讲，前端工程师都能干什么？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/38100109/answer/75190865">
<!-- <meta itemprop="answer-id" content="25499877">
<meta itemprop="answer-url-token" content="75190865"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>224</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">224</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$stein.cun"
target="_blank" href="/people/stein.cun"
>寸志</a></span><span title="不同凡想，心成伟事。" class="bio">
不同凡想，心成伟事。
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="224" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">224</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="7447308" data-action="/answer/content" data-author-name="寸志" data-entry-url="/question/38100109/answer/75190865">

<textarea hidden class="content">上天入地，无所不能！&lt;br&gt;-----------------------&lt;br&gt;+Node.js 可以开发服务器、API，当服务端工程师&lt;br&gt;+Hybrid、React Native 可以开发移动应用，当移动应用工程师&lt;br&gt;+nw.js、electron、React Desktop 可以开发桌面应用，当桌面应用工程师&lt;br&gt;+Canvas、OpenGL Unity 可以开发游戏，当游戏开发工程师&lt;br&gt;+Sketch、FramerJS 可以搞设计、搞原型，当交互设计师&lt;br&gt;+Ruff 可以搞嵌入式开发，做嵌入式开发工程师 | 来自评论区  &lt;a data-hash=&quot;5e1477968b4941c0cf20840aa0987234&quot; href=&quot;//www.zhihu.com/people/5e1477968b4941c0cf20840aa0987234&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@极光无限&quot; data-hovercard=&quot;p$b$5e1477968b4941c0cf20840aa0987234&quot;&gt;@极光无限&lt;/a&gt;&lt;br&gt;+Cylon、Nodebots、Robotjs 可以做硬件开发，做硬件工程师 | 来自评论区 &lt;a data-hash=&quot;856251f0224cd0a8040ea32d0aec69ce&quot; href=&quot;//www.zhihu.com/people/856251f0224cd0a8040ea32d0aec69ce&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@舒乐熊&quot; data-hovercard=&quot;p$b$856251f0224cd0a8040ea32d0aec69ce&quot;&gt;@舒乐熊&lt;/a&gt;&lt;br&gt;-----------------------&lt;br&gt;欢迎补充</textarea>


<div class="zh-summary summary clearfix">

上天入地，无所不能！ ----------------------- +Node.js 可以开发服务器、API，当服务端工程师 +Hybrid、React Native 可以开发移动应用，当移动应用工程师 +nw.js、electron、React Desktop 可以开发桌面应用，当桌面应用工程师 +Canvas、OpenGL Unity 可…

<a href="/question/38100109/answer/75190865" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-12-04" target="_blank" href="/question/38100109/answer/75190865">编辑于 2015-12-10</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-7447308"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>36 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="398" data-type="Answer">
<link itemprop="url" href="/question/34449620/answer/58843662">
<meta itemprop="answer-id" content="18946291" />
<meta itemprop="answer-url-token" content="58843662" />
<meta itemprop="answerCount" content="80" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/34449620" target="_blank" data-id="5986220" data-za-element-name="Title">
如何评价阮一峰关于前端工具变化快的言论？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/34449620/answer/58843662">
<!-- <meta itemprop="answer-id" content="18946291">
<meta itemprop="answer-url-token" content="58843662"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>224</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">224</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$wj1s"
target="_blank" href="/people/wj1s"
>王健</a></span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="224" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">224</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="5986220" data-action="/answer/content" data-author-name="王健" data-entry-url="/question/34449620/answer/58843662">

<textarea hidden class="content">最近被问到了类似的问题，感觉学的速度赶不上技术演进的速度。我的理解是，技术的分布有两个特点：&lt;b&gt;枣核型&lt;/b&gt;和&lt;b&gt;网状结构&lt;/b&gt;。&lt;br&gt;&lt;br&gt;&lt;b&gt;枣核型&lt;/b&gt;是指越靠近底层（语言，算法，数据结构，http，tcp……）和越靠近高层（分层，组件，概念，理论，模式，经验，思想，平衡）的知识和经验越少且稳定。而越靠近中间（框架，工具）越多且不稳定。&lt;br&gt;&lt;br&gt;&lt;b&gt;网状结构&lt;/b&gt;是指计算机的技术没有一个线性的学习路线，所有的知识和技术都是一个网状中的节点，之间相互连接（这也是为什么刚入行的人很纠结的原因，东西太多，不知道学什么，与校园中的熟悉的明确的线性学习路径不一样），这就造成了一开始学东西很难很慢，越学越快的原因，因为之后大部分新技术的学习只是与自己的知识网中的其他已知节点之间建立关联即可。&lt;br&gt;&lt;br&gt;所以对于一开始如何学习的问题，我给的建议是：&lt;br&gt;&lt;ol&gt;&lt;li&gt;将时间重点投入到底层和高层的知识建设中，中间层次的工具和框架用到什么学什么，主要目的还是丰富和实践底层以及高层知识体系。 &lt;/li&gt;&lt;li&gt;多学多用多实践多思考多总结，不着急速成，不强求最新最时髦，静心培养建设自己的知识网状体系。&lt;/li&gt;&lt;/ol&gt;</textarea>


<div class="zh-summary summary clearfix">

最近被问到了类似的问题，感觉学的速度赶不上技术演进的速度。我的理解是，技术的分布有两个特点：<b>枣核型</b>和<b>网状结构</b>。 <b>枣核型</b>是指越靠近底层（语言，算法，数据结构，http，tcp……）和越靠近高层（分层，组件，概念，理论，模式，经验，思想，平衡）的知识…

<a href="/question/34449620/answer/58843662" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-08-12" target="_blank" href="/question/34449620/answer/58843662">编辑于 2015-08-13</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-5986220"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>20 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="399" data-type="Answer">
<link itemprop="url" href="/question/26715219/answer/33789051">
<meta itemprop="answer-id" content="8902953" />
<meta itemprop="answer-url-token" content="33789051" />
<meta itemprop="answerCount" content="19" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/26715219" target="_blank" data-id="2868993" data-za-element-name="Title">
前端配色有哪些原则和技巧？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/26715219/answer/33789051">
<!-- <meta itemprop="answer-id" content="8902953">
<meta itemprop="answer-url-token" content="33789051"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>224</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">224</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$ovilia"
target="_blank" href="/people/ovilia"
>羡辙</a></span><span title="前端空城师 http://zhangwenli.com" class="bio">
前端空城师 <a href="//link.zhihu.com/?target=http%3A//zhangwenli.com" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">zhangwenli.com</span><span class="invisible"></span><i class="icon-external"></i></a>
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="224" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">224</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="2868993" data-action="/answer/content" data-author-name="羡辙" data-entry-url="/question/26715219/answer/33789051">

<textarea hidden class="content">首先，我不大认同 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//paletton.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Paletton - The Color Scheme Designer&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 是适合题主的很好的配色工具。就以 &lt;a data-hash=&quot;766a84590614270ad6e4cc2dd0fbfc12&quot; href=&quot;//www.zhihu.com/people/766a84590614270ad6e4cc2dd0fbfc12&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@Jasin Yip&quot; data-tip=&quot;p$b$766a84590614270ad6e4cc2dd0fbfc12&quot; data-hovercard=&quot;p$b$766a84590614270ad6e4cc2dd0fbfc12&quot;&gt;@Jasin Yip&lt;/a&gt; 的答案中的几个图为例（不是想吐槽他啊抱歉抱歉╮(╯_╰)╭），&lt;b&gt;难道真的只有我一个人觉得这样的配色其实很糟糕吗？&lt;/b&gt;&lt;br&gt;其实我也是用过这个网站来配色的，早在它还叫 color scheme 的年代……但是配出来的颜色真叫捉急啊！虽然人家也是根据色彩理论，什么互补色、相近色地帮你配，但是总觉得放在一起很不和谐啊！&lt;br&gt;&lt;br&gt;而且，这个网站最大的缺点恰恰是和初学者容易犯的错误是一致的，那就是：&lt;b&gt;过度地使用颜色&lt;/b&gt;。&lt;br&gt;你真的需要三组颜色吗？你真的需要五个色阶吗？&lt;br&gt;就算是，作为初学者，你觉得你真的能驾驭这十五个颜色吗？&lt;br&gt;你真的不会做出这样的网页？&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/62ae1ccfa02d1db784e25d966e59de2e_b.jpg&quot; data-rawwidth=&quot;800&quot; data-rawheight=&quot;600&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;800&quot; data-original=&quot;https://pic3.zhimg.com/62ae1ccfa02d1db784e25d966e59de2e_r.jpg&quot;&gt;如果你觉得这配色和你做过的似曾相识，甚至觉得美翻了，那么我也是醉了……&lt;br&gt;&lt;br&gt;所以啊，正确的配色网站应该戳这里：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//color.adobe.com/zh/explore/most-popular/%3Ftime%3Dall&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Adobe Color CC&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;当然，不保证每个都是很和谐的，但是至少大部分看上去都很高大上啊：&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/bba71123c9cba9b7acd90e00d7f606be_b.jpg&quot; data-rawwidth=&quot;997&quot; data-rawheight=&quot;226&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;997&quot; data-original=&quot;https://pic3.zhimg.com/bba71123c9cba9b7acd90e00d7f606be_r.jpg&quot;&gt;&lt;br&gt;下面进入正文，对于初学者的配色的原则和技巧。&lt;br&gt;在此声明，这里说的配色原则完全出自个人经验，主要是给没什么色彩概念的初学者提供建议，大师当然可以游走于规则之外，但我们这种程序猿出身的外行还是先知道门道的好。&lt;br&gt;&lt;br&gt;&lt;b&gt;少用色彩&lt;/b&gt;&lt;br&gt;“今天在知乎上看到一个前端大神的回答啦~ 我学会配色啦~~~ 看我配出来的网站多棒呀！”于是就设计出了以下这样惨不忍睹的网页……&lt;br&gt;（感觉是初学者典型的作品！为了博赞，我牺牲一下，把我以前配的惨不忍睹的页面拿来给大家吸取点教训……）&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/7b346b17012c5c12644c05f6ed8a538f_b.jpg&quot; data-rawwidth=&quot;450&quot; data-rawheight=&quot;424&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;450&quot; data-original=&quot;https://pic4.zhimg.com/7b346b17012c5c12644c05f6ed8a538f_r.jpg&quot;&gt;&lt;br&gt;初学者切忌用很多颜色把页面搞得“很有特色”，还是从一些比较邻近色用起吧，比如改改饱和度之类的。&lt;br&gt;这里说的“少用色彩”并不是说用邻近色就比互补色和谐，而是说初学者驾驭不来啊！就比如上图的红色和黄色如果用得得体的话，其实也可以是非常和谐的。所以&lt;b&gt;其实这个问题不仅仅是配色能解决的&lt;/b&gt;。&lt;br&gt;简单地说，对于初学者，就&lt;b&gt;老老实实地用白色或者非常浅的灰色作为背景色，其他地方小面积地使用一到两种颜色&lt;/b&gt;，这是比较保险的做法。&lt;br&gt;&lt;br&gt;&lt;b&gt;如果要使用彩色的背景，那么不要使用纯度过高（即非常鲜艳）的颜色。&lt;/b&gt;&lt;br&gt;比如这样的颜色&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/f7f011abb672bdc302b01478d72d75fb_b.jpg&quot; data-rawwidth=&quot;1046&quot; data-rawheight=&quot;612&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1046&quot; data-original=&quot;https://pic4.zhimg.com/f7f011abb672bdc302b01478d72d75fb_r.jpg&quot;&gt;驾驭起来就要比&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/1accbee3f951c159f04bbcd13e341c81_b.jpg&quot; data-rawwidth=&quot;1039&quot; data-rawheight=&quot;614&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1039&quot; data-original=&quot;https://pic2.zhimg.com/1accbee3f951c159f04bbcd13e341c81_r.jpg&quot;&gt;容易得多。&lt;br&gt;顺便说一句，这种纯度不高的颜色（vibrant colours）还是现在流行的一种设计风格呢~&lt;br&gt;&lt;br&gt;如果是个人网站或者是比较个性化的网站，那么颜色鲜明些还无所谓。&lt;br&gt;比如我的个人网站：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//zhangwenli.com/blog&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Blog of Wenli Zhang&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; （请原谅我又来做广告了……）&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/c6bc83953582d8ce787363493cf459fc_b.jpg&quot; data-rawwidth=&quot;1349&quot; data-rawheight=&quot;614&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1349&quot; data-original=&quot;https://pic1.zhimg.com/c6bc83953582d8ce787363493cf459fc_r.jpg&quot;&gt;虽然我很喜欢这个配色，但是还是会有人说，这个不好看啦！不过我无所谓啊，不好看就别看好了~&lt;br&gt;但是如果是很多人都会用的网站，那么用一个彩色的背景就非常危险了，或许会让它损失很多用户。所以你会发现，那些各种 SNS 好像都没什么设计感啊，都是傻傻的白色啊灰色的。其实这是大智若愚啊，颜色如果能愉悦观者多看两眼，那么就算是成功的了；&lt;b&gt;千万别让你的颜色喧宾夺主，毕竟人家是来看内容而不是看颜色的&lt;/b&gt;。所以别为了展示你的配色能力而大手一挥~ （希望我的个人主页没有打脸……）&lt;br&gt;&lt;br&gt;最后提一句，我也看过不少色彩方面的书，虽然不能说完全没有帮助，但至少没有明显感觉到学到什么，所以这里也不特别推荐了。我觉得最重要的不是配色好不好，还是那句话，这不是配色本身能决定的问题。强烈建议大家多看优秀的设计作品，最后推荐两个设计类常见的网站，大家或许都听说过，不过坚持看作品很重要！&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.behance.net/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;behance.net/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//dribbble.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;dribbble.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic3.zhimg.com/62ae1ccfa02d1db784e25d966e59de2e_200x112.jpg" data-rawwidth="800" data-rawheight="600" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic3.zhimg.com/62ae1ccfa02d1db784e25d966e59de2e_r.jpg">
首先，我不大认同 <a href="//link.zhihu.com/?target=http%3A//paletton.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer">Paletton - The Color Scheme Designer<i class="icon-external"></i></a> 是适合题主的很好的配色工具。就以 <a data-hash="766a84590614270ad6e4cc2dd0fbfc12" href="//www.zhihu.com/people/766a84590614270ad6e4cc2dd0fbfc12" class="member_mention" data-editable="true" data-title="@Jasin Yip" data-tip="p$b$766a84590614270ad6e4cc2dd0fbfc12" data-hovercard="p$b$766a84590614270ad6e4cc2dd0fbfc12">@Jasin Yip</a> 的答案中的几个图为例（不是想吐槽他啊抱歉抱歉╮(╯_╰)╭），<b>难道真的只有我一个人觉得这样的配色其实很糟糕吗？</b> 其实我也是用过这个网站来配色的，…

<a href="/question/26715219/answer/33789051" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2014-11-21" target="_blank" href="/question/26715219/answer/33789051">编辑于 2014-11-23</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-2868993"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>19 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="400" data-type="Answer">
<link itemprop="url" href="/question/20391668/answer/14997295">
<meta itemprop="answer-id" content="1124091" />
<meta itemprop="answer-url-token" content="14997295" />
<meta itemprop="answerCount" content="23" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/20391668" target="_blank" data-id="337029" data-za-element-name="Title">
前端工程师应该对 HTTP 了解到什么程度？从哪些途径去熟悉更好？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/20391668/answer/14997295">
<!-- <meta itemprop="answer-id" content="1124091">
<meta itemprop="answer-url-token" content="14997295"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>223</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">223</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$catchen"
target="_blank" href="/people/catchen"
>Cat Chen</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/catchen#hilightbadge" target="_blank">程序员、前端开发、JavaScript话题优秀回答者</a></span>



<span title="上知乎，求欢乐" class="bio">
上知…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="223" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">223</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="337029" data-action="/answer/content" data-author-name="Cat Chen" data-entry-url="/question/20391668/answer/14997295">

<textarea hidden class="content">我个人认为如果前端工程师想走技术路线的话（也就是长远目标是资深前端工程师和架构师），那必须充分了解 HTTP。&lt;br&gt;&lt;br&gt;作为一位熟练的前端工程师，至少应该能在调试 HTTP 时毫无障碍。你要轻松看明白捕获回来的 HTTP 请求，并且知道是不是其中某个地方有问题导致出现你想要修复的 bug，如何处理能够最终修复这个 bug。常见的问题包括，某些必要的 header 字段没有设置，或者设置得不正确，还有就是编码方式不正确。可以说调试往往是前端工程师接触到 HTTP 最多的地方。&lt;br&gt;&lt;br&gt;如果你已经开始做前后端交互 API 的设计工组，要考虑是不是把 API 设计为符合 REST，这时候你必须非常熟悉 HTTP 协议。各种状态码和 header 字段分别是用来干什么的，你都需要很清楚，绝对不能重复发明轮子。同时还要考虑如何传输数据更佳高效，这时候你就要设计合理的 cache 规则。&lt;br&gt;&lt;br&gt;总之，HTTP 往往是前端工程师最容易忽略掉的一块。很多人觉得前端就是 HTML、CSS、JavaScript。对比起算法和数据结构来说，前端忽略 HTTP 的后果更严重。有时间的话，建议读 RFC 2616，至少挑重点来读。还有时间可以看看 Roy Fielding 那篇关于 REST 的论文。</textarea>


<div class="zh-summary summary clearfix">

我个人认为如果前端工程师想走技术路线的话（也就是长远目标是资深前端工程师和架构师），那必须充分了解 HTTP。 作为一位熟练的前端工程师，至少应该能在调试 HTTP 时毫无障碍。你要轻松看明白捕获回来的 HTTP 请求，并且知道是不是其中某个地方有问题导致…

<a href="/question/20391668/answer/14997295" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2012-08-01" target="_blank" href="/question/20391668/answer/14997295">编辑于 2012-08-01</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-337029"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>12 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="zm-invite-pager">

<span><a href="?page=19">上一页</a></span>





<span><a href="?page=1">1</a></span>

<span>...</span>



<span><a href="?page=18">18</a></span>



<span><a href="?page=19">19</a></span>



<span class="zg-gray-normal">20</span>



<span><a href="?page=21">21</a></span>



<span><a href="?page=22">22</a></span>



<span>...</span>

<span><a href="?page=50">50</a></span>



<span><a href="?page=21">下一页</a></span>

</div>

</div>
</div>

</div>
</div>


<div class="zu-main-sidebar" data-za-module="RightSideBar">

<div class="zm-side-section">
<div class="zm-side-section-inner">
<div class="topic-header-side zm-entry-head-wrap">

<div class="clearfix"><div id="zh-topic-side-head">

<a href="javascript:;" name="focus" class="zg-mr10 zu-entry-focus-button zg-btn-white" id="tf-225">取消关注</a>

<div class="zm-topic-side-followers-info">

<a href="/topic/19550901/followers"><strong>108703</strong></a> 人关注了该话题

</div>
</div></div>
<div style="margin-top: 15px;">

<a class="zg-link-litblue-normal js-may-disable" href="/topic/19550901/organize">组织</a>
<span class="zg-bull">•</span>
<a class="zg-link-litblue-normal js-may-disable" href="/topic/19550901/manage">管理</a>
<span class="zg-bull">•</span>

<a class="zg-link-litblue-normal" href="/topic/19550901/log">日志</a>
</div>

</div>
</div>
</div>

<div class="zm-side-section">
<div class="zm-side-section-inner">
<h3 class="zm-topic-side-organize-title">描述
</h3>
<div id="zh-topic-desc" data-resourceid="225" data-action="/topic-introduction">
<div class="zm-editable-content" data-editable-maxlength="130" ></div>
</div>
</div>
</div>
<div class="shameimaru-placeholder" data-loc="topic_up" data-params='{&quot;topic_token&quot;: &quot;19550901&quot;}'></div>

<div class="zm-side-section" id="zh-topic-side-parents-list">
<div class="zm-side-section-inner parent-topic">
<h3 class="zm-topic-side-organize-title">父话题
</h3>
<div class="clearfix">

<a class="zm-item-tag"
href="/topic/19550516"
data-hovercard="t$b$19550516" data-token="19550516" data-topicid="98" data-za-element-name="Title">
Web 开发
</a>

<a class="zm-item-tag"
href="/topic/19552332"
data-hovercard="t$b$19552332" data-token="19552332" data-topicid="708" data-za-element-name="Title">
软件开发
</a>

<a class="zm-item-tag"
href="/topic/19561719"
data-hovercard="t$b$19561719" data-token="19561719" data-topicid="3839" data-za-element-name="Title">
网站开发
</a>

</div>
</div>
</div>
<div class="zm-side-section" id="zh-topic-side-children-list">
<div class="zm-side-section-inner child-topic">
<h3 class="zm-topic-side-organize-title">子话题
</h3>
<div class="clearfix">

<a class="zm-item-tag"
href="/topic/19552521"
data-hovercard="t$b$19552521" data-token="19552521" data-topicid="769" data-za-element-name="Title">
JavaScript
</a>

<a class="zm-item-tag"
href="/topic/19551326"
data-hovercard="t$b$19551326" data-token="19551326" data-topicid="369" data-za-element-name="Title">
CSS
</a>

<a class="zm-item-tag"
href="/topic/19573936"
data-hovercard="t$b$19573936" data-token="19573936" data-topicid="7912" data-za-element-name="Title">
前端工程师
</a>

<a class="zm-item-tag"
href="/topic/19551323"
data-hovercard="t$b$19551323" data-token="19551323" data-topicid="367" data-za-element-name="Title">
HTML
</a>

<a class="zm-item-tag"
href="/topic/19583739"
data-hovercard="t$b$19583739" data-token="19583739" data-topicid="11152" data-za-element-name="Title">
前端性能优化
</a>

<a class="zm-item-tag"
href="/topic/19806306"
data-hovercard="t$b$19806306" data-token="19806306" data-topicid="87560" data-za-element-name="Title">
前端框架
</a>

<a class="zm-item-tag"
href="/topic/19621319"
data-hovercard="t$b$19621319" data-token="19621319" data-topicid="23778" data-za-element-name="Title">
前端开发框架和库
</a>

<a class="zm-item-tag"
href="/topic/19590813"
data-hovercard="t$b$19590813" data-token="19590813" data-topicid="13512" data-za-element-name="Title">
前端入门
</a>

<a class="zm-item-tag"
href="/topic/19597369"
data-hovercard="t$b$19597369" data-token="19597369" data-topicid="15721" data-za-element-name="Title">
浏览器兼容性
</a>

<a class="zm-item-tag"
href="/topic/19566907"
data-hovercard="t$b$19566907" data-token="19566907" data-topicid="5573" data-za-element-name="Title">
Div+CSS
</a>

</div>

<a class="zg-link-litblue zm-topic-side-title-link" href="/topic/19550901/organize/entire#anchor-children-topic">共有 31 个子话题，查看话题结构 » </a>

</div>
</div>


<div class="zm-side-section">
<div class="zm-side-section-inner" id="zh-topic-top-answerer">
<h3>

<a href="/topic/19550901/top-writer" class='SidebarListNav-sideLink Link--light' target="_blank">
查看全部 »
</a>

活跃回答者</h3>
<div class='zm-topic-side-person-list'>

<div class="zm-topic-side-person-item">
<a href="/people/sharpmaster" data-hovercard="p$t$sharpmaster" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic1.zhimg.com/da8e974dc_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/sharpmaster" data-hovercard="p$t$sharpmaster" class="author-link">徐飞</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="三流程序员，二流架构师">三</span>流程序员，二流架构师

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/sharpmaster/topic/19550901/answers">在该话题下有 91 个回答，8980 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/fouber" data-hovercard="p$t$fouber" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic1.zhimg.com/ecfeb2b0c_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/fouber" data-hovercard="p$t$fouber" class="author-link">张云龙</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="全民直播CTO">全</span>民直播CTO

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/fouber/topic/19550901/answers">在该话题下有 30 个回答，9722 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/evanyou" data-hovercard="p$t$evanyou" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic4.zhimg.com/7be980a0f_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/evanyou" data-hovercard="p$t$evanyou" class="author-link">尤雨溪</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="不会搞艺术的程序员不是好设计师">不</span>会搞艺术的程序员不是好设计师

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/evanyou/topic/19550901/answers">在该话题下有 128 个回答，12K 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/kejun" data-hovercard="p$t$kejun" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic2.zhimg.com/191ec5daa9b4d6931eed0eba8a9cf39d_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/kejun" data-hovercard="p$t$kejun" class="author-link">张克军</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="豆瓣前端工程师">豆</span>瓣前端工程师

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/kejun/topic/19550901/answers">在该话题下有 40 个回答，3330 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/he-shi-jun" data-hovercard="p$t$he-shi-jun" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic1.zhimg.com/da8e974dc_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/he-shi-jun" data-hovercard="p$t$he-shi-jun" class="author-link">贺师俊</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="Web开发者">W</span>eb开发者

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/he-shi-jun/topic/19550901/answers">在该话题下有 396 个回答，14K 赞同</a>


</div>
</div>
</div>


</div>
</div>
</div>


<div class="shameimaru-placeholder" data-loc="topic_down" data-params='{&quot;topic_token&quot;: &quot;19550901&quot;}'></div>

</div>


</div>


<div id="zh-footer" class="zh-footer">
<div class="content zg-wrap clearfix">
<ul>

<li><a href="https://liukanshan.zhihu.com" target="_blank">刘看山</a></li>

<li><a href="/question/19581624" target="_blank">知乎指南</a></li>
<li><a href="javascript:;" id="js-feedback-button">建议反馈</a></li>

<li><a href="/app" target="_blank">移动应用</a></li>
<li><a href="/careers">加入知乎</a></li>
<li><a href="/terms" target="_blank">知乎协议</a></li>
<li><a href="/jubao" target="_blank">举报投诉</a></li>
<li><a href="/contact">联系我们</a></li>

</ul>

<span class="copy">&copy; 2017 知乎</span>

</div>
</div>

<script type="text/json" class="json-inline" data-name="guiders2">{"exclusive-popover":{},"section":{},"editor":[]}</script>
<script type="text/json" class="json-inline" data-name="current_user">["\u6587\u5200\u6c34\u539f","liu-yuan-39-9","https:\/\/pic2.zhimg.com\/56a9754ca686ba7d3b1e725c6452ccd1_s.png","649f8fe7032b205a3cbbbb875135734d","\u534a\u8def\u51fa\u5bb6\u5b66\u5b89\u5353",0,0,true,"174596549@qq.com","http:\/\/mail.qq.com",0,false,false,false,"32745954738176",false,false,false,true,null]</script>
<script type="text/json" class="json-inline" data-name="user_status">[null,null,false]</script>
<script type="text/json" class="json-inline" data-name="env">["zhihu.com","comet.zhihu.com",false,null,false,false]</script>
<script type="text/json" class="json-inline" data-name="permissions">[]</script>


<script type="text/json" class="json-inline" data-name="ga_vars">{"user_created":1378258190000,"now":1486365872000,"abtest_mask":"---------0--------------------","user_attr":[1,0,0,"-",1],"user_hash":"649f8fe7032b205a3cbbbb875135734d"}</script>

<script type="text/json" class="json-inline" data-name="ra-urls">{"Copyright":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/Copyright.98ac6609.js","PayUIApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/PayUIApp.ca78ba78.js","CouponApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/CouponApp.66b486a6.js","PaymentApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/PaymentApp.7f16d61c.js","Community":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/Community.920e484a.js","Report":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/Report.26635627.js","OrgOpHelp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/OrgOpHelp.f1709e97.js","common":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/common.a4dd3236.js","BalanceApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/BalanceApp.14e3a013.js","AnswerWarrant":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/AnswerWarrant.97f134aa.js","CommentApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/CommentApp.7556991d.js"}</script>

<script type="text/json" class="json-inline" data-name="current_topic">[["\u524d\u7aef\u5f00\u53d1","19550901","https:\/\/pic1.zhimg.com\/v2-8e66233f5558e741bad3a8c50b9566c8_s.jpg",225],[["Web \u5f00\u53d1","19550516","https:\/\/pic3.zhimg.com\/891b4f32a_s.jpg"],["\u8f6f\u4ef6\u5f00\u53d1","19552332","https:\/\/pic2.zhimg.com\/185d9c33d_s.jpg"],["\u7f51\u7ad9\u5f00\u53d1","19561719","https:\/\/pic2.zhimg.com\/78645670d_s.jpg"]],1,0,"",0]</script>

<script src="https://static.zhihu.com/static/revved/-/js/vendor.cb14a042.js"></script>
<script src="https://static.zhihu.com/static/revved/-/js/closure/base.6cca0b95.js"></script>

<script src="https://static.zhihu.com/static/revved/-/js/closure/common.31d4e5c0.js"></script>


<script src="https://static.zhihu.com/static/revved/-/js/closure/richtexteditor.71ca49de.js" async></script>
<script src="https://static.zhihu.com/static/revved/-/js/closure/page-main.c075e49f.js"></script>
<meta name="entry" content="ZH.entryT" data-module-id="page-main">

<script type="text/zscript" znonce="edf2ac5500c640c0b3a7d5b784f0b9c8"></script>

<input type="hidden" name="_xsrf" value="b08047425d2b394c9b9106bb47ce2ec8"/>
</body>
</html>