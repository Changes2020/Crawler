<!DOCTYPE html>
<html lang="zh-CN" dropEffect="none" class="no-js topic-pages">
<head>
<meta charset="utf-8" />

<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="renderer" content="webkit" />
<meta http-equiv="X-ZA-Response-Id" content="000c466882c1355a">
<meta http-equiv="X-ZA-Experiment" content="default:None">

<title>前端开发 - 话题精华 - 知乎</title>

<meta name="apple-itunes-app" content="app-id=432274380" />


<meta name="description" content="Web 建站技术中，HTML、HTML5、XHTML、CSS、SQL、JavaScript、PHP、ASP.NET、Web Services 是什么？120839个最新问答，点击查看更多>>" />

<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta http-equiv="mobile-agent" content="format=html5;url=https://www.zhihu.com/topic/19550901/top-answers">
<meta id="znonce" name="znonce" content="43143326a1294c3c9db3c466a9408cc3">



<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-152.87c020b9.png" sizes="152x152">
<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-120.496c913b.png" sizes="120x120">
<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-76.dcf79352.png" sizes="76x76">
<link rel="apple-touch-icon" href="https://static.zhihu.com/static/revved/img/ios/touch-icon-60.9911cffb.png" sizes="60x60">


<link rel="shortcut icon" href="https://static.zhihu.com/static/favicon.ico" type="image/x-icon">

<link rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/static/search.xml" title="知乎" />
<link rel="stylesheet" href="https://static.zhihu.com/static/revved/-/css/z.96020364.css">





<!--[if lt IE 9]>
<script src="https://static.zhihu.com/static/components/respond/dest/respond.min.js"></script>
<link href="https://static.zhihu.com/static/components/respond/cross-domain/respond-proxy.html" id="respond-proxy" rel="respond-proxy" />
<link href="/static/components/respond/cross-domain/respond.proxy.gif" id="respond-redirect" rel="respond-redirect" />
<script src="/static/components/respond/cross-domain/respond.proxy.js"></script>
<![endif]-->
<script src="https://static.zhihu.com/static/revved/-/js/instant.14757a4a.js"></script>

<link rel="canonical" href="https://www.zhihu.com/topic/19550901" />

</head>

<body class="zhi ">




<div role="navigation" class="zu-top" data-za-module="TopNavBar">
<div class="zg-wrap modal-shifting clearfix" id="zh-top-inner">
<a href="/" class="zu-top-link-logo" id="zh-top-link-logo" data-za-c="view_home" data-za-a="visit_home" data-za-l="top_navigation_zhihu_logo">知乎</a>

<div class="top-nav-profile">
<a href="/people/liu-yuan-39-9" class="zu-top-nav-userinfo ">
<span class="name">文刀水原</span>
<img class="Avatar" src="https://pic2.zhimg.com/56a9754ca686ba7d3b1e725c6452ccd1_s.png" srcset="https://pic2.zhimg.com/56a9754ca686ba7d3b1e725c6452ccd1_xs.png 2x" alt="文刀水原" />
<span id="zh-top-nav-new-pm" class="zg-noti-number zu-top-nav-pm-count"
style="visibility:hidden" data-count="0">

</span>
</a>
<ul class="top-nav-dropdown" id="top-nav-profile-dropdown">
<li>
<a href="/people/liu-yuan-39-9">
<i class="zg-icon zg-icon-dd-home"></i>我的主页
</a>
</li>

<li>
<a href="/inbox">
<i class="zg-icon zg-icon-dd-pm"></i>私信
<span id="zh-top-nav-pm-count" class="zu-top-nav-pm-count zg-noti-number"
style="visibility:hidden" data-count="0">

</span>
</a>
</li>
<li>
<a href="/settings">
<i class="zg-icon zg-icon-dd-settings"></i>设置
</a>
</li>
<li>
<a href="/logout">
<i class="zg-icon zg-icon-dd-logout"></i>退出
</a>
</li>
</ul>

</div>



<button class="zu-top-add-question" id="zu-top-add-question">提问</button>


<div role="search" id="zh-top-search" class="zu-top-search">
<form method="GET" action="/search" id="zh-top-search-form" class="zu-top-search-form">



<input type="hidden" name="type" value="content">
<label for="q" class="hide-text">知乎搜索</label><input type="text" class="zu-top-search-input" id="q" name="q" autocomplete="off" value="" maxlength="100" placeholder="搜索你感兴趣的内容...">
<button type="submit" class="zu-top-search-button"><span class="hide-text">搜索</span><span class="sprite-global-icon-magnifier-dark"></span></button>
</form>
</div>



<div id="zg-top-nav" class="zu-top-nav">
<ul class="zu-top-nav-ul zg-clear">

<li class="zu-top-nav-li " id="zh-top-nav-home">
<a class="zu-top-nav-link" href="/" id="zh-top-link-home" data-za-c="view_home" data-za-a="visit_home" data-za-l="top_navigation_home">首页</a>
</li>



<li class="top-nav-topic-selector zu-top-nav-li current" id="zh-top-nav-topic">
<a class="zu-top-nav-link" href="/topic" id="top-nav-dd-topic">话题</a>
</li>

<li class="zu-top-nav-li " id="zh-top-nav-explore">
<a class="zu-top-nav-link" href="/explore">发现</a>
</li>

<li class="top-nav-noti zu-top-nav-li ">
<a class="zu-top-nav-link" href="javascript:;" id="zh-top-nav-count-wrap" role="button"><span class="mobi-arrow"></span>消息</a>
</li>



</ul>
<div class="zu-top-nav-live zu-noti7-popup zg-r5px no-hovercard" id="zh-top-nav-live-new" role="popup" tabindex="0">
<div class="zu-top-nav-live-inner zg-r5px">
<div class="zu-top-live-icon">&nbsp;</div>
<div class="zu-home-noti-inner" id="zh-top-nav-live-new-inner">
<div class="zm-noti7-popup-tab-container clearfix" tabindex="0">
<button class="zm-noti7-popup-tab-item message">
<span class="icon">消息</span>
</button>
<button class="zm-noti7-popup-tab-item user">
<span class="icon">用户</span>
</button>
<button class="zm-noti7-popup-tab-item thanks">
<span class="icon">赞同和感谢</span>
</button>
</div>
</div>
<div class="zm-noti7-frame-border top"></div>
<div class="zm-noti7-frame">
<div class="zm-noti7-content message">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<span class="noti-spinner-loading"></span>
</div>
</div>
</div>
</div>
<div class="zm-noti7-content user" style="display:none;">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<span class="noti-spinner-loading"></span>
</div>
</div>
</div>
</div>
<div class="zm-noti7-content thanks" style="display:none;">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<span class="noti-spinner-loading"></span>
</div>
</div>
</div>
</div>
</div>
<div class="zm-noti7-frame-border bottom"></div>
<div class="zm-noti7-popup-footer">
<a href="/notifications" class="zm-noti7-popup-footer-all zg-right">查看全部 &raquo;</a>
<a href="/settings/notification" class="zm-noti7-popup-footer-set" title="通知设置" ><i class="zg-icon zg-icon-settings"></i></a>
</div>
</div>
</div>

</div>

</div>
</div>


<div class="zu-global-notify" id="zh-global-message" style="display:none">
<div class="zg-wrap">
<div class="zu-global-nitify-inner">
<a class="zu-global-notify-close" href="javascript:;" title="关闭" name="close">x</a>
<span class="zu-global-notify-icon"></span>
<span class="zu-global-notify-msg"></span>
</div>
</div>
</div>




<div class="zg-wrap zu-main clearfix "  role="main">
<div class="zu-main-content">
<div class="zu-main-content-inner">


<div itemscope itemtype="https://schema.org/CreativeWork/Topic">
<div class="topic-avatar" itemprop="image" itemscope itemtype="http://schema.org/ImageObject">
<div>
<a class="zm-entry-head-avatar-link" href="/topic/19550901" id="zh-avartar-edit-form">
<img alt="前端开发" src="https://pic1.zhimg.com/v2-8e66233f5558e741bad3a8c50b9566c8_m.jpg" class="zm-avatar-editor-preview"></a>
<meta itemprop="image" content="https://pic1.zhimg.com/v2-8e66233f5558e741bad3a8c50b9566c8_l.jpg" />
</div>

<span class="zm-entry-head-avatar-edit-button">修改</span>

</div>
<div class="topic-info">
<div class="topic-name" id="zh-topic-title">
<h1 class="zm-editable-content" data-disabled="1">前端开发</h1>
<div class="zm-editable-editor-wrap" style="display:none">
<input type="text" class="zm-editable-editor-input zg-form-text-input" style="width:150px" />
<span class="zm-command">
<a href="javascript:;" name="save" class="zg-btn-blue" style="margin:0 15px;">完成</a>
<a href="javascript:;" name="cancel" class="zm-command-cancel">取消</a>
</span>
</div>
</div>
<a href="#" class="meta-item share-button zg-right" name="share"><i class="z-icon-share"></i>分享</a>


<div class="zm-topic-topbar">
<div class="zm-topic-topbar-nav clearfix">


<ul class="zm-topic-topbar-nav-list zg-left clearfix">






<li class="zm-topic-topbar-nav-list-item">
<a class="zg-link-litblue-normal" href="/topic/19550901/hot">动态</a>
</li>





<li class="zm-topic-topbar-nav-list-item current">
<span>精华</span>
</li>





<li class="zm-topic-topbar-nav-list-item">
<a class="zg-link-litblue-normal" href="/topic/19550901/unanswered">等待回答</a>
</li>



</ul>

</div>

</div>
</div>
<div class="zm-topic-list-container" itemprop="hasPart" itemscope itemtype="http://schema.org/ItemList/QuestionList">
<div class="zu-top-feed-list" id="zh-topic-top-page-list">
<meta itemprop="questionCount" content="36909" />
<meta itemprop="topAnswerCount" content="999" />
<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="441" data-type="Answer">
<link itemprop="url" href="/question/29984607/answer/46326391">
<meta itemprop="answer-id" content="13926799" />
<meta itemprop="answer-url-token" content="46326391" />
<meta itemprop="answerCount" content="130" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/29984607" target="_blank" data-id="4176310" data-za-element-name="Title">
如何评价 Visual Studio Code？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/29984607/answer/46326391">
<!-- <meta itemprop="answer-id" content="13926799">
<meta itemprop="answer-url-token" content="46326391"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>205</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">205</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$alexzhang2015"
target="_blank" href="/people/alexzhang2015"
>alex zhang</a></span><span title="work hard" class="bio">
work hard
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="205" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">205</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="4176310" data-action="/answer/content" data-author-name="alex zhang" data-entry-url="/question/29984607/answer/46326391">

<textarea hidden class="content">看到Visual Studio Code还是蛮激动的，微软这两年来不断开放的姿态，越来越让我们看到微软的情怀和未来。&lt;br&gt;&lt;br&gt;Visual Studio Code的定位应该还是Editor，一个全功能的Editor，通过Editor反推微软的SDK，.NET(开源，跨平台)等产品铺路。&lt;br&gt;&lt;br&gt;&lt;b&gt;Github atom&lt;/b&gt;&lt;br&gt;这个领域最近刚起来的明星是 GItHub的 atom，&lt;br&gt;&lt;blockquote&gt;Atom is a hackable text editor for the 21st century, built on Electron, and based on everything we love about our favorite editors. We designed it to be deeply customizable, but still approachable using the default configuration.&lt;br&gt;&lt;/blockquote&gt;&lt;img src=&quot;https://pic2.zhimg.com/813f9cffe43c144e3726ed111d96dddd_b.jpg&quot; data-rawwidth=&quot;2038&quot; data-rawheight=&quot;1220&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;2038&quot; data-original=&quot;https://pic2.zhimg.com/813f9cffe43c144e3726ed111d96dddd_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Atom &amp;lt;-- Electron&lt;/b&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/atom/electron&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;atom/electron · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;Github 热度超凡的一个项目，electron是整个atom的核心，对于electron可以理解成&lt;br&gt;electron ＝ &lt;a href=&quot;//link.zhihu.com/?target=http%3A//iojs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;io.js&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; + &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.chromium.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Chromium&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;通过electron可以方便的打造基于Web，跨平台的Desktop应用。基于Web的native的接口，得益于io.js的封装，让本来没有本地权限的web能有原生native的权限，Chromium是呈现Web的跨平台基础，这样的完美结合，我们可以将HTML5 CSS JavaScript(AngularJS, React, BootStrap.....)技术完全应用到native desktop app上面，可以看到我们在用这些app的时候完全没有感觉是web的应用，性能特别好。&lt;br&gt;下面是现有一些基于atom的跨平台应用。&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/e1c9264b6eaf9a9f9e7c2866596d6a85_b.jpg&quot; data-rawwidth=&quot;1050&quot; data-rawheight=&quot;422&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1050&quot; data-original=&quot;https://pic2.zhimg.com/e1c9264b6eaf9a9f9e7c2866596d6a85_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Node-WebKit&lt;/b&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/nwjs/nw.js/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;nwjs/nw.js · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;Node-WebKit 现在叫NW&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/e9b4175602649dacce903cf62a2db802_b.jpg&quot; data-rawwidth=&quot;400&quot; data-rawheight=&quot;400&quot; class=&quot;content_image&quot; width=&quot;400&quot;&gt;&lt;br&gt;(Node-WebKit ＝ &lt;a href=&quot;//link.zhihu.com/?target=http%3A//iojs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;https://nodejs.org&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;  + &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.chromium.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Chromium&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;)&lt;br&gt;#########&lt;br&gt;&lt;blockquote&gt;感谢@&lt;a href=&quot;http://www.zhihu.com/people/johnny-wu-45&quot; class=&quot;internal&quot;&gt;Johnny Wu&lt;/a&gt; 指正，&lt;br&gt;Node-WebKit 从0.12开始，改名NW.js 并且使用了新的io.js&lt;img src=&quot;https://pic3.zhimg.com/2a033cc0c932f5e5bb9fb91f48531bd6_b.jpg&quot; data-rawwidth=&quot;598&quot; data-rawheight=&quot;252&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;598&quot; data-original=&quot;https://pic3.zhimg.com/2a033cc0c932f5e5bb9fb91f48531bd6_r.jpg&quot;&gt;所以 NW.js = &lt;a href=&quot;//link.zhihu.com/?target=http%3A//iojs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;io.js&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; + &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.chromium.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Chromium &quot;他们之间的不同是架构不同, 一个是 WebKit Embeded 的思路, 一个是 CEF3 的思路. 前者通过 global context 和 single libuv event loop 来实现, 后者通过 ipc, multiple libuv event loop 来实现. 两者虽然使用上功能相似, 但是架构上区别很大.&quot;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/blockquote&gt;&lt;br&gt;##########&lt;br&gt;&lt;br&gt;Node-WebKit是第一个吃螃蟹的，大致的思路一致，Electron是在NW基础上，用io.js替换node.js。&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/nwjs/nw.js/wiki/List-of-apps-and-companies-using-nw.js&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;List of apps and companies using nw.js · nwjs/nw.js Wiki · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;这一波浪潮来的优点凶，应该是Node.js + Chromium接下来跨平台应用的一致思路了，也许下面的平台就是Chromium，语言就是JavaScript。&lt;br&gt;拿了下去年2014.Q4的Github语言排名&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//githut.info/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GitHut - Programming Languages and GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/9370973d897a47b6e4bbd5beabe9b67b_b.jpg&quot; data-rawwidth=&quot;1658&quot; data-rawheight=&quot;784&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1658&quot; data-original=&quot;https://pic4.zhimg.com/9370973d897a47b6e4bbd5beabe9b67b_r.jpg&quot;&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.indeed.com/jobtrends&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Job Trends | Indeed.com&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/b4ef1cc1fcaf35c6b63e0531abf21129_b.jpg&quot; data-rawwidth=&quot;837&quot; data-rawheight=&quot;608&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;837&quot; data-original=&quot;https://pic2.zhimg.com/b4ef1cc1fcaf35c6b63e0531abf21129_r.jpg&quot;&gt;</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic2.zhimg.com/813f9cffe43c144e3726ed111d96dddd_200x112.jpg" data-rawwidth="2038" data-rawheight="1220" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic2.zhimg.com/813f9cffe43c144e3726ed111d96dddd_r.jpg">
看到Visual Studio Code还是蛮激动的，微软这两年来不断开放的姿态，越来越让我们看到微软的情怀和未来。 Visual Studio Code的定位应该还是Editor，一个全功能的Editor，通过Editor反推微软的SDK，.NET(开源，跨平台)等产品铺路。 <b>Github atom</b> 这个领域最…

<a href="/question/29984607/answer/46326391" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-04-30" target="_blank" href="/question/29984607/answer/46326391">编辑于 2015-11-21</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-4176310"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>16 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="442" data-type="Answer">
<link itemprop="url" href="/question/51502849/answer/126133407">
<meta itemprop="answer-id" content="45959502" />
<meta itemprop="answer-url-token" content="126133407" />
<meta itemprop="answerCount" content="23" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/51502849" target="_blank" data-id="12818827" data-za-element-name="Title">
如何评价Facebook推出的JavaScript模块管理器yarn？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/51502849/answer/126133407">
<!-- <meta itemprop="answer-id" content="45959502">
<meta itemprop="answer-url-token" content="126133407"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>205</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">205</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$he-shi-jun"
target="_blank" href="/people/he-shi-jun"
>贺师俊</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/he-shi-jun#hilightbadge" target="_blank">JavaScript、前端开发、CSS话题优秀回答者</a></span>



<span title="Web开发者" class="bio">
Web开发者
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="205" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">205</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="12818827" data-action="/answer/content" data-author-name="贺师俊" data-entry-url="/question/51502849/answer/126133407">

<textarea hidden class="content">刚才粗看了下文档。&lt;br&gt;&lt;br&gt;其实npm client的最大问题地球人都知道，就是慢。以这点来说，yarn其实并不是最快的……&lt;br&gt;&lt;br&gt;&lt;br&gt;以下是拿我们某个大项目的测试：&lt;br&gt;&lt;br&gt;cnpm在无缓存下全新安装：&lt;br&gt;real	0m53.079s&lt;br&gt;user	0m41.432s&lt;br&gt;sys	0m19.383s&lt;br&gt;&lt;br&gt;无更新重新安装：&lt;br&gt;real	0m11.099s&lt;br&gt;user	0m2.907s&lt;br&gt;sys	0m1.385s&lt;br&gt;&lt;br&gt;再次全新安装：&lt;br&gt;real	0m44.707s&lt;br&gt;user	0m35.417s&lt;br&gt;sys	0m16.281s&lt;br&gt;&lt;br&gt;-----------------------------------------------------------------------------------&lt;br&gt;&lt;br&gt;yarn在无缓存下全新安装（公平起见，我把registry换成了淘宝的镜像）：&lt;br&gt;real	1m49.653s&lt;br&gt;user	1m30.335s&lt;br&gt;sys	0m48.305s&lt;br&gt;&lt;br&gt;无更新重新安装：&lt;br&gt;real	0m0.915s&lt;br&gt;user	0m0.672s&lt;br&gt;sys	0m0.141s&lt;br&gt;&lt;br&gt;再次全新安装：&lt;br&gt;real	1m4.497s&lt;br&gt;user	0m52.680s&lt;br&gt;sys	0m33.219s&lt;br&gt;&lt;br&gt;删除lock文件后重新安装（像切换branch可能发生lock改变）：&lt;br&gt;real	0m34.586s&lt;br&gt;user	0m28.289s&lt;br&gt;sys	0m6.394s&lt;br&gt;&lt;br&gt;&lt;br&gt;以上测试中cnpm比yarn快很多。只有在有lock文件时，yarn直接就结束了。而cnpm没有lock（也不支持shrinkwrap），因此无法享受这样的秒完，不过即使在这样不利的情况下（意味着cnpm要重新解析一遍所有依赖），在我们这个有超过1000个依赖，总量达392M的node_modules下，也只花了10秒。&lt;br&gt;&lt;br&gt;&lt;br&gt;就速度这点来说，cnpm完胜，然而阿里的同学们的宣传完败给facebook……&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;下面讲一下yarn和npm和cnpm不同的地方：&lt;br&gt;&lt;br&gt;1. yarn使用了和npm3一样的模块布局，不像cnpm是用link的方式。cnpm的方式能在安装依赖时获得更快的速度（因为只需要做link），代价是比较难实现shrinkwrap（但是并不是不能实现类似yarn的lock）。&lt;br&gt;&lt;br&gt;2. yarn实现了lock。lock看上去比npm的shrinkwrap要更简单一点，但是作用是类似的。cnpm没有类似的功能。yarn的一个重要改变是，它默认会生成lock，而npm是默认不生成。这是一个巨大的策略改变。像facebook这样的公司默认使用lock并手动管理依赖版本升级是非常正常的，但是对于一般开源项目是否默认使用lock是好的策略？这改变了npm生态的默认习惯，后果暂时无法评估。&lt;br&gt;&lt;br&gt;3. yarn改变了一些npm命令的名称，比如 yarn add/remove，感觉上比 npm 原本的 install/uninstall 要更清晰。不过这只是很小的改进，且yarn也没有提供如 npm i 这样的缩写，所以我个人觉得其实也没多好。&lt;br&gt;yarn还提供了version命令，交互式的依赖版本升级工具。还没有很多经验，难以确定这个工具到底是不是比ncu好。&lt;br&gt;yarn还使用了deterministic的算法确保无论安装顺序如何，结果一致。而npm3下包的最终布局与安装顺序有关。facebook的人说这可能造成“works on my machine”的bug，不过我个人从来没有遇到过也没有听说过这样的bug。且npm3的不一致只出现在中途加减包的情况，一次干净的安装其实总是得到一样的结果的。所以至少就我所知，我也没觉得这是一个问题。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;结论：从目前看到的情况，在已经有 cnpm 的情况下，我认为 yarn 提供的额外价值并不特别高。当然，国外社区的大部分人并不知道 cnpm 的存在，对于这些同志 yarn 就是救星了（然而实际上还有pnpm/ied等其他第三方npm client）。讲真，阿里同志的宣传要加强啊！最好能联合国内其他公司一起宣传宣传。否则 facebook 吹个牛就马上蹭蹭蹭长星，真是没意义。当然，我觉得lock功能还是有用的，建议 &lt;a data-hash=&quot;b1cce41da90910fb3e359ee8b57c1e2b&quot; href=&quot;//www.zhihu.com/people/b1cce41da90910fb3e359ee8b57c1e2b&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@死马&quot; data-hovercard=&quot;p$b$b1cce41da90910fb3e359ee8b57c1e2b&quot;&gt;@死马&lt;/a&gt; 、 &lt;a data-hash=&quot;84ab3135f66f5260f26f1253bf9b7657&quot; href=&quot;//www.zhihu.com/people/84ab3135f66f5260f26f1253bf9b7657&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@苏千&quot; data-hovercard=&quot;p$b$84ab3135f66f5260f26f1253bf9b7657&quot;&gt;@苏千&lt;/a&gt; 赶紧加上。当然，指望 cnpm 能跟 yarn 一样流行，不太现实。毕竟大部分人（特别是react党）是 facebook 的脑残粉。我建议你们最好马上 fork 一个 cyarn （内部就用 cnpm，但是命令兼容 yarn 就好），这是釜底抽薪的办法。&lt;br&gt;&lt;br&gt;BTW，我个人其实希望facebook的人把精力花在babel上才是正道。 &lt;br&gt;&lt;br&gt;&lt;br&gt;以上。</textarea>


<div class="zh-summary summary clearfix">

刚才粗看了下文档。 其实npm client的最大问题地球人都知道，就是慢。以这点来说，yarn其实并不是最快的…… 以下是拿我们某个大项目的测试： cnpm在无缓存下全新安装： real	0m53.079s user	0m41.432s sys	0m19.383s 无更新重新安装： real	0m11.099s user…

<a href="/question/51502849/answer/126133407" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-10-12" target="_blank" href="/question/51502849/answer/126133407">编辑于 2016-10-12</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-12818827"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>42 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="443" data-type="Answer">
<link itemprop="url" href="/question/50695646/answer/122233880">
<meta itemprop="answer-id" content="44386767" />
<meta itemprop="answer-url-token" content="122233880" />
<meta itemprop="answerCount" content="58" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/50695646" target="_blank" data-id="12494874" data-za-element-name="Title">
如何看待腾讯等大公司前端分设JS与重构两个岗位对公司和对个人的影响？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/50695646/answer/122233880">
<!-- <meta itemprop="answer-id" content="44386767">
<meta itemprop="answer-url-token" content="122233880"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>205</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">205</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$lifesinger"
target="_blank" href="/people/lifesinger"
>玉伯</a></span><span title="因上努力，果上随缘。" class="bio">
因上努力，果上随缘。
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="205" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">205</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="12494874" data-action="/answer/content" data-author-name="玉伯" data-entry-url="/question/50695646/answer/122233880">

<textarea hidden class="content">没去过腾讯，回答的内容可能有不对的地方，欢迎随时指正。&lt;br&gt;&lt;br&gt;我一定程度上蛮支持腾讯的做法，但换个说辞，变成重构设计师与产品工程师。腾讯的 JS 脚本工程师，据我所知，与阿里提倡的全栈工程师（狭义全栈，指同时熟悉前后端开发的 Web 工程师），在要求上是类似的。真正的全栈不可能（从来没见过），但将范围缩小到 Web 产品研发领域，同时精通 Web 后端开发与浏览器 JS 开发的人，还是大有人在。腾讯的脚本工程师，阿里的全栈工程师，个人觉得都是产品工程师，掌握着实现一个 Web 产品的广度技术栈，效率高，视野广，无论是创业公司还是大公司，都急切需要。&lt;br&gt;&lt;br&gt;有争议的是重构工程师，实现产品设计稿中的 DOM 与 CSS 两部分。认识腾讯的一些重构工程师，真正了解他们的工作后，我真心佩服。重构工程师的工作，并不是简单的将设计稿翻译成 DOM 与 CSS 代码，更多是会与设计师一起，从技术的手段给设计提供可行性分析、提供灵感、将代码的灵魂赋予设计。这份工作并不简单，对前沿设计的关注，对 CSS 技术的敏锐，对 DOM 最优结构的追求，还拥有着一双与设计师一般敏锐的像素眼（很多码农缺失、很难培养），以及对美的天然感知力（天然的背后是多年的设计感知积累），很赞这么一帮游走在艺术与技术之间的人，给世界增加了很多美好产品的细腻实现。很尊重这么一帮人，我心目中的重构设计师。&lt;br&gt;&lt;br&gt;回到楼主的疑问，大公司的岗位分工对个人的成长会有影响，但个人成长最关键的还是个人的选择。每个人都有自己的天赋，去看清自己的优劣势，适当补短，更多去明白自己的长处并将其发挥到极致，就不用太担心成长的问题。&lt;br&gt;&lt;br&gt;像重构设计师一样，能聚焦做自己擅长的事情，是多么大的幸运。</textarea>


<div class="zh-summary summary clearfix">

没去过腾讯，回答的内容可能有不对的地方，欢迎随时指正。 我一定程度上蛮支持腾讯的做法，但换个说辞，变成重构设计师与产品工程师。腾讯的 JS 脚本工程师，据我所知，与阿里提倡的全栈工程师（狭义全栈，指同时熟悉前后端开发的 Web 工程师），在要求上是…

<a href="/question/50695646/answer/122233880" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/50695646/answer/122233880">发布于 2016-09-16</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-12494874"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>26 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="444" data-type="Answer">
<link itemprop="url" href="/question/41191048/answer/90058208">
<meta itemprop="answer-id" content="31459837" />
<meta itemprop="answer-url-token" content="90058208" />
<meta itemprop="answerCount" content="6" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/41191048" target="_blank" data-id="8683788" data-za-element-name="Title">
有哪些CSS标准是前端工程师很有必要研读的？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/41191048/answer/90058208">
<!-- <meta itemprop="answer-id" content="31459837">
<meta itemprop="answer-url-token" content="90058208"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>203</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">203</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$tapir"
target="_blank" href="/people/tapir"
>貘吃馍香</a></span><span title="偶是造粪机器" class="bio">
偶是造粪机器
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="203" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">203</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="8683788" data-action="/answer/content" data-author-name="貘吃馍香" data-entry-url="/question/41191048/answer/90058208">

<textarea hidden class="content">泻药&lt;br&gt;&lt;br&gt;如果只是开发时候查下属性&lt;br&gt;随便看看 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3school.com.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;w3school &lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;就好了&lt;br&gt;&lt;br&gt;如果想要深入了解点&lt;br&gt;看看 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/CSS/Reference&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;developer.mozilla.org/e&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;n-US/docs/Web/CSS/Reference&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;这个也就够了&lt;br&gt;&lt;br&gt;如果还要对规范细节有了解&lt;br&gt;就得看 W3 的 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/%23tr_CSS&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;All Standards and Drafts&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;这个了 &lt;br&gt;&lt;br&gt;其中 W3 的 CSS 规范(RC/WD)其实大致分两类&lt;br&gt;1、CSS2 基础布局相关 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/CSS21/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Cascading Style Sheets Level 2 Revision 1 (CSS 2.1) Specification&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;这里对基本布局情况做了阐述&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/CSS21/selector.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;5 Selectors&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/CSS21/cascade.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;6 Assigning property values, Cascading, and Inheritance&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/CSS21/box.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;8 Box model&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/CSS21/visuren.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;9 Visual formatting model&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/CSS21/visudet.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;10 Visual formatting model details&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;是相对重要的几个章节&lt;br&gt;层叠、计算、布局细节内容均出于此&lt;br&gt;&lt;br&gt;2、CSS2 之后扩展内容&lt;br&gt;通常是对于CSS2之后的扩充内容&lt;br&gt;这些按具体内容分成不同规范&lt;br&gt;如最大的关键字系列&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/selectors4/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Selectors Level 4&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css3-box&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS basic box model&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-values/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Values and Units Module Level 3&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-pseudo-4/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Pseudo-Elements Module Level 4&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css3-animations/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Animations&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-transforms-1/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Transforms Module Level 1&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/mediaqueries-4/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Media Queries Level 4&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-will-change-1/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Will Change&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-flexbox-1/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Flexible Box Layout Module Level 1&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/filter-effects-1/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Filter Effects Module Level 1&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-regions-1/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Regions Module Level 1&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css3-multicol&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Multi-column Layout Module&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-inline-3/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Inline Layout Module Level 3&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;等等&lt;br&gt;基本上按某类属性、需求归纳为一种规范文档&lt;br&gt;着重介绍属性名、值以及使用方式&lt;br&gt;这类是最多的&lt;br&gt;一般遇到不知道的属性看下属性名字总结出关键字&lt;br&gt;按关键字基本可以容易的找到所属规范&lt;br&gt;&lt;br&gt;再如总括、扩展系列&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-syntax-3/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Syntax Module Level 3&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-fonts-3/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Fonts Module Level 3&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;等&lt;br&gt;是按照某种抽象类型进行综述&lt;br&gt;基本不牵扯到到CSS属性啊、值啊的什么的具体说明&lt;br&gt;对查属性值啥的无用&lt;br&gt;&lt;br&gt;再如对象映射（包装）关系系列&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/cssom/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Object Model (CSSOM)&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/cssom-view/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSSOM View Module&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/css-font-loading-3/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSS Font Loading Module Level 3&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;等&lt;br&gt;主要内容是介绍CSS属性包装为可操作对象相关的内容&lt;br&gt;通俗的说就是JS可调用的CSS操作API介绍&lt;br&gt;JS里CSS相关操作API不知道可以跟这类规范里找找看&lt;br&gt;&lt;br&gt;基本上建议先看RC、后看DW内容(毕竟 DW 更易变化)</textarea>


<div class="zh-summary summary clearfix">

泻药 如果只是开发时候查下属性 随便看看 <a href="//link.zhihu.com/?target=http%3A//www.w3school.com.cn/" class=" wrap external" target="_blank" rel="nofollow noreferrer">w3school <i class="icon-external"></i></a>就好了 如果想要深入了解点 看看 <a href="//link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/CSS/Reference" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">https://</span><span class="visible">developer.mozilla.org/e</span><span class="invisible">n-US/docs/Web/CSS/Reference</span><span class="ellipsis"></span><i class="icon-external"></i></a> 这个也就够了 如果还要对规范细节有了解 就得看 W3 的 <a href="//link.zhihu.com/?target=https%3A//www.w3.org/TR/%23tr_CSS" class=" wrap external" target="_blank" rel="nofollow noreferrer">All Standards and Drafts<i class="icon-external"></i></a> 这个了 其中 W3 的 CSS 规范(RC/WD)其实大致分两类 1、CSS2 基础布…

<a href="/question/41191048/answer/90058208" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-03-10" target="_blank" href="/question/41191048/answer/90058208">编辑于 2016-03-10</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-8683788"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>5 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="445" data-type="Answer">
<link itemprop="url" href="/question/36498186/answer/68180310">
<meta itemprop="answer-id" content="22690928" />
<meta itemprop="answer-url-token" content="68180310" />
<meta itemprop="answerCount" content="145" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/36498186" target="_blank" data-id="6806355" data-za-element-name="Title">
为什么有很多人明明基础都不会，却一直在讨论jQuery？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/36498186/answer/68180310">
<!-- <meta itemprop="answer-id" content="22690928">
<meta itemprop="answer-url-token" content="68180310"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>203</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">203</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$justineo"
target="_blank" href="/people/justineo"
>顾轶灵</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/justineo#hilightbadge" target="_blank">CSS、前端开发话题优秀回答者</a></span>



<span title="http://justineo.github.io/" class="bio">
<a href="//link.zhihu.com/?target=http%3A//justineo.gith" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">justineo.gith</span><span class="invisible"></span><i class="icon-external"></i></a>…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="203" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">203</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="6806355" data-action="/answer/content" data-author-name="顾轶灵" data-entry-url="/question/36498186/answer/68180310">

<textarea hidden class="content">这个问题的逻辑我不太明白。「为什么有很多人明明基础都不会，却一直在讨论 jQuery？」为啥要基础会了才能讨论 jQuery 呢？我拍照的时候不明白怎么手动调各种参数我还不能讨论傻瓜机怎么用吗？学习技术不是目的，用合适的技术做出够用、好用的产品才能产生价值。&lt;br&gt;&lt;br&gt;我自己在学习 JavaScript 的语法之前，也是先学着用 jQuery 写一些简单的功能的，只不过是用在自己的博客这样无关紧要的地方。即使是专业做前端的，也会有不同的学习阶段，你也不能要求所有人都要从看犀牛书或者 ES 标准来开始学习吧。而且不同的岗位对职业技能的要求也不同，并不是所有人都有意向或者有能力成为很专精的开发者，也许对于一些人来说学会 jQuery 对于他/她当前的工作已经绰绰有余了。&lt;br&gt;&lt;br&gt;我同样用拍照做个类比，即使是专职照相的，也分职业摄影师、路边照相馆、派出所拍身份证照片的、拍景点二十块钱留念照的，你不会要求每个人都从学习摄影艺术概论入手吧。&lt;br&gt;&lt;br&gt;从问题的说明来看题主应该是比较追求上进的，看到别人那么「不求甚解」还会感到厌恶。但我觉得大可不必。每个人能力不同、目标不同，只要不是你的同事把你的项目搞得乱七八糟，你费这心干嘛呢？你现在的鄙视完全没必要，等你学有所成，等着让他们仰视你就行了啊。</textarea>


<div class="zh-summary summary clearfix">

这个问题的逻辑我不太明白。「为什么有很多人明明基础都不会，却一直在讨论 jQuery？」为啥要基础会了才能讨论 jQuery 呢？我拍照的时候不明白怎么手动调各种参数我还不能讨论傻瓜机怎么用吗？学习技术不是目的，用合适的技术做出够用、好用的产品才能产生…

<a href="/question/36498186/answer/68180310" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/36498186/answer/68180310">发布于 2015-10-17</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-6806355"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>16 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="446" data-type="Answer">
<link itemprop="url" href="/question/29804463/answer/46005463">
<meta itemprop="answer-id" content="13798033" />
<meta itemprop="answer-url-token" content="46005463" />
<meta itemprop="answerCount" content="18" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/29804463" target="_blank" data-id="4104549" data-za-element-name="Title">
想用Django+ Bootstrap写一个网站， 有哪些比较系统完整的书或者视频可以参考？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/29804463/answer/46005463">
<!-- <meta itemprop="answer-id" content="13798033">
<meta itemprop="answer-url-token" content="46005463"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>202</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">202</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$taizilongxu"
target="_blank" href="/people/taizilongxu"
>徐大肉</a></span><span title="没有标签" class="bio">
没有标签
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="202" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">202</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="4104549" data-action="/answer/content" data-author-name="徐大肉" data-entry-url="/question/29804463/answer/46005463">

<textarea hidden class="content">&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.tangowithdjango.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;How to Tango with Django: A Python Django Tutorial&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 完全符合你的要求&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;基于Django最新版本1.7&lt;/li&gt;&lt;li&gt;基于创建一个网站实例,一步步来做&lt;/li&gt;&lt;li&gt;面向新手,连终端使用都教你了(囧)&lt;/li&gt;&lt;li&gt;辅助官方教程,每个章节都对应Django官方手册的部分并给出链接,一边做以便看官方手册最好了&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;大致的内容就是根据一个实例来做一个webapp,几乎囊括了建站的所有步骤,讲的也很细致.&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/2d8b9a43272899b7ae6e356afe597b7b_b.jpg&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;735&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1080&quot; data-original=&quot;https://pic4.zhimg.com/2d8b9a43272899b7ae6e356afe597b7b_r.jpg&quot;&gt;&lt;br&gt;这是翻译 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//hackerxu.com/Twd/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Tango with Django 中文文档&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;, 翻译了一大部分.</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic4.zhimg.com/2d8b9a43272899b7ae6e356afe597b7b_200x112.jpg" data-rawwidth="1080" data-rawheight="735" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic4.zhimg.com/2d8b9a43272899b7ae6e356afe597b7b_r.jpg">
<a href="//link.zhihu.com/?target=http%3A//www.tangowithdjango.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer">How to Tango with Django: A Python Django Tutorial<i class="icon-external"></i></a> 完全符合你的要求 基于Django最新版本1.7基于创建一个网站实例,一步步来做面向新手,连终端使用都教你了(囧)辅助官方教程,每个章节都对应Django官方手册的部分并给出链接,一边做以便看官方手册最好了 大…

<a href="/question/29804463/answer/46005463" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-04-27" target="_blank" href="/question/29804463/answer/46005463">编辑于 2015-05-08</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-4104549"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>8 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="447" data-type="Answer">
<link itemprop="url" href="/question/24927450/answer/29478982">
<meta itemprop="answer-id" content="7175101" />
<meta itemprop="answer-url-token" content="29478982" />
<meta itemprop="answerCount" content="8" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/24927450" target="_blank" data-id="2153062" data-za-element-name="Title">
如何形象地解释 JavaScript 中 map、foreach、reduce 间的区别？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/24927450/answer/29478982">
<!-- <meta itemprop="answer-id" content="7175101">
<meta itemprop="answer-url-token" content="29478982"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>202</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">202</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$evanyou"
target="_blank" href="/people/evanyou"
>尤雨溪</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/evanyou#hilightbadge" target="_blank">前端开发、JavaScript、前端工程师话题优秀回答者</a></span>



<span title="为 JavaScript Fatigue 做了一些微小的工作" class="bio">
…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="202" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">202</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="2153062" data-action="/answer/content" data-author-name="尤雨溪" data-entry-url="/question/24927450/answer/29478982">

<textarea hidden class="content">应题主要求来个形象的：&lt;br&gt;假设我们有一个数组，每个元素是一个人。你面前站了一排人。&lt;br&gt;foreach 就是你按顺序一个一个跟他们做点什么，具体做什么，随便:&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;dude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pickUpSoap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;map 就是你手里拿一个盒子（一个新的数组），一个一个叫他们把钱包扔进去。结束的时候你获得了一个新的数组，里面是大家的钱包，钱包的顺序和人的顺序一一对应。&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wallets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;people&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dude&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wallet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;reduce 就是你拿着钱包，一个一个数过去看里面有多少钱啊？每检查一个，你就和前面的总和加一起来。这样结束的时候你就知道大家总共有多少钱了。&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalMoney&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wallets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;countedMoney&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wallet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;countedMoney&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wallet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;money&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;补充一个 filter 的：&lt;br&gt;你一个个钱包数过去的时候，里面钱少于 100 块的不要（留在原来的盒子里），多于 100 块的丢到一个新的盒子里。这样结束的时候你又有了一个新的数组，里面是所有钱多于 100 块的钱包：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fatWallets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wallets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wallet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wallet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;money&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;最后要说明一点这个类比和实际代码的一个区别，那就是 map 和 filter 都是 immutable methods，也就是说它们只会返回一个新数组，而不会改变原来的那个数组，所以这里 filter 的例子是和代码有些出入的（原来的盒子里的钱包减少了），但为了形象说明，大家理解就好。</textarea>


<div class="zh-summary summary clearfix">

应题主要求来个形象的： 假设我们有一个数组，每个元素是一个人。你面前站了一排人。 foreach 就是你按顺序一个一个跟他们做点什么，具体做什么，随便: people.forEach(function (dude) {
 dude.pickUpSoap();
});map 就是你手里拿一个盒子（一个新的数组）…

<a href="/question/24927450/answer/29478982" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2014-08-21" target="_blank" href="/question/24927450/answer/29478982">编辑于 2015-06-03</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-2153062"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>14 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="448" data-type="Answer">
<link itemprop="url" href="/question/24715618/answer/34794413">
<meta itemprop="answer-id" content="9305742" />
<meta itemprop="answer-url-token" content="34794413" />
<meta itemprop="answerCount" content="13" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/24715618" target="_blank" data-id="2068257" data-za-element-name="Title">
ECMAScript 6 会重蹈 ECMAScript 4 的覆辙吗？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/24715618/answer/34794413">
<!-- <meta itemprop="answer-id" content="9305742">
<meta itemprop="answer-url-token" content="34794413"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>202</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">202</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$evanyou"
target="_blank" href="/people/evanyou"
>尤雨溪</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/evanyou#hilightbadge" target="_blank">前端开发、JavaScript、前端工程师话题优秀回答者</a></span>



<span title="为 JavaScript Fatigue 做了一些微小的工作" class="bio">
…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="202" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">202</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="2068257" data-action="/answer/content" data-author-name="尤雨溪" data-entry-url="/question/24715618/answer/34794413">

<textarea hidden class="content">ES4 的故事相当复杂... 我一时八卦心起整理了一下：&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;当年的 TC39 还叫 TC39-TG1&lt;br&gt;&lt;/li&gt;&lt;li&gt;2005 年开始弄 ES4 的主要是 Brendan Eich 和开发了 AS3 的 macromedia（后来是收购 macromedia 的 Adobe）&lt;br&gt;&lt;/li&gt;&lt;li&gt;M$ 和 Yahoo（主要是 Douglas Crockford）一开始是表示合作的&lt;br&gt;&lt;/li&gt;&lt;li&gt;2007 年，BE 和 Adobe 已经在 ES4 上花了两年时间，但 M$ 和 DC 突然表示觉得 ES4 太过庞大，并添加了太多他们不想要的东西。这里具体的理由我们无从得知，只能做一些揣测：DC 的龟毛大家都知道的，从 JavaScript: The Good Parts 就可以看出他的偏好和 ES4 出入很大。M$ 在 ES4 的制定过程中并没有积极参与，可能是因为与会的 Pratap Lakshman 和上层的沟通不足，然后某天跟上层一汇报，上层觉得 ES4 和 ES3 差别过大，实现起来难度大，而且会导致他们丧失对规范的控制权，所以突然就决定抵制 ES4 了。&lt;br&gt;&lt;/li&gt;&lt;li&gt;2007 年 4月，DC 和 M$ 开始平行起草另一个提案，一开始叫 ES3.1，也就是后来的 ES5，整体上是一个更为保守、渐进的提案。当时 TG-1 内部对 3.1 的定位有疑问，但允许了其存在。&lt;br&gt;&lt;/li&gt;&lt;li&gt;BE 对 ES4 的前景感到担忧，2007 年 10 月发布了 ES4 提案预览。M$ 和 DC 认为 BE 操之过急，发表了一些负面评论，双方闹翻。BE 对 M$ 的行为非常光火，并且认为 M$ 在背地里运作引导业界舆论反对 ES4。&lt;br&gt;&lt;/li&gt;&lt;li&gt;ES4 难产，与此同时，随着 ajax 概念的提出，业界开始冒出各种 js 库，对 js 工程化开始进行初步的探索。&lt;br&gt;&lt;/li&gt;&lt;li&gt;2009 年，各方最终同意将 ES3.1 改为 ES5 并正式发布。同时，开始进行下一个版本的规范 Harmony/ES6 的起草。&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;--- 历史的分割线 ---&lt;br&gt;&lt;br&gt;时至今天，我们会发现 ES6 的业界环境和 ES4 有很多不同：&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;当年反对 ES4 的 M$/Yahoo 话语权已今不如昔，而且本身的态度也已经改变。IE 的市场份额持续下跌，在实现上也已长期处于追赶而非当年引领的地位。Yahoo 在互联网界的地位一落千丈，DC 在 TC39 也不像当年那么活跃。&lt;br&gt;&lt;/li&gt;&lt;li&gt;Google 伴随着 Chrome 飙升的占有率，以及靠着 web 发家的背景强势加入 TC39，现在可能是最有话语权也是最积极的玩家，因为推动 web 这个平台和 Google 本身的市场空间直接相关。&lt;br&gt;&lt;/li&gt;&lt;li&gt;整体上 web 前端应用化、工程化的趋势不可逆转，对于支持工程化的语言特性需求也确实比当年高。随着 Node.js 的爆发，JS 在后端的需求增长的同时也开始暴露出语言本身对大型工程的不足。根本上来讲，就是 ES4 的时候业界对 js 工程化的需求没有那么高，所以 ES4 那些考量受众不足。&lt;/li&gt;&lt;li&gt;当年 ES4 未能发布的一个原因是步子过大的同时，没有有效的对新特性进行实践考验的方法。这一点在今天借助各类 transpiler 得以实现。比如 CoffeeScript 的一些特性大家用了都说好，那么 TC39 就可以放心地采用到 ES6 当中。TypeScript 的 class 大家用着觉得不错，那么也可以采用。同理，业界对模块化的探索比如 AMD 和 CommonJS 也对 ES6 module 的最终定稿有着巨大的影响。简言之就是没有实践的检验你很难光靠嘴巴说服所有人。&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;综上，个人认为 ES6 不太可能会重蹈 ES4 的覆辙（目前的计划发布时间是 2015 年 6 月）&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;References:&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.neilmix.com/2007/11/01/the-story-behind-es4/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;The Story Behind ES4&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/community/webed/wiki/A_Short_History_of_JavaScript&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;A Short History of JavaScript&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//wiki.ecmascript.org/doku.php%3Fid%3Dmeetings%3Aminutes_mar_21_2007&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;meetings:minutes_mar_21_2007 [ES Wiki]&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//wiki.ecmascript.org/doku.php%3Fid%3Dmeetings%3Aminutes_sep_27_2007&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;meetings:minutes_sep_27_2007 [ES Wiki]&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//brendaneich.com/2007/11/es4-news-and-opinion/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Brendan Eich&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.yuiblog.com/blog/2008/08/14/premature-standardization/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;The Only Thing We Have To Fear Is Premature Standardization&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>


<div class="zh-summary summary clearfix">

ES4 的故事相当复杂... 我一时八卦心起整理了一下： 当年的 TC39 还叫 TC39-TG1 2005 年开始弄 ES4 的主要是 Brendan Eich 和开发了 AS3 的 macromedia（后来是收购 macromedia 的 Adobe） M$ 和 Yahoo（主要是 Douglas Crockford）一开始是表示合作的 2007…

<a href="/question/24715618/answer/34794413" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2014-12-09" target="_blank" href="/question/24715618/answer/34794413">编辑于 2014-12-09</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-2068257"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>7 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="449" data-type="Answer">
<link itemprop="url" href="/question/40524820/answer/87485409">
<meta itemprop="answer-id" content="30427973" />
<meta itemprop="answer-url-token" content="87485409" />
<meta itemprop="answerCount" content="38" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/40524820" target="_blank" data-id="8417050" data-za-element-name="Title">
javascript真的可以零基础自学吗？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/40524820/answer/87485409">
<!-- <meta itemprop="answer-id" content="30427973">
<meta itemprop="answer-url-token" content="87485409"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>201</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">201</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$zhaicool"
target="_blank" href="/people/zhaicool"
>蒙奇D撸码客</a></span><span title="野路子程序猿" class="bio">
野路子程序猿
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="201" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">201</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="8417050" data-action="/answer/content" data-author-name="蒙奇D撸码客" data-entry-url="/question/40524820/answer/87485409">

<textarea hidden class="content">别为自己懒找借口（此处不是恶意攻击，仅为警示）。想学哪有什么不可能。至于怎样评估你学的水平如何，能适应什么工作做，个人觉得这就不是学的层次了，而是如何学以致用。有的人仅凭一些基础知识，也不懂什么prototype、也不明白闭包，但是人家可以用现有知识融会贯通找到不错的工作，有的人一些高深的知识也懂，但是解决起问题来就是个渣渣，这样的人只适合写教程却解决不了实际问题。这种人虽是少数，但也确实存在。&lt;br&gt;所以学是一个问题，悟又是另一个问题。&lt;br&gt;你初学，感觉我说的这些都很笼统，给你个标准吧。会JavaScript之前建议你先弄明白html与css，毕竟js最根本的功能主要就是为网站服务，所以你得会制作简单的网页，制作出来之后尝试用js给自己的网页增加一些动态效果。此处的动态效果不是你想的那种特别美化的东西，仅仅是在网页需要的位置添加一两个字都是动态添加。然后再进阶，能追加文字就能追加css样式，于是动态美感的东西也能做出来。&lt;br&gt;再高深的，就是把这些简单东西的排列组合。&lt;br&gt;这样就可以进入初级开发了。因为你至少已经学会了js的dom选择器，动态追加dom元素等功能。这些功能很基础，不难，但是使用率很高。就拿动态追加文本内容来说，你的网页有个“hello：”，然后后端从数据库根据不同用户读取的用户名也不一样，后台把用户名输入给你，你就可以用js把用户名追加上：“hello：张三”。&lt;br&gt;我这里只说思路，不说实现方法，这些需要你去学习，学会这些大概一个星期就会用了。至于怎么用的顺手，举一反三就是你的悟。&lt;br&gt;学到这里，在专业人眼中你依然是菜鸟中的渣渣，连闭包都不知道，但是你已经可以解决项目问题了，可能代码写的也乱，重复冗余的东西也多，但是依然会有公司要你，这样的公司很可能是网站公司，接一些小的网站的单子，都是小项目，要求不高，你就可以应聘。不过工资会很低，两三千吧，可能只有你一个人在做js，不懂的地方也没人可以请教。然后你入职之后又可以根据项目中遇到的问题再学习，再进阶。这个过程中，你会发现网页特效如banner焦点图切换，点击下拉再点击又关闭等效果以及字符串的检测等功能都可以在网上搜到很多现成的代码可以用，于是你就会觉的不亦乐乎，前端可以如此简单。&lt;br&gt;工作一段时间之后你又会觉得有很多功能太常用了，你只要复制粘贴之前写的代码，改改一些东西就能用，开始还很开心，后来复制粘贴也觉得累，就会琢磨怎么减少这些重复内容呢？你就会去百度，然后了解到js的封装，学着写好用的function，这个过程中你会接触js的函数、对象、对象等之前接触过但是了解不深刻的这些概念，如此，你便又悟到了一些以前不了解的知识，然后就会运用到新的工作当中。这个过程对你来说是一个飞跃，但是在工作当中你却发现并没有多大用处。只是让你的代码在内行眼里像那么回事，外行眼里并没有多大变化，所以你的工资提不上去。即使是提也是因为提高工作效率而增加的那点钱。但是工作效率高了意味着你又会有充足的时间学习。&lt;br&gt;这时候或者是无聊，或者是求知欲再次袭来，你又会想，那些插件人家是怎么写的呢？于是你会去翻看人家的代码，这个过程可能会接触到jquery，接触到数组操作，接触到json，甚至是ajax。于是你又会去了解这些东西。忽然你又发现，你会的如此少，js是多么的博大精深。甚至分不清一些基本概念了，比如js是什么，jquery是什么，怎么又出来个nodejs。晕了，晕了。&lt;br&gt;你就会去搜，好乱；逛知乎，发现大多人说的要么自己看不懂，要么就是说空话，没帮助。这时候你又会加兴趣群求教，买书看。这一段会是个混乱期，要么你会继续攻坚，也或许你会放弃。总之，这段时间会很艰难。但是请记住，这个时候你遇到的大部分问题并不难，只是太多，与js有关的无关的都在影响你，你只要排除杂念，重新回去看JavaScript教程，这个阶段你就会深入了解原来function有这么多写法、那么多function堆在一起是那么的low、闭包这东西感情我一直在用啊、以前好多数据早知道用对象来存储很多好、原来字符串可以转变成数组来遍历啊。。。jquery操作起dom这么简便，基本的特效也这么容易，其实jq就是js的加强版嘛，也没那么难啊。。。于是很多问题就会迎刃而解，一切又不再迷茫，于是你就会发现一切困难就是纸老虎。&lt;br&gt;此时，你已经不再是菜鸟了，虽然很多高深内容依然看不懂，但你不再惧怕，你已经知道你可以做什么东西，那些不能做的东西也已经知道自己是欠缺什么而不能做了。一切便明确了下来，此时再去找工作，机会发现两三千的职位你开始瞧不起，七八千的职位你只能点开解解馋，但四五千职位发现尽管面试要求写的怪吓人，但是投过简历去却会接到面试通知。于是你去了，跟面试官聊，很多问题自己也能答出来了，但是依然有些问题让自己茫然，但是无所谓啦，反正你现在的工作内容我都能搞定。选了一家心仪的公司，就入职了。这下好了，你或许不再孤独，周围也有同事可以交流了。写到这里我也不想写了，等你到了这个阶段的时候直接跟同事交流吧。&lt;br&gt;总之呢，想学啥都没有什么难的，都出来工作了，不再是学生了，选职业不是选专业，很多时候都是被逼的一步一步的走，什么文科思维理科思维的到这时候都没啥区别了。认定了就入手吧。入了手，你就该问这是什么，这怎么做，而不是这个能不能做之类的问题了。&lt;br&gt;我是学机械的，半路转行。也啥也不懂学起的。写出来，希望能帮到你吧。</textarea>


<div class="zh-summary summary clearfix">

别为自己懒找借口（此处不是恶意攻击，仅为警示）。想学哪有什么不可能。至于怎样评估你学的水平如何，能适应什么工作做，个人觉得这就不是学的层次了，而是如何学以致用。有的人仅凭一些基础知识，也不懂什么prototype、也不明白闭包，但是人家可以用现有…

<a href="/question/40524820/answer/87485409" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-02-22" target="_blank" href="/question/40524820/answer/87485409">编辑于 2016-02-22</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-8417050"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>64 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="450" data-type="Answer">
<link itemprop="url" href="/question/31975067/answer/54149910">
<meta itemprop="answer-id" content="17066379" />
<meta itemprop="answer-url-token" content="54149910" />
<meta itemprop="answerCount" content="91" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/31975067" target="_blank" data-id="4989375" data-za-element-name="Title">
HTML &amp; CSS 现在还多人用吗？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/31975067/answer/54149910">
<!-- <meta itemprop="answer-id" content="17066379">
<meta itemprop="answer-url-token" content="54149910"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>201</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">201</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$nuo-tie"
target="_blank" href="/people/nuo-tie"
>大魔头-诺铁</a></span><span title="INTP，软件手艺人，诺铁@新浪微博，ThoughtWorks咨询师" class="bio">
INTP，软件手艺人，诺铁@新浪微博，Thoug…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="201" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">201</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="4989375" data-action="/answer/content" data-author-name="大魔头-诺铁" data-entry-url="/question/31975067/answer/54149910">

<textarea hidden class="content">为什么这种人也有女朋友系列。。。</textarea>


<div class="zh-summary summary clearfix">

为什么这种人也有女朋友系列。。。

<a href="/question/31975067/answer/54149910" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/31975067/answer/54149910">发布于 2015-07-07</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-4989375"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>14 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="451" data-type="Answer">
<link itemprop="url" href="/question/31613336/answer/62870728">
<meta itemprop="answer-id" content="20561942" />
<meta itemprop="answer-url-token" content="62870728" />
<meta itemprop="answerCount" content="29" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/31613336" target="_blank" data-id="4844610" data-za-element-name="Title">
如何正确、客观地评价 React？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/31613336/answer/62870728">
<!-- <meta itemprop="answer-id" content="20561942">
<meta itemprop="answer-url-token" content="62870728"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>201</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">201</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$evanyou"
target="_blank" href="/people/evanyou"
>尤雨溪</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/evanyou#hilightbadge" target="_blank">前端开发、JavaScript、前端工程师话题优秀回答者</a></span>



<span title="为 JavaScript Fatigue 做了一些微小的工作" class="bio">
…
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="201" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">201</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="4844610" data-action="/answer/content" data-author-name="尤雨溪" data-entry-url="/question/31613336/answer/62870728">

<textarea hidden class="content">在  &lt;a data-hash=&quot;ec53de7925cc6668b1ddab9d6bfc9668&quot; href=&quot;//www.zhihu.com/people/ec53de7925cc6668b1ddab9d6bfc9668&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@管喜庆&quot; data-tip=&quot;p$b$ec53de7925cc6668b1ddab9d6bfc9668&quot; data-hovercard=&quot;p$b$ec53de7925cc6668b1ddab9d6bfc9668&quot;&gt;@管喜庆&lt;/a&gt; 的答案下面留了个长评论，意见基本和匿名用户的答案完全一致，没想到删答案了，何苦呢。&lt;br&gt;&lt;br&gt;个人认为，对 React 的评价要分两方面来看：一是 React 所引领和激发的一系列开发思想；二则是和其他现有方案在实际效率上的横向比较。&lt;br&gt;&lt;br&gt;在思想方面 React 确实没有被过誉，自上而下的组件数据流，Virtual DOM 让渲染后端不局限于浏览器，对于 FP 理念的高亲和度，以及整体对于 “状态管理” 这个概念的强调，这些都是在 React 出现之前前端界并不关注的问题，但 React 出现之后，一下子打开了一个新的思路，并且吸引了很多搞 FP 的用户，所以现在 React 生态圈颇有些百家争鸣的感觉，各种新玩法层出不穷，确实是极好的。&lt;br&gt;&lt;br&gt;另一方面，在解决实际工程问题上，React 固然是优秀的，但是否真的如一些人所说甩开 MVVM 十几条街？现有的几个答案都提到了，MVVM 也可以用 Flux，甚至是 React 的一些核心优点，都可以被 MVVM 借鉴（比如 Angular 2 就学了 React 很多东西）。状态管理的设计模式和视图层用的是什么实现其实并没有强联系，只是在 Flux 出现之前大家都没有关注这个问题而已。&lt;br&gt;&lt;br&gt;我相信确实有一些 React 粉是之前用 Angular Knockout 结果最后难以维护，换到 React + Flux 之后觉得神清气爽，于是猛吹 React 大法好，MVVM 是渣渣。但是你是否有思考过两者之间的本质区别在哪里？Flux 只是一个思路，这个思路并不是只有 React 才能用的。举例来说几个比较知名的 Flux 实现，Redux 的核心实现是和 React 完全解耦的，Optimizely 的 Nuclear.js 也是 view-layer agnostic (不限定使用什么视图层实现）。同时我相信，要是 Facebook 没有配套强推 Flux，那些之前用 ng/ko 写出渣代码的人依然会写出滥用 state、难以维护的 React 代码。&lt;br&gt;&lt;br&gt;至于性能方面，之前我有个答案分析过了，virtual dom 相对于其他实现其实没有本质上的优势，只是 Angular 1 的可优化性做的比较差而已。参见 &lt;a href=&quot;http://www.zhihu.com/question/31809713/answer/53544875&quot; class=&quot;internal&quot;&gt;网上都说操作真实 DOM 慢，但测试结果却比 React 更快，为什么？ - 尤雨溪的回答&lt;/a&gt;&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;最后是我个人吐槽，现在有些 React 粉吧，感觉像是刚被点化入教的教徒一样，逢人就照本宣科地背诵一遍 React 大法好，你跟他探讨一下，又说不出什么有深度的看法，甚至还要恼羞成怒，这样不好。须知 React 本身是个好东西，但无脑吹是最招黑的。&lt;br&gt;&lt;br&gt;矮油，貌似有很多人点了反对，是不是觉得脸有点肿？</textarea>


<div class="zh-summary summary clearfix">

在 <a data-hash="ec53de7925cc6668b1ddab9d6bfc9668" href="//www.zhihu.com/people/ec53de7925cc6668b1ddab9d6bfc9668" class="member_mention" data-editable="true" data-title="@管喜庆" data-tip="p$b$ec53de7925cc6668b1ddab9d6bfc9668" data-hovercard="p$b$ec53de7925cc6668b1ddab9d6bfc9668">@管喜庆</a> 的答案下面留了个长评论，意见基本和匿名用户的答案完全一致，没想到删答案了，何苦呢。 个人认为，对 React 的评价要分两方面来看：一是 React 所引领和激发的一系列开发思想；二则是和其他现有方案在实际效率上的横向比较。 在思想方面 React …

<a href="/question/31613336/answer/62870728" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-09-08" target="_blank" href="/question/31613336/answer/62870728">编辑于 2015-09-10</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-4844610"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>18 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="452" data-type="Answer">
<link itemprop="url" href="/question/35436669/answer/62753889">
<meta itemprop="answer-id" content="20515172" />
<meta itemprop="answer-url-token" content="62753889" />
<meta itemprop="answerCount" content="43" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/35436669" target="_blank" data-id="6381285" data-za-element-name="Title">
你是如何构建 Web 前端 Mock Server 的？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/35436669/answer/62753889">
<!-- <meta itemprop="answer-id" content="20515172">
<meta itemprop="answer-url-token" content="62753889"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>200</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">200</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$fouber"
target="_blank" href="/people/fouber"
>张云龙</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span></span><span class="badge-summary"><a href="/people/fouber#hilightbadge" target="_blank">前端开发、JavaScript话题优秀回答者</a></span>



<span title="全民直播CTO" class="bio">
全民直播CTO
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="200" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">200</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="6381285" data-action="/answer/content" data-author-name="张云龙" data-entry-url="/question/35436669/answer/62753889">

<textarea hidden class="content">谢邀&lt;br&gt;&lt;br&gt;为了更好的分工合作，让前端能在不依赖后端环境的情况下进行开发，其中一种手段就是为前端开发者提供一个web容器，这个本地环境就是 mock server。&lt;br&gt;&lt;br&gt;要完整运行前端代码，通常并不需要完整的后端环境，我们只要在mock server中实现以下几点就行了：&lt;br&gt;&lt;ol&gt;&lt;li&gt;能渲染模板&lt;br&gt;&lt;/li&gt;&lt;li&gt;实现请求路由映射&lt;br&gt;&lt;/li&gt;&lt;li&gt;数据接口代理到生产或者测试环境&lt;/li&gt;&lt;/ol&gt;能渲染模板很简单，在mock server中集成模板引擎就行了，然后提供模拟的页面数据用于完整渲染页面，不过有时候生产环境中的模板引擎可能有一些环境依赖的扩展，这个要单独实现。&lt;br&gt;&lt;br&gt;请求路由映射，实现原理就是要让本地的mock server有一个router，能接收所有HTTP请求，然后在router中根据线上的路由约定，实现一套一样的规则，这个也不难，不赘述了。&lt;br&gt;&lt;br&gt;最后数据接口代理。与前端相关的HTTP请求一共就3种响应情况：&lt;br&gt;&lt;ol&gt;&lt;li&gt;渲染页面的请求；&lt;br&gt;&lt;/li&gt;&lt;li&gt;静态资源的请求；&lt;br&gt;&lt;/li&gt;&lt;li&gt;获取数据的请求。&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;由于实现了router，我们把渲染页面的请求在mock server中处理掉，直接输出本地模板的渲染结果；静态资源的请求直接返回文件内容；而把数据请求代理到测试或者生产环境，本地就不用mock了（当然，如果出现新的接口测试环境没有的，可以追加router，在mock server想响应假数据）&lt;br&gt;&lt;br&gt;至于题主说的url一致性问题，其实不存在的。你的这个 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.foo.com/bar&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.foo.com/bar 的&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;数据请求，在js中应该这样写：&lt;br&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;这种写法，省略了host，在线下开发时，其最终结果是请求 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//127.0.0.1%3A3000/bar&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;127.0.0.1:3000/bar&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，而由于我们在mock server中实现了路由规则，这个请求实际上被代理到了测试/生产环境去获取数据。而当你把代码部署到线上时，其访问真实请求地址又自动变成了你期望的 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.foo.com/bar&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.foo.bar，&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;正常运行。&lt;br&gt;&lt;br&gt;画个图总结一下：&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/dabc8dd12b7b238e9d3fad9f65e974bf_b.png&quot; data-rawwidth=&quot;494&quot; data-rawheight=&quot;285&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;494&quot; data-original=&quot;https://pic4.zhimg.com/dabc8dd12b7b238e9d3fad9f65e974bf_r.png&quot;&gt;&lt;br&gt;补充一些Tips：&lt;br&gt;&lt;ul&gt;&lt;li&gt;由于Mock Server需要具备渲染模板的能力，因此可能需要一种轻量的服务端跨平台server实现方案，如果是java的后端，可以考虑使用jetty，一个1.8M的jar即可；如果是php的后端，可以考虑使用php 5.4以后内置的server，启动命令是 php -S 127.0.0.1:3000 router.php；如果是Nodejs，那就很简单了，估计都不需要Mock Server，本地也可以跑的&lt;/li&gt;&lt;li&gt;当代理数据接口的生产/测试环境不具备新接口的时候，Mock Server要在本地制造假数据响应请求，可以使用 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//beta.json-generator.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;beta.json-generator.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 这类在线的JSON数据生成工具，非常方便。&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;很多前端工程师以为前端分离的唯一途径是接入NodeJS作为UI层，其实不是的，还有一种方案就是这种Mock Server，前端工程师直接写后端模板，效果有时候甚至更好，而且对已有前后端架构的改动成本最小。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;====== 更新 ======&lt;br&gt;&lt;br&gt;评论中  &lt;a data-hash=&quot;b0b04064d91856337ce4fb78721cb8dd&quot; href=&quot;//www.zhihu.com/people/b0b04064d91856337ce4fb78721cb8dd&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@相守鼎&quot; data-hovercard=&quot;p$b$b0b04064d91856337ce4fb78721cb8dd&quot;&gt;@相守鼎&lt;/a&gt; 给出了常用脚本语言下开启简易web server的方法，可以用于实现Mock Server：&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;ruby -run -e httpd . -p 9090&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;python -m SimpleHTTPServer 8000&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;php -S 127.0.0.1:8088 router.php&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic4.zhimg.com/dabc8dd12b7b238e9d3fad9f65e974bf_200x112.png" data-rawwidth="494" data-rawheight="285" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic4.zhimg.com/dabc8dd12b7b238e9d3fad9f65e974bf_r.png">
谢邀 为了更好的分工合作，让前端能在不依赖后端环境的情况下进行开发，其中一种手段就是为前端开发者提供一个web容器，这个本地环境就是 mock server。 要完整运行前端代码，通常并不需要完整的后端环境，我们只要在mock server中实现以下几点就行了： 能…

<a href="/question/35436669/answer/62753889" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-09-08" target="_blank" href="/question/35436669/answer/62753889">编辑于 2015-09-08</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-6381285"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>22 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="453" data-type="Answer">
<link itemprop="url" href="/question/24702250/answer/28695133">
<meta itemprop="answer-id" content="6860543" />
<meta itemprop="answer-url-token" content="28695133" />
<meta itemprop="answerCount" content="6" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/24702250" target="_blank" data-id="2062928" data-za-element-name="Title">
querySelectorAll 方法相比 getElementsBy 系列方法有什么区别？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/24702250/answer/28695133">
<!-- <meta itemprop="answer-id" content="6860543">
<meta itemprop="answer-url-token" content="28695133"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>200</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">200</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$maplejan"
target="_blank" href="/people/maplejan"
>简生</a></span><span title="友萌咨询机构华南区业务员" class="bio">
友萌咨询机构华南区业务员
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="200" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">200</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="2062928" data-action="/answer/content" data-author-name="简生" data-entry-url="/question/24702250/answer/28695133">

<textarea hidden class="content">&lt;b&gt;1. W3C 标准&lt;/b&gt;&lt;br&gt;querySelectorAll 属于 W3C 中的 Selectors API 规范 [1]。而 getElementsBy 系列则属于 W3C 的 DOM 规范 [2]。&lt;br&gt;&lt;br&gt;&lt;b&gt;2. 浏览器兼容&lt;/b&gt;&lt;br&gt;querySelectorAll 已被 IE 8+、FF 3.5+、Safari 3.1+、Chrome 和 Opera 10+ 良好支持 。&lt;br&gt;getElementsBy 系列，以最迟添加到规范中的 getElementsByClassName 为例，IE 9+、FF 3 +、Safari 3.1+、Chrome 和 Opera 9+ 都已经支持该方法了。&lt;br&gt;&lt;br&gt;&lt;b&gt;3. 接收参数&lt;/b&gt;&lt;br&gt;querySelectorAll 方法接收的参数是一个 CSS 选择符。而 getElementsBy 系列接收的参数只能是单一的className、tagName 和 name。代码如下 [3]：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.b1 .c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'b2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;需要注意的是，querySelectorAll 所接收的参数是必须严格符合 CSS 选择符规范的。所以下面这种写法，将会抛出异常。代码如下 [4]：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1a2b3c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.1a2b3c'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;（CSS 选择器中的元素名，类和 ID 均不能以数字为开头。）&lt;br&gt;&lt;br&gt;&lt;b&gt;4. 返回值&lt;/b&gt;&lt;br&gt;大部分人都知道，querySelectorAll 返回的是一个 Static Node List，而 getElementsBy 系列的返回的是一个 Live Node List。&lt;br&gt;看看下面这个经典的例子 [5]：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Demo 1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;lis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;li&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;li&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Demo 2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;lis&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;li&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;li&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;因为 Demo 2 中的 lis 是一个动态的 Node List， 每一次调用 lis 都会重新对文档进行查询，导致无限循环的问题。&lt;br&gt;而 Demo 1 中的 lis 是一个静态的 Node List，是一个 li 集合的快照，对文档的任何操作都不会对其产生影响。&lt;br&gt;&lt;br&gt;但为什么要这样设计呢？&lt;br&gt;其实，在 W3C 规范中对 querySelectorAll 方法有明确规定 [6]：&lt;br&gt;&lt;blockquote&gt;The NodeList object returned by the querySelectorAll() method &lt;b&gt;must be static&lt;/b&gt; ([DOM], section 8). &lt;/blockquote&gt;&lt;br&gt;那什么是 NodeList 呢？&lt;br&gt;W3C 中是这样说明的 [7]：&lt;br&gt;&lt;blockquote&gt;The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. &lt;b&gt;NodeList objects in the DOM are live.&lt;/b&gt;&lt;/blockquote&gt;所以，NodeList 本质上是一个动态的 Node 集合，只是规范中对 querySelectorAll 有明确要求，规定其必须返回一个静态的 NodeList 对象。&lt;br&gt;&lt;br&gt;我们再看看在 Chrome 上面是个什么样的情况：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// return &quot;[object NodeList]&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// return &quot;[object HTMLCollection]&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;这里又多了一个 HTMLCollection 对象出来，那 HTMLCollection 又是什么？&lt;br&gt;&lt;br&gt;HTMLCollection 在 W3C 的定义如下 [8]：&lt;br&gt;&lt;blockquote&gt;An HTMLCollection is a list of nodes. An individual node may be accessed by either ordinal index or the node's name or id attributes.&lt;br&gt;Note: Collections in the HTML DOM are assumed to be live meaning that they are automatically updated when the underlying document is changed.&lt;/blockquote&gt;&lt;br&gt;实际上，HTMLCollection 和 NodeList 十分相似，都是一个动态的元素集合，每次访问都需要重新对文档进行查询。两者的本质上差别在于，HTMLCollection 是属于 &lt;b&gt;Document Object Model HTML&lt;/b&gt; 规范，而 NodeList 属于 &lt;b&gt;Document Object Model Core&lt;/b&gt; 规范。&lt;br&gt;这样说有点难理解，看看下面的例子会比较好理解 [9]：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;lis1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;childNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;lis2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lis1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lis1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// &quot;[object NodeList]&quot; 11&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lis2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lis2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// &quot;[object HTMLCollection]&quot; 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;NodeList 对象会包含文档中的所有节点，如 Element、Text 和 Comment 等。&lt;br&gt;HTMLCollection  对象只会包含文档中的 Element 节点。&lt;br&gt;另外，HTMLCollection 对象比 NodeList 对象 多提供了一个 namedItem 方法。&lt;br&gt;&lt;br&gt;所以在现代浏览器中，querySelectorAll 的返回值是一个静态的 NodeList 对象，而 getElementsBy 系列的返回值实际上是一个 HTMLCollection 对象 。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;[1] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/selectors-api2/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Selectors API Level 2&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[2] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/DOM-Level-3-Core/core.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Document Object Model Core&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[3] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/cuduyigi/1/edit%3Fhtml%2Cjs%2Cconsole&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jsbin.com/cuduyigi/1/ed&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;it?html,js,console&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[4] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/mabefihi/1/watch%3Fhtml%2Cjs%2Cconsole&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jsbin.com/mabefihi/1/wa&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tch?html,js,console&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[5] &lt;br&gt;Demo 1: &lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/daduziba/1/watch%3Fhtml%2Cjs%2Coutput&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jsbin.com/daduziba/1/wa&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tch?html,js,output&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;Demo 2: &lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/xuvodipo/1/watch%3Fhtml%2Cjs%2Coutput&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jsbin.com/xuvodipo/1/wa&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tch?html,js,output&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[6] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/selectors-api2/%23findelements&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Selectors API Level 2&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[7] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/DOM-Level-2-Core/core.html%23ID-536297177&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Document Object Model Core&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[8] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/DOM-Level-2-HTML/html.html%23ID-75708506&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Document Object Model HTML&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;[9] &lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/qijivove/1/watch%3Fhtml%2Cjs%2Cconsole&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jsbin.com/qijivove/1/wa&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;tch?html,js,console&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>


<div class="zh-summary summary clearfix">

<b>1. W3C 标准</b> querySelectorAll 属于 W3C 中的 Selectors API 规范 [1]。而 getElementsBy 系列则属于 W3C 的 DOM 规范 [2]。 <b>2. 浏览器兼容</b> querySelectorAll 已被 IE 8+、FF 3.5+、Safari 3.1+、Chrome 和 Opera 10+ 良好支持 。 getElementsBy 系列，以最…

<a href="/question/24702250/answer/28695133" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2014-08-02" target="_blank" href="/question/24702250/answer/28695133">编辑于 2014-08-02</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-2062928"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>10 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="454" data-type="Answer">
<link itemprop="url" href="/question/49164656/answer/114625869">
<meta itemprop="answer-id" content="41330940" />
<meta itemprop="answer-url-token" content="114625869" />
<meta itemprop="answerCount" content="28" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/49164656" target="_blank" data-id="11881868" data-za-element-name="Title">
大学毕业做前端工作感觉最近遇到了瓶颈，不知道该如何提升自己？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/49164656/answer/114625869">
<!-- <meta itemprop="answer-id" content="41330940">
<meta itemprop="answer-url-token" content="114625869"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>200</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">200</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$lin-jia-jun-57"
target="_blank" href="/people/lin-jia-jun-57"
>林獺</a></span><span title="Web 前端，藝術家" class="bio">
Web 前端，藝術家
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="200" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">200</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="11881868" data-action="/answer/content" data-author-name="林獺" data-entry-url="/question/49164656/answer/114625869">

<textarea hidden class="content">有人说我歧视二本什么的，我没有任何的、这个意思。只是描述现状，不是说把这些名词提出来，就是歧视了。&lt;br&gt;&lt;br&gt;谢邀。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;你的情况，大抵是二本、大专甚至培训班出身人群的普遍经历。满怀踌躇地踏入职场，发现技不能酬、格格不入。尤其是当你自认为掌握了什么 Less/Sass、Gulp/Grunt、Angular、Node 之类的 fancy 技术，这种感觉更甚。&lt;br&gt;学历高、出身好的学子为什么不会遇到这种情况，因为他们在校招时就进入 BAT 或其他业内著名公司，职场生涯、技术路线都无忧无虑。那出身低的毕业生如何跟他们一样，即使难以进入大牛公司，怎样才能寻求一个技术新潮、积极向上的技术团队呢？&lt;br&gt;&lt;b&gt;首先，正视自己的能力。前端的新技术，不是门坎较低、就是给人一种容易掌握的错觉。&lt;/b&gt;Less/Sass 不谈，你学了 Angular，懂得 data-binding、router 等背后的实现原理吗？你虽会用 Node 搭建一个本地 server，但懂得 I/O 流程、HTTP 和操作系统知识吗？你能不诉诸书本和搜索引擎，写出几个 JS 设计模式和继承模式吗？你能完全脱离 jQuery 来操纵 DOM 和 Ajax 吗？你知道怎么写 CSS 选择器能让浏览器解释速度最快吗？你会在开发过程中，下意识地追求 HTTP 请求最少吗？……&lt;br&gt;&lt;b&gt;如果你不能的话，那就需要重新审视自己，是否被一时的自我成就和满足所障目，而忘却了技术最重要的永远是基础。&lt;/b&gt;&lt;br&gt;如果你能的话，恭喜你，你已经不止是合格的前端了。这样的话，你要怎么做才能走出平阳、找到归宿呢？&lt;br&gt;我的建议是积累经验——积累工作和项目的经验，闲时继续学习并深入新技术。你的工作效率高、闲时多，这是好事。我毕业后第一份工作也是如此，领导缺乏技术嗅觉，技术路线过时老旧。我是这么应对的：&lt;b&gt;凭越发娴熟的技能，加快工作速度，换来学习的时间。接着，主动把你的新技能移植到公司项目中。&lt;/b&gt;例如 Gulp、Less/Sass，都是开发环境下的利器，开发环境下你想怎么用就怎么用，外人只看到生产代码；甚或 Angular——遇到独力负责的中重量级项目，主动考虑此类 MVC 框架的可行性；有时不是项目和领导不允许使用新框架，&lt;b&gt;而是自己不愿走出舒适圈、缺乏实践自信&lt;/b&gt;。&lt;br&gt;（业余时间，用你的 Gulp、Angular 写一些个人项目放在 GitHub 上，配以 Node mock server 甚至 Redis 数据库，有助理解前后端交互和数据库的组织，也增加面试的资本。）&lt;br&gt;当你「利用」这个公司，积累了新老技术的实践经验后，便是另谋高就的时机了。你的简历不仅会有上述技能，还会有「一力为旧公司引入任务构建、工作流等新技术」之类的 impressing 字眼。&lt;br&gt;在投简历时，开始考虑实质回报以外更深层的东西。你可以询问对方，贵团队的前端技术栈为何，未来的技术规划为何。因为接下来的新工作，在你的职场生涯中，是最能影响你的技术修炼的——你将第一次名正言顺地学习技术、并将其付诸实践、甚至有同样技术路线的同事大牛带领。对比上一家，事半功倍。&lt;br&gt;而你所虑之女职员结婚生子的人力成本问题——对于技术人员，小公司更看重短期的利益回报，大公司不 care。&lt;br&gt;&lt;br&gt;&lt;b&gt;最后想讲多句：个人经历相关的问题，除非哗众取宠或引人瞩目，鲜少得到 100+ 回答的。如果真有 100 人来回答了，你看完，反而更迷茫。&lt;/b&gt;</textarea>


<div class="zh-summary summary clearfix">

有人说我歧视二本什么的，我没有任何的、这个意思。只是描述现状，不是说把这些名词提出来，就是歧视了。 谢邀。 你的情况，大抵是二本、大专甚至培训班出身人群的普遍经历。满怀踌躇地踏入职场，发现技不能酬、格格不入。尤其是当你自认为掌握了什么 Less/…

<a href="/question/49164656/answer/114625869" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-08-02" target="_blank" href="/question/49164656/answer/114625869">编辑于 2016-08-04</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-11881868"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>29 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="455" data-type="Answer">
<link itemprop="url" href="/question/38357171/answer/83883822">
<meta itemprop="answer-id" content="28984203" />
<meta itemprop="answer-url-token" content="83883822" />
<meta itemprop="answerCount" content="44" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/38357171" target="_blank" data-id="7550159" data-za-element-name="Title">
能否用通俗语言讲一下web前端讲的“切图”到底是什么意思？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/38357171/answer/83883822">
<!-- <meta itemprop="answer-id" content="28984203">
<meta itemprop="answer-url-token" content="83883822"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>199</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">199</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$HiDino9"
target="_blank" href="/people/HiDino9"
>Bear.Dino</a></span><span title="厌恶一切撕逼&amp;Judge类问题" class="bio">
厌恶一切撕逼&amp;Judge类问题
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="199" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">199</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="7550159" data-action="/answer/content" data-author-name="Bear.Dino" data-entry-url="/question/38357171/answer/83883822">

<textarea hidden class="content">简单说就是把一张大图裁成若干张小图（附图文操作方法）&lt;br&gt;&lt;br&gt;一张完整的web设计图包括了很多元素，Logo、图标、背景图等等，如下图（网图侵删）&lt;br&gt;&lt;img data-rawheight=&quot;714&quot; data-rawwidth=&quot;524&quot; src=&quot;https://pic4.zhimg.com/04ade1675530bc72eeef96e2a7759e87_b.png&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;524&quot; data-original=&quot;https://pic4.zhimg.com/04ade1675530bc72eeef96e2a7759e87_r.png&quot;&gt;设计师通常给的是Ps的分层设计文件，或者是Ai，当然这样是最好的啦╭( ･ㅂ･)  ̑̑，当然也有设计师用的素材不是透明分层的，这个时候就需要我们自己抠图了(ಥ _ ಥ)（这又是另外一个话题了，不谈）&lt;br&gt;这时候就需要把我们需要的Logo、图标、背景图这些一一单图提取出来使用到前端项目中，于是我们用到了Ps或Ai中切图这个功能&lt;br&gt;&lt;img data-rawheight=&quot;100&quot; data-rawwidth=&quot;206&quot; src=&quot;https://pic1.zhimg.com/507bd23d1299e243ce9726c973f257d0_b.png&quot; class=&quot;content_image&quot; width=&quot;206&quot;&gt;然后在图片上拖来拽去就变成了下面酱紫（┗|｀O′|┛ 嗷~~）&lt;br&gt;&lt;img data-rawheight=&quot;160&quot; data-rawwidth=&quot;640&quot; src=&quot;https://pic2.zhimg.com/a33b3c9dcb16a30debd444becd4646c1_b.png&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/a33b3c9dcb16a30debd444becd4646c1_r.png&quot;&gt;最后文件-&amp;gt;导出-&amp;gt;存储为Web所用格式（快捷键Ctrl/Command+Alt+Shift+S）&lt;br&gt;&lt;img data-rawheight=&quot;778&quot; data-rawwidth=&quot;994&quot; src=&quot;https://pic3.zhimg.com/244099deb6fe0f0693c998aab4c91156_b.png&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;994&quot; data-original=&quot;https://pic3.zhimg.com/244099deb6fe0f0693c998aab4c91156_r.png&quot;&gt;选中指定切片-&amp;gt;设置优化参数-&amp;gt;存储，铛铛档，大功告成ヾ(o◕∀◕)ﾉヾ&lt;br&gt;得到下边这些单独的文件咯&lt;br&gt;&lt;img data-rawheight=&quot;242&quot; data-rawwidth=&quot;686&quot; src=&quot;https://pic3.zhimg.com/fc787e698403da999bb7c519d65a3d1a_b.png&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;686&quot; data-original=&quot;https://pic3.zhimg.com/fc787e698403da999bb7c519d65a3d1a_r.png&quot;&gt;这样就可以愉快地用到项目中喽，不过图标太多的话建议做成Sprite图哦，可以有效减少请求数，加快页面载入。&lt;br&gt;一不小心写成教程了_(:зゝ∠)_&lt;br&gt;&lt;br&gt;PS萌新求赞求关注(づ￣3￣)づ╭❤～</textarea>


<div class="zh-summary summary clearfix">
<img data-rawheight="714" data-rawwidth="524" src="https://pic4.zhimg.com/04ade1675530bc72eeef96e2a7759e87_200x112.png" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic4.zhimg.com/04ade1675530bc72eeef96e2a7759e87_r.png">
简单说就是把一张大图裁成若干张小图（附图文操作方法） 一张完整的web设计图包括了很多元素，Logo、图标、背景图等等，如下图（网图侵删） 设计师通常给的是Ps的分层设计文件，或者是Ai，当然这样是最好的啦╭( ･ㅂ･) ̑̑，当然也有设计师用…

<a href="/question/38357171/answer/83883822" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-01-29" target="_blank" href="/question/38357171/answer/83883822">编辑于 2016-01-29</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-7550159"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>61 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="456" data-type="Answer">
<link itemprop="url" href="/question/38065402/answer/74969743">
<meta itemprop="answer-id" content="25411318" />
<meta itemprop="answer-url-token" content="74969743" />
<meta itemprop="answerCount" content="34" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/38065402" target="_blank" data-id="7433403" data-za-element-name="Title">
为什么百度、淘宝之类的大公司网页不使用响应式，而是独立开发一套手机页面？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/38065402/answer/74969743">
<!-- <meta itemprop="answer-id" content="25411318">
<meta itemprop="answer-url-token" content="74969743"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>198</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">198</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$jerryddg"
target="_blank" href="/people/jerryddg"
>邹润阳</a></span><span title="&lt;!-- 前端实习生 --&gt;" class="bio">
&lt;!-- 前端实习生 --&gt;
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="198" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">198</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="7433403" data-action="/answer/content" data-author-name="邹润阳" data-entry-url="/question/38065402/answer/74969743">

<textarea hidden class="content">响应式设计不是万能的，它有一定的好处，但也有一定的弊端。先给出结论：&lt;b&gt;如果开发资源充裕，不应该考虑使用响应式设计来同时支持移动端和桌面端。&lt;/b&gt;&lt;br&gt;&lt;br&gt;因为响应式最大的优点就是&lt;b&gt;开发快&lt;/b&gt;。打个比方，移动端和桌面端的开发时间分别是 t，采用响应式设计写一个同时支持两者的网站可能只有 1.2t。&lt;br&gt;&lt;br&gt;那为什么开发资源充足的情况下，不应该采取响应式设计来同时支持移动端和桌面端呢？&lt;br&gt;&lt;br&gt;1. 响应式设计带来大量冗余代码。在移动端充斥着 webkit 内核的浏览器的时代，响应式设计的网站中却不得不带有大量兼容旧 IE 的代码。移动端开发必须考虑在弱网情况下的渲染方式，而响应式设计带来的冗余代码无疑是一种累赘。&lt;br&gt;&lt;br&gt;2. 桌面端和移动端的屏幕大小和操作方式的差异决定了两者的设计一定存在着根本性的区别。《响应式 Web 设计》一书中提到，响应式设计应该以移动优先，在设计之初就应该以移动端网站为设计目标，然后再考虑如何在桌面端布局。你很难想象将一个功能和交互复杂的桌面端网站改写成支持移动端访问的响应式设计究竟有多么复杂。而且将桌面端网站的大量内容堆砌在手机页面上也是极其影响性能的事，可以想象页面的打开速度简直糟透了。&lt;br&gt;&lt;br&gt;说了这么久响应式设计的坏处，那响应式设计有什么&lt;b&gt;合适的应用场景&lt;/b&gt;吗？&lt;br&gt;&lt;br&gt;当然有。&lt;br&gt;&lt;br&gt;我们可以看到，很多开源项目的文档，初创公司的主页，以及个人技术博客都是采取响应式的。这些页面的特点一般都是&lt;b&gt;交互性很低，仅仅用于信息展示&lt;/b&gt;，需要写的兼容性代码很少，非常适合做成响应式。</textarea>


<div class="zh-summary summary clearfix">

响应式设计不是万能的，它有一定的好处，但也有一定的弊端。先给出结论：<b>如果开发资源充裕，不应该考虑使用响应式设计来同时支持移动端和桌面端。</b> 因为响应式最大的优点就是<b>开发快</b>。打个比方，移动端和桌面端的开发时间分别是 t，采用响应式设计写一个同时…

<a href="/question/38065402/answer/74969743" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-12-02" target="_blank" href="/question/38065402/answer/74969743">编辑于 2015-12-02</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-7433403"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>13 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="457" data-type="Answer">
<link itemprop="url" href="/question/19680724/answer/12867340">
<meta itemprop="answer-id" content="266027" />
<meta itemprop="answer-url-token" content="12867340" />
<meta itemprop="answerCount" content="13" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/19680724" target="_blank" data-id="52257" data-za-element-name="Title">
网页设计中最常用的字体有哪些？（中文和英文）
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/19680724/answer/12867340">
<!-- <meta itemprop="answer-id" content="266027">
<meta itemprop="answer-url-token" content="12867340"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>198</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">198</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$rysun"
target="_blank" href="/people/rysun"
>Ruoyu Sun</a></span><span title="招人中 alpha.huaxing.com" class="bio">
招人中 <a href="//link.zhihu.com/?target=http%3A//alpha.huaxing.com" class=" external" target="_blank" rel="nofollow noreferrer"><span class="invisible">http://</span><span class="visible">alpha.huaxing.com</span><span class="invisible"></span><i class="icon-external"></i></a>
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="198" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">198</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="52257" data-action="/answer/content" data-author-name="Ruoyu Sun" data-entry-url="/question/19680724/answer/12867340">

<textarea hidden class="content"> 我比较熟悉英文，一个一个字体说：&lt;br&gt;&lt;b&gt;&lt;u&gt;Sans-serif&lt;/u&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;Helvetica:&lt;/b&gt; 被评为设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下由于Hinting的原因显示很糟糕。&lt;/li&gt;&lt;li&gt;&lt;b&gt;Arial: &lt;/b&gt;Helvetica的「克隆」，和Helvetica非常像，细节上比如R和G有小小差别。如果字号太小，文字太多，看起来会有些累眼。Win和Mac显示都正常&lt;/li&gt;&lt;li&gt;&lt;b&gt;Lucida Family:&lt;/b&gt; Lucida Grande是Mac OS UI的标准字体，属于humanist风格，稍微活泼一点。Mac下的显示要比Win下好。&lt;/li&gt;&lt;li&gt;&lt;b&gt;Verdana:&lt;/b&gt; 专门为了屏显而设计的字体，humanist风格，在小字号下仍可以清楚显示，但是字体细节缺失严重，最好别做标题。&lt;/li&gt;&lt;li&gt;&lt;b&gt;Tahoma: &lt;/b&gt;也是humanist风格，字体和Verdana有点像，但是略窄一些，counter略小，曾经是Windows的标准字体，Mac 10.5之后默认也有安装。&lt;/li&gt;&lt;li&gt;&lt;b&gt;Trebuchet MS: &lt;/b&gt;为微软设计的一个humanist风格字体，个人觉得个性太过突出，用得不好会不搭。&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;Serif&lt;/u&gt;&lt;/b&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;b&gt;Georgia: &lt;/b&gt;基本上适合正文屏显的衬线字体，非Georgia莫属了。笔画粗重，衬线明线，轮廓较大，小字体显示也很清晰，同时细节还算OK。&lt;/li&gt;&lt;li&gt;&lt;b&gt;Times:&lt;/b&gt; Times是为了报纸而设计的，特点是可以在有限的空间塞进去更多的文字，笔画较弱，小字号正文屏显看起来累眼。曾经Engadget改版的时候用了Times作为正文，被骂得很惨之后换成了Georgia。&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;&lt;br&gt;中文不熟，抛砖引玉：&lt;br&gt;&lt;ol&gt;&lt;li&gt;中易宋体：Win最常见的字体，小字体点阵，大字体TrueType，但是大字体并不好看，所以最好别做标题。&lt;/li&gt;&lt;li&gt;微软雅黑：Vista之后新引入的字体，打开Cleartype之后显示效果不错，不开Cleartype发虚。&lt;/li&gt;&lt;li&gt;华文细黑：Mac下的默认中文。&lt;/li&gt;&lt;li&gt;Droid Sans和衍生的WenQuanYi Microhei：Andriod中的中文，也是Linux绝大多数发行版本的默认中文，，当然也有用WenQuanyi Zenhei的，不过比较少了。&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;&lt;br&gt;CSS3开始支持Embedded font所以英文字体选择一下子多了很多，而中文字体由于文件庞大，仍然就是那几个选。 </textarea>


<div class="zh-summary summary clearfix">

我比较熟悉英文，一个一个字体说： <b><u>Sans-serif</u></b> <b>Helvetica:</b> 被评为设计师最爱的字体，Realist风格，简洁现代的线条，非常受到追捧。在Mac下面被认为是最佳的网页字体，在Windows下由于Hinting的原因显示很糟糕。<b>Arial: </b>Helvetica的「克隆」，和Helvetica非常…

<a href="/question/19680724/answer/12867340" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" target="_blank" href="/question/19680724/answer/12867340">发布于 2011-07-09</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-52257"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>6 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="458" data-type="Answer">
<link itemprop="url" href="/question/37176452/answer/70944935">
<meta itemprop="answer-id" content="23798819" />
<meta itemprop="answer-url-token" content="70944935" />
<meta itemprop="answerCount" content="13" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/37176452" target="_blank" data-id="7077477" data-za-element-name="Title">
对即将入职前端工作的新人有哪些建议？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/37176452/answer/70944935">
<!-- <meta itemprop="answer-id" content="23798819">
<meta itemprop="answer-url-token" content="70944935"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>197</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">197</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$jikey"
target="_blank" href="/people/jikey"
>豪情</a></span><span title="一直在打杂，从未被超越" class="bio">
一直在打杂，从未被超越
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="197" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">197</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="7077477" data-action="/answer/content" data-author-name="豪情" data-entry-url="/question/37176452/answer/70944935">

<textarea hidden class="content">1.注意点神马？&lt;br&gt;话不要说太满，太绝对，比如：我今天肯定会完成xx，今天完成的东西一般汇报时说，明天，明天完成的到后天等等。&lt;br&gt;说到的要办到，以诚待人，勿以善欺人。&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4280955.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;如何快速的带领实习生或新人进入角色？&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;业余时间投资理财，投资学习，投资健康。&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4848398.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端工程师如何打发闲余时光?&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;技术是积累的，看到大牛，淡定一些，不要问：我如何才能到你现在的样子。简单两个字：努力，积累，坚持。&lt;br&gt;看到别人炫富，淡定些，不要问：我如何快速的赚钱，钱是慢慢来的。快速的结果，有可能某团伙就等着你。还是简单两个字：务实，积极，干活。&lt;br&gt;遇到波折时，不要怀疑自己的资质或努力的过程，要怀疑自己的方法或坚持的程度。波折谁都会遇到，真正的勇士是不是在顺流中荡开大笑，而是面对困难是嫣然一笑淡然面对之。简单两个字：乐观，微笑，面对。&lt;br&gt;做过的东西要记录，防止转正时，年终总结时，没有内容可写。&lt;br&gt;别人说东西的时候，一定要拿笔，关键的东西记下来，回头整理成电子的，或博客形式的。&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jikey.cnblogs.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;豪情 - 博客园&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;不要吝啬：谢谢，麻烦了。&lt;br&gt;&lt;br&gt;2. 需要掌握的技术：&lt;br&gt;css2.x, 3.0, javascript。&lt;br&gt;核心的就是这两个，其它的，都是以此为主的展开的，考验的还是你的基本功。&lt;br&gt;不要自己吓自己，被一些技能树吓到。然后工作中用到那个在学那个，遇到问题，解决问题，在学习相关的。&lt;br&gt;不要一口气学很多东西，不要想着学很多东西。学着发现问题，试着解决问题，在试着学习东西。&lt;br&gt;&lt;br&gt;3. 工作中沟通技巧：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4102881.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我们前端是怎么跟设计师沟通的&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4118088.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我们前端跟后端是怎么合作的&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4086385.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;技术人员应该如何让产品经理妥协&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;4. 潜规则就是：&lt;br&gt;你只要付出就有机会收获，没有付出一定不会有收获。&lt;br&gt;&lt;br&gt;5. 不用脱，但你可以主动约。&lt;br&gt;&lt;br&gt;总结&lt;br&gt;一个字，人生路很：累，但一定不要放弃努力，放弃希望，放弃梦想，路，就在脚下。&lt;br&gt;两个字：努力，积累，坚持，务实，积极，干活，乐观，微笑，面对，淡然。&lt;br&gt;三个字：平常心。&lt;br&gt;四个字：苦尽甘来，天道酬勤。&lt;br&gt;很多字：天生我才必有用，一入江湖岁月催。有朝一日虎归山，定要血染半边天。&lt;br&gt;&lt;br&gt;以上仅供参考。&lt;br&gt;还有疑问，或学习前端，建议加群：&lt;b&gt;492107297&lt;/b&gt;，禁止闲聊，非喜勿进。</textarea>


<div class="zh-summary summary clearfix">

1.注意点神马？ 话不要说太满，太绝对，比如：我今天肯定会完成xx，今天完成的东西一般汇报时说，明天，明天完成的到后天等等。 说到的要办到，以诚待人，勿以善欺人。 <a href="//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4280955.html" class=" wrap external" target="_blank" rel="nofollow noreferrer">如何快速的带领实习生或新人进入角色？<i class="icon-external"></i></a> 业余时间投资理财，投资学习，投资健康。 <a href="//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4848398.html" class=" wrap external" target="_blank" rel="nofollow noreferrer">前端…<i class="icon-external"></i></a>

<a href="/question/37176452/answer/70944935" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2015-11-05" target="_blank" href="/question/37176452/answer/70944935">编辑于 2015-11-06</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-7077477"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>19 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="459" data-type="Answer">
<link itemprop="url" href="/question/55043772/answer/142413843">
<meta itemprop="answer-id" content="52494876" />
<meta itemprop="answer-url-token" content="142413843" />
<meta itemprop="answerCount" content="60" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/55043772" target="_blank" data-id="14237533" data-za-element-name="Title">
前端程序员，游戏程序员，深度学习程序员三者相比谁更有前景？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/55043772/answer/142413843">
<!-- <meta itemprop="answer-id" content="52494876">
<meta itemprop="answer-url-token" content="142413843"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>197</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">197</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$muselover"
target="_blank" href="/people/muselover"
>缪斯的情人</a></span><span title="爆栈开发工程师 ，主要负责貌美如花" class="bio">
爆栈开发工程师 ，主要负责貌美如花
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="197" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">197</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="14237533" data-action="/answer/content" data-author-name="缪斯的情人" data-entry-url="/question/55043772/answer/142413843">

<textarea hidden class="content">大家好，我是MC缪斯，有首歌不知当唱不当唱，《一人撸码醉》送给题主：&lt;br&gt;一人 我撸码醉&lt;br&gt;醉把代码当佳人&lt;br&gt;两眼 全是热泪&lt;br&gt;我只求他日能早睡&lt;br&gt;&lt;br&gt;&lt;br&gt;变量 我轻定义&lt;br&gt;内存 我谨慎取&lt;br&gt;我痴情加班&lt;br&gt;我心甘情愿&lt;br&gt;我活该吃泡面&lt;br&gt;&lt;br&gt;说高薪 我呵呵笑&lt;br&gt;半夜 谁晓我键盘吵&lt;br&gt;我轻狂高傲&lt;br&gt;我懵懂无知&lt;br&gt;我只怪太年少&lt;br&gt;弃公职 我忘天下&lt;br&gt;斩断青丝我无牵挂&lt;br&gt;千古留名成笑话&lt;br&gt;&lt;br&gt;两年撸码已白发&lt;br&gt;一生撸码何人陪&lt;br&gt;我谁是谁非我谁相随&lt;br&gt;撸码一生为了谁？&lt;br&gt;&lt;br&gt;能爱几回我恨几回&lt;br&gt;败图灵 我斗苍天&lt;br&gt;我夺得码神以成仙&lt;br&gt;豪情万丈天地间&lt;br&gt;续写另类我屌丝篇&lt;br&gt;&lt;br&gt;红尘事我已斩断&lt;br&gt;久征沙场我人心乱&lt;br&gt;当年扬名又立万&lt;br&gt;我这一战无遗憾&lt;br&gt;&lt;br&gt;前端、游戏、AI三方向&lt;br&gt;到底哪个未来强&lt;br&gt;题主不要犯迷茫&lt;br&gt;且听小弟来讲一讲&lt;br&gt;&lt;br&gt;前端 网红小娇娘&lt;br&gt;三天两头换个妆&lt;br&gt;一盆冷水卸掉粉&lt;br&gt;lucy变回村里芬&lt;br&gt;&lt;br&gt;游戏 一套引擎千套皮肤&lt;br&gt;换个样式又成了风口上的猪&lt;br&gt;千万资金做豪赌&lt;br&gt;一言不合满盘输&lt;br&gt;&lt;br&gt;AI 深度学习正火热&lt;br&gt;前赴后继的碰瓷营销者&lt;br&gt;智能、弱智一个算法之隔&lt;br&gt;张口闭口卷积神经网络&lt;br&gt;&lt;br&gt;…&lt;br&gt;竹板这么一打啊(´⊙ω⊙`)！&lt;br&gt;实在编不下去啦&lt;br&gt;&lt;br&gt;注：改编自喊麦神曲MC井宁的《一人饮酒醉》，仅供娱乐</textarea>


<div class="zh-summary summary clearfix">

大家好，我是MC缪斯，有首歌不知当唱不当唱，《一人撸码醉》送给题主： 一人 我撸码醉 醉把代码当佳人 两眼 全是热泪 我只求他日能早睡 变量 我轻定义 内存 我谨慎取 我痴情加班 我心甘情愿 我活该吃泡面 说高薪 我呵呵笑 半夜 谁晓我键盘吵 我轻狂高傲 我…

<a href="/question/55043772/answer/142413843" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2017-01-23" target="_blank" href="/question/55043772/answer/142413843">编辑于 2017-02-02</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-14237533"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>36 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="feed-item feed-item-hook folding" itemprop="question" itemscope itemtype="http://schema.org/Question" data-score="460" data-type="Answer">
<link itemprop="url" href="/question/40505685/answer/86898655">
<meta itemprop="answer-id" content="30192481" />
<meta itemprop="answer-url-token" content="86898655" />
<meta itemprop="answerCount" content="10" />
<meta itemprop="isTopQuestion" content="false" />
<div class="feed-main">
<div class="content">
<h2><a class="question_link" href="/question/40505685" target="_blank" data-id="8409413" data-za-element-name="Title">
常见的前端性能优化手段都有哪些？都有多大收益？
</a></h2>
<div class="expandable entry-body">
<link itemprop="url" href="/question/40505685/answer/86898655">
<!-- <meta itemprop="answer-id" content="30192481">
<meta itemprop="answer-url-token" content="86898655"> -->

<div class="zm-item-vote">
<a class="zm-item-vote-count js-expand js-vote-count" href="javascript:;" data-bind-votecount>196</a>
</div>

<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="count">196</span>
<span class="label sr-only">赞同</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label sr-only">反对</span>
</button>
</div>



<div class="zm-item-answer-author-info">

<span class="summary-wrapper">
<span class="author-link-line">

<a class="author-link"
data-hovercard="p$t$zhu-jian-feng-95"
target="_blank" href="/people/zhu-jian-feng-95"
>朱建锋</a></span><span title="互联网码农一个" class="bio">
互联网码农一个
</span>
</span>
</div>

<div class="zm-item-vote-info" data-votecount="196" data-async-voters="1">



<span class="voters text"><a href="#" class="more text"><span class="js-voteCount">196</span>&nbsp;人赞同</a></span>


</div>
<div class="zm-item-rich-text expandable js-collapse-body" data-resourceid="8409413" data-action="/answer/content" data-author-name="朱建锋" data-entry-url="/question/40505685/answer/86898655">

<textarea hidden class="content">下面讲一下我的测试，基本思想就是测试一种优化手段在使用前后性能是否有所提升，以及提升了多少。我测试的优化手段是以下几个：合并请求、域名拆分、开启Gzip、开启keepalive、Minify。&lt;br&gt;&lt;br&gt;刚好春节前为了做技术分享做过一组测试，我可以分享一下自己的数据。（一般收益有多大根据业务不同也会不同的，硬要说有多大收益，其实并没有一个“标准”，我的数据也只能做个参考）。&lt;br&gt;&lt;br&gt;&lt;b&gt;构造被测页面&lt;/b&gt;&lt;br&gt;因为不同的网站页面大小不同，js/css个数不同，图片个数不同，比如淘宝首页和百度首页差别就非常大，所以构造被测页面确实没有一个完美的方法。我采用的方法是参考httparchive(&lt;a href=&quot;//link.zhihu.com/?target=http%3A//httparchive.org&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://httparchive.org/&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;)最近的统计值，决定网页中有多少个js/css和图片，以及它们的大小（数字并没有完全精确相等，但是比较接近），所以，构造的基准网页结构如下：&lt;br&gt;1.总请求数90，总大小1.6MB&lt;br&gt;2.HTML请求1个，大小4.1KB&lt;br&gt;2.CSS请求5个，总大小71.2KB，内容为一些开源的CSS库，因为测试只考虑网页的加载性能，不考虑渲染性能，所以CSS规则冲突之类的问题可以忽略。&lt;br&gt;3.JS请求27个，总大小404KB，内容为一些开源的JS代码，和上一条原因相同，忽略JS的执行效率问题，选择的代码中不包含对dom树的更改，所以理论上不会影响资源加载进度。&lt;br&gt;4.图片请求57个，总大小1.1MB，其中大图12张，体积3KB以下的小图标45个。&lt;br&gt;&lt;br&gt;&lt;b&gt;选择测试工具&lt;/b&gt;&lt;br&gt;这种测试最好有大量的测试样本和精确的指标计算，手工测试会累残，单机测试也不准，最好在全网范围内进行真实用户客户端的测试。市面上有一些提供测试的服务商，选择了其中的性能魔方（&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.mmtrix.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.mmtrix.com/&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;），有免费额度可用，收费版也不贵。&lt;br&gt;&lt;br&gt;&lt;b&gt;构造被测网站&lt;/b&gt;&lt;br&gt;这个不多说了，阿里云上买了一台虚拟机，绑定了域名，开了nginx，对不同的优化手段进行不同的配置，比如开关gzip的配置等。虚拟机是1核2G，Ubuntu的系统，按流量收费，峰值带宽100M。说个题外话，按流量收费真是太贵了，做个测试差点没把我做破产。&lt;br&gt;&lt;br&gt;&lt;b&gt;优化手段1：合并请求&lt;/b&gt;&lt;br&gt;合并请求的主要目的是减少浏览器对服务器发起的请求数，从而减少在发起请求过程中花费的时间。本测试采用了合并JS、合并CSS以及合并小图片（也就是使用CSS精灵）等方式来减少请求。优化前，页面的请求数和大小如上文所说，优化后，情况如下：&lt;br&gt;1.总请求数18，总大小1.6MB&lt;br&gt;2.HTML请求1个，大小4.3KB&lt;br&gt;2.CSS请求2个，总大小70.5KB，考虑到很多网站会有各个页面都使用的公用CSS，所以测试中并未把所有CSS合并成1个，而是合并成了两个。&lt;br&gt;3.JS请求2个，总大小398KB，与上一条理由差不多，也合并成了两个JS文件。&lt;br&gt;4.图片请求13个，总大小1.1MB，使用工具将45个小图标合并成了一张图片。&lt;br&gt;合并前的网页地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/combine/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/combine/ind&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ex.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，未开Gzip，未开KeepAlive&lt;br&gt;合并后的网页地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/combine/combined.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/combine/com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;bined.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，未开Gzip，未开KeepAlive&lt;br&gt;（现在访问这两个地址可能会有点慢，因为我把云主机的配置从100M带宽按流量收费改成了1M带宽按带宽收费了，测试的时候阿里云光流量费用就一天收了我100多大洋，再也不敢这么任性了）&lt;br&gt;啰嗦了这么多，是时候看结果了&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/4f9308e3b45291b460b25be0f111856f_b.png&quot; data-rawwidth=&quot;967&quot; data-rawheight=&quot;1232&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;967&quot; data-original=&quot;https://pic4.zhimg.com/4f9308e3b45291b460b25be0f111856f_r.png&quot;&gt;&lt;br&gt;上图中，颜色越靠近绿色速度就越快，越靠近红色就越慢。可以很直观的看出，在全国范围内，未优化网页明显比合并请求的网页慢很多。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/0c9a3898c9fd5c34637ca371f5a3bf33_b.png&quot; data-rawwidth=&quot;960&quot; data-rawheight=&quot;1073&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;960&quot; data-original=&quot;https://pic4.zhimg.com/0c9a3898c9fd5c34637ca371f5a3bf33_r.png&quot;&gt;&lt;br&gt;可以看出，在2月6日一整天的测试数据中，优化前后所有样本的平均整页时间（总下载时间）从&lt;b&gt;10.65&lt;/b&gt;秒提升到了&lt;b&gt;4.15&lt;/b&gt;秒，性能提升&lt;b&gt;1.56&lt;/b&gt;倍，同时可用性也有所提高，主要是因为请求数变少了，请求出错的概率就降低了。这里可以得出一个结论，在使用HTTP/1.1和HTTP/1.0的时候，能减少HTTP请求就尽量减少HTTP请求，因为每个请求都会消耗很多时间。对于使用HTTP/2.0的情况，我还了解不多，貌似使用Server Push技术可以无视资源数，有高手知道还望指教。&lt;br&gt;&lt;br&gt;&lt;b&gt;优化手段2：域名拆分&lt;/b&gt;&lt;br&gt;域名拆分主要是为了增加浏览器下载的并行度，让浏览器能同时发起更多的请求，所以本组实验主要由三个实验对象：&lt;br&gt;1.上文描述的基准网页，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/combine/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/combine/ind&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ex.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;2.将基准网页中的JS、CSS和图片分别使用三个域名加载，分别是 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//js.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;js.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//css.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;css.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//img.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;img.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/dns/dns3.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/dns/dns3.ht&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ml&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;3.在2的基础上进行更多的拆分，共9个，分别为&lt;a href=&quot;//link.zhihu.com/?target=http%3A//js1.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;js1.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//js2.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;js2.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//css1.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;css1.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//css2.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;css2.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//img1.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;img1.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//img2.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;img2.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//img3.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;img3.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//img4.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;img4.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;//link.zhihu.com/?target=http%3A//img5.jianfeng.in&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;img5.jianfeng.in&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/dns/dns9.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/dns/dns9.ht&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ml&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;同样都未开启Gzip，未开启KeepAlive，结果如下&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/0fccc27496e487fd5ce688f82bad7ea0_b.png&quot; data-rawwidth=&quot;967&quot; data-rawheight=&quot;1108&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;967&quot; data-original=&quot;https://pic1.zhimg.com/0fccc27496e487fd5ce688f82bad7ea0_r.png&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/adea9ee768800c2a34869feaf37b37f6_b.png&quot; data-rawwidth=&quot;960&quot; data-rawheight=&quot;199&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;960&quot; data-original=&quot;https://pic3.zhimg.com/adea9ee768800c2a34869feaf37b37f6_r.png&quot;&gt;&lt;br&gt;从结果中可以看出，拆分域名后，整页加载时间有所减低，但是并没有合并请求效果那么明显。其中，拆分为3个域名之后，整页时间降低了&lt;b&gt;22%&lt;/b&gt;，拆分为9个之后，整页时间降低了&lt;b&gt;25%&lt;/b&gt;。&lt;br&gt;其实这里有一点不符合我的预期，按照我看到的资料，域名拆分为3到5个比较合适，过多的域名会带来DNS解析时间的损耗，可能会降低性能，所以9个域名应该不会比3个域名性能好。在我的实验里，9个域名的DNS解析总时间也确实最长，达到了0.77秒。个人猜测，原因可能是在我的实验中，请求数比较多，DNS解析带来的性能损耗比并行下载带来的性能提升要小，所以总体上9个域名的性能还是比3格域名要好的。当然，这里只是猜测，大家如果有不同见解，可以评论里讨论。&lt;br&gt;&lt;br&gt;&lt;b&gt;优化手段3：开启Gzip&lt;/b&gt;&lt;br&gt;Gzip是一种压缩技术，可以将资源在服务端进行压缩，然后发送给浏览器后再进行解压，这种方式会降低传输大小，提高网页加载性能。本组实验的实验对象有两个：&lt;br&gt;1.基准网页，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/combine/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/combine/ind&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ex.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;2.对基准网页开启Gzip，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//gzip.jianfeng.in/combine/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;gzip.jianfeng.in/combin&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;e/index.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;两个网页均未开启KeepAlive，结果如下：&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/c71d301c9f793104362da0a56384877c_b.png&quot; data-rawwidth=&quot;967&quot; data-rawheight=&quot;1071&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;967&quot; data-original=&quot;https://pic1.zhimg.com/c71d301c9f793104362da0a56384877c_r.png&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/08320277885b2d1aaed396348d88c14b_b.png&quot; data-rawwidth=&quot;942&quot; data-rawheight=&quot;152&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;942&quot; data-original=&quot;https://pic4.zhimg.com/08320277885b2d1aaed396348d88c14b_r.png&quot;&gt;&lt;br&gt;从结果可以看出，开启Gzip后，整页时间从&lt;b&gt;10.65&lt;/b&gt;秒降低到&lt;b&gt;10.06&lt;/b&gt;秒，性能提升&lt;b&gt;5.5%&lt;/b&gt;，页面大小从&lt;b&gt;1572.14&lt;/b&gt;KB降低到&lt;b&gt;1257.69&lt;/b&gt;KB，降幅为&lt;b&gt;20%&lt;/b&gt;。由于测试页面中大量的内容是图片，而我又只对JS/CSS/HTML类型的资源开启了Gzip，所以优化收益一般，对于以文本为主的页面，Gzip的优化收益应该是很大的。&lt;br&gt;&lt;br&gt;&lt;b&gt;优化手段4：开启KeepAlive&lt;/b&gt;&lt;br&gt;开启KeepAlive能够减少浏览器与服务器建立连接的次数，从而节省建立连接时间。本组实验的对象有两个：&lt;br&gt;1.基准网页，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/combine/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/combine/ind&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ex.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;2.对基准网页开启了keepalive，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//keep.jianfeng.in/combine/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;keep.jianfeng.in/combin&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;e/index.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;两个网页均未开启gzip，结果如下：&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/65b2e28a840d199c385a0c7b0c52261b_b.png&quot; data-rawwidth=&quot;963&quot; data-rawheight=&quot;1090&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;963&quot; data-original=&quot;https://pic4.zhimg.com/65b2e28a840d199c385a0c7b0c52261b_r.png&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/d51b2cbc182347b079d366a17bac4833_b.png&quot; data-rawwidth=&quot;948&quot; data-rawheight=&quot;178&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;948&quot; data-original=&quot;https://pic4.zhimg.com/d51b2cbc182347b079d366a17bac4833_r.png&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/363f638e2ca710bd4640707d80f23761_b.png&quot; data-rawwidth=&quot;951&quot; data-rawheight=&quot;170&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;951&quot; data-original=&quot;https://pic2.zhimg.com/363f638e2ca710bd4640707d80f23761_r.png&quot;&gt;&lt;br&gt;从结果可以看出，开启KeepAlive后，整页时间从&lt;b&gt;10.65&lt;/b&gt;秒降低到&lt;b&gt;6.19&lt;/b&gt;秒，性能提升&lt;b&gt;41.8%&lt;/b&gt;，建立连接次数从&lt;b&gt;89&lt;/b&gt;次降低到&lt;b&gt;8&lt;/b&gt;次，建立连接总时间从&lt;b&gt;7.31&lt;/b&gt;秒降低到&lt;b&gt;1.86&lt;/b&gt;秒。对于同一个主机上请求数较多的的页面，开启KeepAlive可以较好的提高性能，但是开启KeepAlive也会使服务器负载变大，也更加容易遭受攻击，实际项目中需要权衡利弊。&lt;br&gt;&lt;br&gt;&lt;b&gt;优化手段5：Minify&lt;/b&gt;&lt;br&gt;Minify指的是将JS和CSS等文本文件进行最小化处理，一般对于CSS来说就是去除空格去除换行去除注释等，对于JS，除了上述方法外，还可以进行变量名替换，将长变量名替换为短变量名。目前有很多用户做Minify的工具，例如uglifyjs等。由于Minify只是对文本类资源进行的优化操作，所以本组实验的两个实验对象都是对基准网页进行一定的处理后而来，首先将基准网页中的图片删去大部分，只保留一张，其次，将JS和CSS先进行合并处理。得到实验对象如下：&lt;br&gt;1.未做Minify的网页，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/minify/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/minify/inde&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;x.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;2.对JS和CSS做了Minify的网页，地址为：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianfeng.in/minify/minified.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianfeng.in/minify/mini&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;fied.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;以上两个网页均未开启gzip和keepalive，结果如下：&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/87525b3da30f34a42e560838df9eb117_b.png&quot; data-rawwidth=&quot;965&quot; data-rawheight=&quot;1070&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;965&quot; data-original=&quot;https://pic4.zhimg.com/87525b3da30f34a42e560838df9eb117_r.png&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/f9d28f93404a7844ce9e2a12920c07e7_b.png&quot; data-rawwidth=&quot;948&quot; data-rawheight=&quot;159&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;948&quot; data-original=&quot;https://pic4.zhimg.com/f9d28f93404a7844ce9e2a12920c07e7_r.png&quot;&gt;&lt;br&gt;从结果可以看出，minify前后，整页时间从&lt;b&gt;1.69&lt;/b&gt;秒降低到了&lt;b&gt;1.24&lt;/b&gt;秒，性能提升了&lt;b&gt;26.6%&lt;/b&gt;，页面大小从&lt;b&gt;504.05&lt;/b&gt;KB减小到&lt;b&gt;224.52&lt;/b&gt;KB，降幅为&lt;b&gt;55.4&lt;/b&gt;%。Minify除了可以提高页面加载速度之外，还有另外一个收益，那就是可以降低网站的带宽费用，因为Minify是实实在在减小网页大小的。&lt;br&gt;&lt;br&gt;&lt;b&gt;总结&lt;/b&gt;&lt;br&gt;上述几个测试算是可以粗糙的证明常见的网页性能优化手段都是有收益的。在实验里有些手段收益大，有些手段收益小，在实际生产环境中，还是要根据自己的站点实际情况以及投入产出比进行使用。总之，别人的数据对自己的产品的价值还是有限的，重点是测试自己的站点，衡量自己的收益，用自己的数据指导自己的优化行为，这样才能获得更好的用户体验。</textarea>


<div class="zh-summary summary clearfix">
<img src="https://pic4.zhimg.com/4f9308e3b45291b460b25be0f111856f_200x112.png" data-rawwidth="967" data-rawheight="1232" class="origin_image inline-img zh-lightbox-thumb" data-original="https://pic4.zhimg.com/4f9308e3b45291b460b25be0f111856f_r.png">
下面讲一下我的测试，基本思想就是测试一种优化手段在使用前后性能是否有所提升，以及提升了多少。我测试的优化手段是以下几个：合并请求、域名拆分、开启Gzip、开启keepalive、Minify。 刚好春节前为了做技术分享做过一组测试，我可以分享一下自己的数据。…

<a href="/question/40505685/answer/86898655" class="toggle-expand">显示全部</a>

</div>



<p class="visible-expanded"><a itemprop="url" class="answer-date-link meta-item" data-tooltip="s$t$发布于 2016-02-18" target="_blank" href="/question/40505685/answer/86898655">编辑于 2016-02-19</a></p>

</div>
</div>
<div class="zm-item-meta feed-meta">
<div class="zm-item-meta answer-actions clearfix js-contentActions">
<div class="zm-meta-panel">

<a data-follow="q:link" class="follow-link zg-follow meta-item" href="javascript:;" id="sfb-8409413"><i class="z-icon-follow"></i>关注问题</a>

<a href="#" name="addcomment" class="meta-item toggle-comment js-toggleCommentBox">
<i class="z-icon-comment"></i>14 条评论</a>


<a href="#" class="meta-item zu-autohide js-thank" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide js-share"><i class="z-icon-share"></i>分享</a>

<a href="#" class="meta-item zu-autohide js-collect"><i class="z-icon-collect"></i>收藏</a>





<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" class="meta-item zu-autohide js-noHelp">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" class="meta-item zu-autohide js-report">举报</a>




<meta name="copyrightStatus" content="1">
<meta name="disableCopyAvatar" content="">

<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright">
作者保留权利
</a>


<button class="meta-item item-collapse js-collapse">
<i class="z-icon-fold"></i>收起
</button>
</div>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="zm-invite-pager">

<span><a href="?page=22">上一页</a></span>





<span><a href="?page=1">1</a></span>

<span>...</span>



<span><a href="?page=21">21</a></span>



<span><a href="?page=22">22</a></span>



<span class="zg-gray-normal">23</span>



<span><a href="?page=24">24</a></span>



<span><a href="?page=25">25</a></span>



<span>...</span>

<span><a href="?page=50">50</a></span>



<span><a href="?page=24">下一页</a></span>

</div>

</div>
</div>

</div>
</div>


<div class="zu-main-sidebar" data-za-module="RightSideBar">

<div class="zm-side-section">
<div class="zm-side-section-inner">
<div class="topic-header-side zm-entry-head-wrap">

<div class="clearfix"><div id="zh-topic-side-head">

<a href="javascript:;" name="focus" class="zg-mr10 zu-entry-focus-button zg-btn-white" id="tf-225">取消关注</a>

<div class="zm-topic-side-followers-info">

<a href="/topic/19550901/followers"><strong>108703</strong></a> 人关注了该话题

</div>
</div></div>
<div style="margin-top: 15px;">

<a class="zg-link-litblue-normal js-may-disable" href="/topic/19550901/organize">组织</a>
<span class="zg-bull">•</span>
<a class="zg-link-litblue-normal js-may-disable" href="/topic/19550901/manage">管理</a>
<span class="zg-bull">•</span>

<a class="zg-link-litblue-normal" href="/topic/19550901/log">日志</a>
</div>

</div>
</div>
</div>

<div class="zm-side-section">
<div class="zm-side-section-inner">
<h3 class="zm-topic-side-organize-title">描述
</h3>
<div id="zh-topic-desc" data-resourceid="225" data-action="/topic-introduction">
<div class="zm-editable-content" data-editable-maxlength="130" ></div>
</div>
</div>
</div>
<div class="shameimaru-placeholder" data-loc="topic_up" data-params='{&quot;topic_token&quot;: &quot;19550901&quot;}'></div>

<div class="zm-side-section" id="zh-topic-side-parents-list">
<div class="zm-side-section-inner parent-topic">
<h3 class="zm-topic-side-organize-title">父话题
</h3>
<div class="clearfix">

<a class="zm-item-tag"
href="/topic/19550516"
data-hovercard="t$b$19550516" data-token="19550516" data-topicid="98" data-za-element-name="Title">
Web 开发
</a>

<a class="zm-item-tag"
href="/topic/19552332"
data-hovercard="t$b$19552332" data-token="19552332" data-topicid="708" data-za-element-name="Title">
软件开发
</a>

<a class="zm-item-tag"
href="/topic/19561719"
data-hovercard="t$b$19561719" data-token="19561719" data-topicid="3839" data-za-element-name="Title">
网站开发
</a>

</div>
</div>
</div>
<div class="zm-side-section" id="zh-topic-side-children-list">
<div class="zm-side-section-inner child-topic">
<h3 class="zm-topic-side-organize-title">子话题
</h3>
<div class="clearfix">

<a class="zm-item-tag"
href="/topic/19552521"
data-hovercard="t$b$19552521" data-token="19552521" data-topicid="769" data-za-element-name="Title">
JavaScript
</a>

<a class="zm-item-tag"
href="/topic/19551326"
data-hovercard="t$b$19551326" data-token="19551326" data-topicid="369" data-za-element-name="Title">
CSS
</a>

<a class="zm-item-tag"
href="/topic/19573936"
data-hovercard="t$b$19573936" data-token="19573936" data-topicid="7912" data-za-element-name="Title">
前端工程师
</a>

<a class="zm-item-tag"
href="/topic/19551323"
data-hovercard="t$b$19551323" data-token="19551323" data-topicid="367" data-za-element-name="Title">
HTML
</a>

<a class="zm-item-tag"
href="/topic/19583739"
data-hovercard="t$b$19583739" data-token="19583739" data-topicid="11152" data-za-element-name="Title">
前端性能优化
</a>

<a class="zm-item-tag"
href="/topic/19806306"
data-hovercard="t$b$19806306" data-token="19806306" data-topicid="87560" data-za-element-name="Title">
前端框架
</a>

<a class="zm-item-tag"
href="/topic/19621319"
data-hovercard="t$b$19621319" data-token="19621319" data-topicid="23778" data-za-element-name="Title">
前端开发框架和库
</a>

<a class="zm-item-tag"
href="/topic/19590813"
data-hovercard="t$b$19590813" data-token="19590813" data-topicid="13512" data-za-element-name="Title">
前端入门
</a>

<a class="zm-item-tag"
href="/topic/19597369"
data-hovercard="t$b$19597369" data-token="19597369" data-topicid="15721" data-za-element-name="Title">
浏览器兼容性
</a>

<a class="zm-item-tag"
href="/topic/19566907"
data-hovercard="t$b$19566907" data-token="19566907" data-topicid="5573" data-za-element-name="Title">
Div+CSS
</a>

</div>

<a class="zg-link-litblue zm-topic-side-title-link" href="/topic/19550901/organize/entire#anchor-children-topic">共有 31 个子话题，查看话题结构 » </a>

</div>
</div>


<div class="zm-side-section">
<div class="zm-side-section-inner" id="zh-topic-top-answerer">
<h3>

<a href="/topic/19550901/top-writer" class='SidebarListNav-sideLink Link--light' target="_blank">
查看全部 »
</a>

活跃回答者</h3>
<div class='zm-topic-side-person-list'>

<div class="zm-topic-side-person-item">
<a href="/people/sharpmaster" data-hovercard="p$t$sharpmaster" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic1.zhimg.com/da8e974dc_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/sharpmaster" data-hovercard="p$t$sharpmaster" class="author-link">徐飞</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="三流程序员，二流架构师">三</span>流程序员，二流架构师

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/sharpmaster/topic/19550901/answers">在该话题下有 91 个回答，8980 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/fouber" data-hovercard="p$t$fouber" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic1.zhimg.com/ecfeb2b0c_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/fouber" data-hovercard="p$t$fouber" class="author-link">张云龙</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="全民直播CTO">全</span>民直播CTO

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/fouber/topic/19550901/answers">在该话题下有 30 个回答，9722 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/evanyou" data-hovercard="p$t$evanyou" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic4.zhimg.com/7be980a0f_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/evanyou" data-hovercard="p$t$evanyou" class="author-link">尤雨溪</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="不会搞艺术的程序员不是好设计师">不</span>会搞艺术的程序员不是好设计师

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/evanyou/topic/19550901/answers">在该话题下有 128 个回答，12K 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/kejun" data-hovercard="p$t$kejun" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic2.zhimg.com/191ec5daa9b4d6931eed0eba8a9cf39d_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/kejun" data-hovercard="p$t$kejun" class="author-link">张克军</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="豆瓣前端工程师">豆</span>瓣前端工程师

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/kejun/topic/19550901/answers">在该话题下有 40 个回答，3330 赞同</a>


</div>
</div>
</div>

<div class="zm-topic-side-person-item">
<a href="/people/he-shi-jun" data-hovercard="p$t$he-shi-jun" class="zm-list-avatar-link">
<img class="zm-list-avatar" src="https://pic1.zhimg.com/da8e974dc_s.jpg" />
</a>
<div class="zm-topic-side-person-item-content">
<a href="/people/he-shi-jun" data-hovercard="p$t$he-shi-jun" class="author-link">贺师俊</a><span class="icon icon-badge-best_answerer icon-badge" data-tooltip="s$b$优秀回答者"></span><div class="ellipsis"><span class="badge-summary">优秀回答者</span>
<span class="bio" title="Web开发者">W</span>eb开发者

</div>
<div class="zg-gray-normal">
<a class="gray_link" href="/people/he-shi-jun/topic/19550901/answers">在该话题下有 396 个回答，14K 赞同</a>


</div>
</div>
</div>


</div>
</div>
</div>


<div class="shameimaru-placeholder" data-loc="topic_down" data-params='{&quot;topic_token&quot;: &quot;19550901&quot;}'></div>

</div>


</div>


<div id="zh-footer" class="zh-footer">
<div class="content zg-wrap clearfix">
<ul>

<li><a href="https://liukanshan.zhihu.com" target="_blank">刘看山</a></li>

<li><a href="/question/19581624" target="_blank">知乎指南</a></li>
<li><a href="javascript:;" id="js-feedback-button">建议反馈</a></li>

<li><a href="/app" target="_blank">移动应用</a></li>
<li><a href="/careers">加入知乎</a></li>
<li><a href="/terms" target="_blank">知乎协议</a></li>
<li><a href="/jubao" target="_blank">举报投诉</a></li>
<li><a href="/contact">联系我们</a></li>

</ul>

<span class="copy">&copy; 2017 知乎</span>

</div>
</div>

<script type="text/json" class="json-inline" data-name="guiders2">{"exclusive-popover":{},"section":{},"editor":[]}</script>
<script type="text/json" class="json-inline" data-name="current_user">["\u6587\u5200\u6c34\u539f","liu-yuan-39-9","https:\/\/pic2.zhimg.com\/56a9754ca686ba7d3b1e725c6452ccd1_s.png","649f8fe7032b205a3cbbbb875135734d","\u534a\u8def\u51fa\u5bb6\u5b66\u5b89\u5353",0,0,true,"174596549@qq.com","http:\/\/mail.qq.com",0,false,false,false,"32745954738176",false,false,false,true,null]</script>
<script type="text/json" class="json-inline" data-name="user_status">[null,null,false]</script>
<script type="text/json" class="json-inline" data-name="env">["zhihu.com","comet.zhihu.com",false,null,false,false]</script>
<script type="text/json" class="json-inline" data-name="permissions">[]</script>


<script type="text/json" class="json-inline" data-name="ga_vars">{"user_created":1378258190000,"now":1486365878000,"abtest_mask":"---------0--------------------","user_attr":[1,0,0,"-",1],"user_hash":"649f8fe7032b205a3cbbbb875135734d"}</script>

<script type="text/json" class="json-inline" data-name="ra-urls">{"Copyright":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/Copyright.98ac6609.js","PayUIApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/PayUIApp.ca78ba78.js","CouponApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/CouponApp.66b486a6.js","PaymentApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/PaymentApp.7f16d61c.js","Community":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/Community.920e484a.js","Report":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/Report.26635627.js","OrgOpHelp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/OrgOpHelp.f1709e97.js","common":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/common.a4dd3236.js","BalanceApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/BalanceApp.14e3a013.js","AnswerWarrant":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/AnswerWarrant.97f134aa.js","CommentApp":"https:\/\/static.zhihu.com\/static\/revved\/-\/apps\/CommentApp.7556991d.js"}</script>

<script type="text/json" class="json-inline" data-name="current_topic">[["\u524d\u7aef\u5f00\u53d1","19550901","https:\/\/pic1.zhimg.com\/v2-8e66233f5558e741bad3a8c50b9566c8_s.jpg",225],[["Web \u5f00\u53d1","19550516","https:\/\/pic3.zhimg.com\/891b4f32a_s.jpg"],["\u8f6f\u4ef6\u5f00\u53d1","19552332","https:\/\/pic2.zhimg.com\/185d9c33d_s.jpg"],["\u7f51\u7ad9\u5f00\u53d1","19561719","https:\/\/pic2.zhimg.com\/78645670d_s.jpg"]],1,0,"",0]</script>

<script src="https://static.zhihu.com/static/revved/-/js/vendor.cb14a042.js"></script>
<script src="https://static.zhihu.com/static/revved/-/js/closure/base.6cca0b95.js"></script>

<script src="https://static.zhihu.com/static/revved/-/js/closure/common.31d4e5c0.js"></script>


<script src="https://static.zhihu.com/static/revved/-/js/closure/richtexteditor.71ca49de.js" async></script>
<script src="https://static.zhihu.com/static/revved/-/js/closure/page-main.c075e49f.js"></script>
<meta name="entry" content="ZH.entryT" data-module-id="page-main">

<script type="text/zscript" znonce="43143326a1294c3c9db3c466a9408cc3"></script>

<input type="hidden" name="_xsrf" value="b08047425d2b394c9b9106bb47ce2ec8"/>
</body>
</html>