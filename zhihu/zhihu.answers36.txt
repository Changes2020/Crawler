[
  {
    "question": "\n和 C/C++ 相比，JavaScript 的性能差在哪里 ？\n",
    "author": "vczh",
    "content": "\n\n<textarea hidden class=\"content\">关于这个问题的所有解释最后都会归结到一个根本的原因：js代码类型推导太难</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n关于这个问题的所有解释最后都会归结到一个根本的原因：js代码类型推导太难\n\n<a href=\"/question/24513031/answer/28049911\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/24513031/answer/28049911\">发布于 2014-07-17</a></p>\n\n",
    "link": "https://zhihu.com/question/24513031/answer/28049911"
  },
  {
    "question": "\nWeb前端岗位面试题有哪些？\n",
    "author": "汪汪",
    "content": "\n\n<textarea hidden class=\"content\">作者：汪汪&lt;br&gt;链接：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22606894&quot; class=&quot;internal&quot;&gt;知乎专栏&lt;/a&gt;&lt;br&gt;来源：知乎&lt;br&gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;br&gt;&lt;br&gt;&lt;p&gt;这篇文章是对我大四秋招以来面试的总结，里面包含前端面试知识的方方面面，目前本人已经拿到腾讯offer，希望能对后面找工作的学习学妹们有所帮助。&lt;/p&gt;&lt;p&gt;腾讯面试对基础比较看重，然后需要你有两三个比较好的项目，一面重视面试者对前端基础的把握，还要手写代码，不过不难，二面部门的leader面，这一面比较难，面试官会对你的项目细节进行深挖，所以说项目要牛逼一点，最后还会有一道逻辑题（我没有答上来），三面是HR面，如果你想进大公司的话，下面这些技术是肯定要掌握的：html5，css3，JavaScript，略懂一点jQuery源码，Node.js，express，mongoose，数据库mongodb。大公司问的核心在于JavaScript。如果下面的知识点你都可以打上来，恭喜你拿下bat不是问题--2016-11-11写&lt;/p&gt;&lt;p&gt;转载请注明出处，码这么多字不容易。&lt;/p&gt;&lt;br&gt;&lt;p&gt;一、html+css部分、&lt;/p&gt;&lt;p&gt;（1）css盒模型，可能会要求手写一个布局，这个布局基本上用到的css是margin的负值，boxing-sizing：border-box，布局尽量往这方面想。浏览器布局的基本元素是盒，在w3c的标准模式下，width=width，但是在怪异模式下，width=border*2+padding*2+width;其中后代元素的width：100%；参照的是右边的那个width，&lt;/p&gt;&lt;p&gt;（2）html5的新特性&lt;/p&gt;&lt;p&gt;1、标签语义化，比如header，footer，nav，aside，article，section等，新增了很多表单元素，入email，url等，除去了center等样式标签，还有除去了有性能问题的frame，frameset等标签&lt;/p&gt;&lt;p&gt;2、音视频元素，video，audio的增加使得我们不需要在依赖外部的插件就可以往网页中加入音视频元素。&lt;/p&gt;&lt;p&gt;3、新增很多api，比如获取用户地理位置的window.navigator.geoloaction，&lt;/p&gt;&lt;p&gt;4、websocket&lt;/p&gt;&lt;p&gt;websocket是一种协议，可以让我们建立客户端到服务器端的全双工通信，这就意味着服务器端可以主动推送数据到客户端，&lt;/p&gt;&lt;p&gt;5、webstorage，webstorage是本地存储，存储在客户端，包括localeStorage和sessionStorage，localeStorage是持久化存储在客户端，只要用户不主动删除，就不会消失，sessionStorage也是存储在客户端，但是他的存在时间是一个回话，一旦浏览器的关于该回话的页面关闭了，sessionStorage就消失了，&lt;/p&gt;&lt;p&gt;6、缓存&lt;/p&gt;&lt;p&gt;html5允许我们自己控制哪些文件需要缓存，哪些不需要，具体的做法如下：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;1、首先给html添加manifest属性，并赋值为cache.manifest\n2、cache.manifest的内容为: \n         CACHE MANIFEST\n         #v1.2\n         CACHE :           //表示需要缓存的文件\n           a.js\n           b.js\n       NETWORK:    //表示只在用户在线的时候才需要的文件，不会缓存\n         c.js\n       FALLBACK\n       /        /index.html     //表示如果找不到第一个资源就用第二个资源代替\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;7、web worker，web worker是运行在浏览器后台的js程序，他不影响主程序的运行，是另开的一个js线程，可以用这个线程执行复杂的数据操作，然后把操作结果通过postMessage传递给主线程，这样在进行复杂且耗时的操作时就不会阻塞主线程了。&lt;/p&gt;&lt;p&gt;（3）对html5的语义话的理解&lt;/p&gt;&lt;p&gt;html5的语义化指的是用正确的标签包含正确的内容，比如nav标签，里面就应该包含导航条的内容，而不是用做其他的用途，标签语义化的好处就是结构良好，便于阅读，方便威化，也有利于爬虫的查找，提高搜索率。&lt;/p&gt;&lt;br&gt;&lt;p&gt;（4）cookie，sessionStorage，localeStorage的区别&lt;/p&gt;&lt;p&gt;cookie是存储在浏览器端，并且随浏览器的请求一起发送到服务器端的，它有一定的过期时间，到了过期时间自动会消失。sessionStorage和localeStorage也是存储在客户端的，同属于web Storage，比cookie的存储大小要大有8m，cookie只有4kb，localeStorage是持久化的存储在客户端，如果用户不手动清除的话，不会自动消失，会一直存在，sessionStorage也是存储在客户端，但是它的存活时间是在一个回话期间，只要浏览器的回话关闭了就会自动消失。&lt;/p&gt;&lt;p&gt;（5）多个页面之间如何进行通信&lt;/p&gt;&lt;p&gt;使用cookie，使用web worker，使用localeStorage和sessionStorage&lt;/p&gt;&lt;p&gt;（6）浏览器的渲染过程&lt;/p&gt;&lt;p&gt;1、首先获取html，然后构建dom树&lt;/p&gt;&lt;p&gt;2、其次根据css构建render树，render树中不包含定位和几何信息&lt;/p&gt;&lt;p&gt;3、最后构建布局数，布局是含有元素的定位和几何信息&lt;/p&gt;&lt;p&gt;（7）重构、回流&lt;/p&gt;&lt;p&gt;浏览器的重构指的是改变每个元素外观时所触发的浏览器行为，比如颜色，背景等样式发生了改变而进行的重新构造新外观的过程。重构不会引发页面的重新布局，不一定伴随着回流，&lt;/p&gt;&lt;p&gt;回流指的是浏览器为了重新渲染页面的需要而进行的重新计算元素的几何大小和位置的，他的开销是非常大的，回流可以理解为渲染树需要重新进行计算，一般最好触发元素的重构，避免元素的回流；比如通过通过添加类来添加css样式，而不是直接在DOM上设置，当需要操作某一块元素时候，最好使其脱离文档流，这样就不会引起回流了，比如设置position：absolute或者fixed，或者display：none，等操作结束后在显示。&lt;/p&gt;&lt;p&gt;二、JavaScript部分&lt;/p&gt;&lt;p&gt;（1）JavaScript的数据类型&lt;/p&gt;&lt;p&gt;基本数据类型：Number，String，Boolean，Undefined，Null&lt;/p&gt;&lt;p&gt;复杂数据类型：Object，Array，Function，RegExp，Date，Error&lt;/p&gt;&lt;p&gt;全局数据类型：Math&lt;/p&gt;&lt;p&gt;（2）JavaScript的闭包&lt;/p&gt;&lt;p&gt;闭包简单的说就是一个函数能访问外部函数的变量，这就是闭包，比如说：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function a(x){\n       var tem=3;\n      function b(y){\n          console.log(x+y+(++tem));\n     }\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;a函数中的b函数就是闭包了，b函数可以使用a函数的局部变量，参数，最典型的闭包应该是下面这样，将定义在函数中的函数作为返回值&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function a(x){\n       var tem=3;\n      function b(y){\n          console.log(x+y+(++tem));\n     }\nreturn b;\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;闭包的另一种作用是隔离作用域，请看下面这段代码&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;for(var i=0;i&amp;lt;2;i++){\n      setTimeout(function(){\n              console.log(i);\n        },0);\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面这段代码的执行结果是2,2而不是0,1，因为等for循环出来后，执行setTimeout中的函数时，i的值已经变成了2，这就是没有隔离作用域所造成的，请看下面代码&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;for(var i=0;i&amp;lt;2;i++){\n      (function(i){\n             setTimeout(function(){\n              console.log(i);\n        },0)\n    })(i);\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就会输出0,1，我们的立即执行函数创建了一个作用域，隔离了外界的作用域，闭包的缺点是，因为内部闭包函数可以访问外部函数的变量，所以外部函数的变量不能被释放，如果闭包嵌套过多，会导致内存占用大，要合理使用闭包。&lt;/p&gt;&lt;p&gt;（3）new 操作符到底做了什么&lt;/p&gt;&lt;p&gt;  首先，new操作符为我们创建一个新的空对象，然后this变量指向该对象，&lt;/p&gt;&lt;br&gt;&lt;p&gt;  其次，空对象的原型执行函数的原型，&lt;/p&gt;&lt;p&gt;  最后，改变构造函数内部的this的指向&lt;/p&gt;&lt;p&gt;代码如下：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var obj={};\nobj.__proto__=fn.prototype;\nfn.call(obj);\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（4）改变函数内部this指针的指向函数&lt;/p&gt;&lt;p&gt;call和apply，假设要改变fn函数内部的this的指向，指向obj，那么可以fn.call(obj);或者fn.apply(obj);那么问题来了，call和apply的区别是什么，其是call和apply的区别在于参数，他们两个的第一个参数都是一样的，表示调用该函数的对象，apply的第二个参数是数组，是[arg1,arg2,arg3]这种形式，而call是arg1,arg2,arg3这样的形式。还有一个bind函数，&lt;/p&gt;&lt;p&gt;var bar=fn.bind(obj);那么fn中的this就指向obj对象了，bind函数返回新的函数，这个函数内的this指针指向obj对象。&lt;/p&gt;&lt;p&gt;（5）JavaScript的作用域和作用域链&lt;/p&gt;&lt;p&gt;JavaScript的作用域指的是变量的作用范围，内部作用域由函数的形参，实参，局部变量，函数构成，内部作用域和外部的作用域一层层的链接起来形成作用域链，当在在函数内部要访问一个变量的时候，首先查找自己的内部作用域有没有这个变量，如果没有就到这个对象的原型对象中去查找，还是没有的话，就到该作用域所在的作用域中找，直到到window所在的作用域，每个函数在声明的时候就默认有一个外部作用域的存在了，比如：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var t=4;\nfunction foo(){\n       var tem=12;\n      funciton bar(){\n       var temo=34;\n       console.log(t+&quot; &quot;+tem+&quot; &quot;+temo);\n      }\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bar找t变量的过程就是，先到自己的内部作用域中找，发现没有找到，然后到bar所在的最近的外部变量中找，也就是foo的内部作用域，还是没有找到，再到window的作用域中找，结果找到了&lt;/p&gt;&lt;p&gt;（6）JavaScript的继承&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function A(name){  this.name=name; }\nA.prototype.sayName=function(){ console.log(this.name); }\nfunction B(age){ this.age=age; }\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;原型继承&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;B.prototype=new A(&quot;mbj&quot;);  //被B的实例共享\nvar foo=new B(18);\nfoo.age;    //18,age是本身携带的属性\nfoo.name;   //mbj，等价于foo.__proto__.name\nfoo.sayName(); //mbj,等价于foo.__proto__.proto__.sayName()\nfoo.toString();  //&quot;[object Object]&quot;,等价于foo.__proto__.__proto__.__proto__.toString();\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样B通过原型继承了A，在new B的时候，foo中有个隐藏的属性__proto__指向构造函数的prototype对象，在这里是A对象实例，A对象里面也有一个隐藏的属性__proto__,指向A构造函数的prototype对象，这个对象里面又有一个__proto__指向Object的prototype&lt;br&gt;&lt;/p&gt;&lt;p&gt;这种方式的缺第一个缺点是所有子类共享父类实例，如果某一个子类修改了父类，其他的子类在继承的时候，会造成意想不到的后果。第二个缺点是在构造子类实例的时候，不能给父类传递参数。&lt;/p&gt;&lt;b&gt;构造函数继承&lt;/b&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function B(age,name){  this.age=age;A.call(this,name); }\nvar foo=new B(18,&quot;wmy&quot;);\nfoo.name;     //wmy\nfoo.age;      //18\nfoo.sayName();   //undefined\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;采用这种方式继承是把A中的属性加到this上面，这样name相当于就是B的属性，sayName不在A的构造函数中，所以访问不到sayName。这种方法的缺点是父类的prototype中的函数不能复用。&lt;/p&gt;&lt;p&gt;&lt;b&gt;原型继承+构造函数继承&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function B(age,name){  this.age=age;A.call(this,name); }\nB.prototype=new A(&quot;mbj&quot;);\nvar foo=new B(18,&quot;wmy&quot;);\nfoo.name;     //wmy\nfoo.age;      //18\nfoo.sayName();   //wmy\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就可以成功访问sayName函数了，结合了上述两种方式的优点，但是这种方式也有缺点，那就是占用的空间更大了。&lt;/p&gt;&lt;p&gt;（7）JavaScript变量提升&lt;/p&gt;&lt;p&gt;请看下面代码&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var bar=1;\nfunction test(){\n  console.log(bar);     //undeifned\n  var bar=2; \n  console.log(bar);  //2\n}\ntest();\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为什么在test函数中会出现上述结果呢，这就是JavaScript的变量提升了，虽然变量bar的定义在后面，不过浏览器在解析的时候，会把变量的定义放到最前面，上面的test函数相当于&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;function test(){\n  var bar;\n  console.log(bar);   //undefined\n  bar=2; \n  console.log(bar);   //2\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;再看&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var foo=function(){  console.log(1); }\nfunction foo(){  console.log(2); }\nfoo();  //结果为1\n同样的，函数的定义也会到提升到最前面，上面的代码相当于\nfunction foo(){  console.log(2); }\nvar foo;\nfoo=funciton(){ console.log(1); }\nfoo();   //1\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（8）JavaScript事件模型&lt;/p&gt;&lt;p&gt;原始事件模型，捕获型事件模型，冒泡事件模型，&lt;/p&gt;&lt;p&gt;原始事件模型就是ele.onclick=function(){}这种类型的事件模型&lt;/p&gt;&lt;p&gt;冒泡事件模型是指事件从事件的发生地（目标元素），一直向上传递，直到document，&lt;/p&gt;&lt;p&gt;捕获型则恰好相反，事件是从document向下传递，直到事件的发生地（目标元素）&lt;/p&gt;&lt;p&gt;IE是只支持冒泡事件模型的，下面是兼容各个浏览器的事件监听代码&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;EventUtil={\n  addListener:function(target,type,handler){\n    if(target.addEventListener){\n        target.addEventListener(type,handler);\n    }else if(target.attachEvent){\n        target.attach(&quot;on&quot;+type,function(){\n              handler.call(target);  //让handler中的this指向目标元素\n        });\n    }else{\n        target[&quot;on&quot;+type]=handler;\n    }\n  },\n removeListener:function(target,type,handler){   \n      if(target.removeEventListener){    \n        target.removeEventListener(type,handler);          \n     }else if(target.detachEvent){\n        target.detachEvent(&quot;on&quot;+type,handler);\n     }else{\n        target[&quot;on&quot;+type]=null;\n     }\n  },\n getEvent:function(e){      //获取事件对象\n     var evt=window.event||e;\n     return evt;\n },\n getTarget:function(e){      //获得目标对象\n     var evt=EventUtil.getEvent(e);\n     var target;\n     if(evt.target){ target=evt.target;}\n     else {target=evt.srcElement;}\n     return target;\n },\n stopPropagation:function(e){  //停止冒泡\n     var evt=EventUtil.getEvent(e);\n     if(evt.stopPropagation) {evt.stopPropagation();}\n     else {evt.cancelBubble=true;}\n },\n preventDefault:function(e){   //阻值默认行为的发生\n     var evt=EventUtil.getEvent(e);\n     if(evt.preventDefault){ evt.preventDefault(); }\n     else {e.returnValue=false;}\n }\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（9）内存泄漏&lt;/p&gt;&lt;p&gt;内存泄漏指的是浏览器不能正常的回收内存的现象&lt;/p&gt;&lt;p&gt;（10）浏览器的垃圾回收机制&lt;/p&gt;&lt;br&gt;&lt;p&gt;垃圾收集器必须跟踪哪个变量有用哪个变量没用，对于不再有用的变量打上标记，以备将来收回其占用的内存，内存泄露和浏览器实现的垃圾回收机制息息相关， 而浏览器实现标识无用变量的策略主要有下两个方法：&lt;/p&gt;&lt;p&gt;&lt;b&gt;第一，引用计数法&lt;/b&gt;&lt;/p&gt;&lt;p&gt;跟踪记录每个值被引用的次数。当声明一个变量并将引用类型的值赋给该变量时，则这个值的引用次数就是1。如果同一个值又被赋给另一个变量，则该值的引用次 数加1.相反，如果包含对这个值引用的变量又取得另外一个值，则这个值的引用次数减1.当这个值的引用次数变成0时，则说明没有办法访问这个值了，因此就 可以将其占用的内存空间回收回来。&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;如： var a = {};     //对象{}的引用计数为1\n     b = a;          //对象{}的引用计数为 1+1 \n     a = null;       //对象{}的引用计数为2-1\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以这时对象{}不会被回收;&lt;/p&gt;&lt;p&gt;IE 6, 7 对DOM对象进行引用计数回收， 这样简单的垃圾回收机制，非常容易出现循环引用问题导致内存不能被回收， 进行导致内存泄露等问题，一般不用引用计数法。&lt;/p&gt;&lt;p&gt;&lt;b&gt;第二，标记清除法&lt;/b&gt;&lt;/p&gt;&lt;p&gt;到2008年为止，IE,Firefox,Opera,Chrome和Safari的javascript实现使用的都是标记清除式的垃圾收集策略（或类似的策略），只不过垃圾收集的时间间隔互有不同。&lt;/p&gt;&lt;p&gt;标记清除的算法分为两个阶段，标记(mark)和清除(sweep). 第一阶段从引用根节点开始标记所有被引用的对象，第二阶段遍历整个堆，把未标记的对象清除。&lt;/p&gt;&lt;p&gt;（11）同源策略&lt;/p&gt;&lt;p&gt;同源策略是浏览器有一个很重要的概念。所谓同源是指，域名，协议，端口相同。不同源的客户端脚本(javascript、ActionScript)在没明确授权的情况下，不能读写对方的资源。简单的来说，浏览器允许包含在页面A的脚本访问第二个页面B的数据资源，这一切是建立在A和B页面是同源的基础上。&lt;/p&gt;&lt;br&gt;&lt;p&gt;（12）跨域的几种方式&lt;/p&gt;&lt;p&gt;jsonp（利用script标签的跨域能力）跨域、websocket（html5的新特性，是一种新协议）跨域、设置代理服务器（由服务器替我们向不同源的服务器请求数据）、CORS（跨源资源共享，cross origin resource sharing）、iframe跨域、postMessage(包含iframe的页面向iframe传递消息)&lt;/p&gt;&lt;p&gt;（13）异步和同步&lt;/p&gt;&lt;p&gt;同步指下一个程序的执行需要等到上一个程序执行完毕，也就是得出结果后下一个才能执行，&lt;/p&gt;&lt;p&gt;异步指的是上一个程序指向后，下一个程序不用等到上一个程序出结果就能执行，等上一个出结果了调用回调函数处理结果就好。&lt;/p&gt;&lt;p&gt;（14）JavaScript的值类型和引用类型&lt;/p&gt;&lt;p&gt;JavaScript有两种类型的数据，值类型和引用类型，一般的数字，字符串，布尔值都是值类型，存放在栈中，而对象，函数，数组等是引用类型，存放在堆中，对引用类型的复制其实是引用复制，相当于复制着地址，对象并没有真正的复制。&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var a=5;var b=a;a=null;    //那么b是5\nvar a={},var b=a;b.name=&quot;mbj&quot;;\nconsole.log(a.name);   //mbj，因为a，b指向同一个对象\na=null;console.log(typeof b);  //object，a=null，只是a不再指向该对象，但是这个对象还是在堆中确确实实的存在，b依然指向它。\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（15）优化下面代码&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var str=&quot;我喜欢我可爱的女朋友，&quot;；\nstr=str+&quot;她叫喵喵，&quot;;\nstr=str+&quot;她时而可爱，时而认真，&quot;;\nstr=str+&quot;她那天真的笑声可以让人忘掉一切烦恼。&quot;;\nconsole.log(str);\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里的优化主要是对加号操作符的优化，因为加号在JavaScript中非常耗时和耗内存，需要经过以下六步：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;1、首先开辟一块临时空间，存储字符串，\n2、然后在开辟一块空间\n3、把str中的字符串复制到刚刚开辟的空间\n4、在把需要连接的字符串复制到str后面\n5、str指向这块空间\n6、回收str原来的空间和临时空间\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;优化的方法是使用数组的push方法，数组是连续的存储空间，可以省下很多步&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var res=[];\nvar str=&quot;我喜欢我可爱的女朋友，&quot;；\nres.push(str);\nres.push(&quot;她叫喵喵，&quot;);\nres.push(&quot;她时而可爱，时而认真，&quot;);\nres.push(&quot;她那天真的笑声可以让人忘掉一切烦恼。&quot;);\nconsole.log(res.join(&quot;&quot;));    \n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（16）封装cookie的添加，删除，查询方法&lt;/p&gt;&lt;p&gt;cookie是存储在浏览器端的，可以用于存储sessionID，也可以用于自动登陆，记住密码等，但是在浏览器端并没有官方的操作cookie的方法，下面我们来封装一下：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;CookieUtil=｛\n    addCookie:function(key,value,options){\n        var str=key+&quot;=&quot;+escape(value);\n        if(options.expires){\n           var curr=new Date();   //options.expires的单位是小时\n           curr.setTime(curr.getTime()+options.expires*3600*1000);\n           options.expires=curr.toGMTString();\n        }\n        for(var k in options){   //有可能指定了cookie的path，cookie的domain\n           str+=&quot;;&quot;+k+&quot;=&quot;+options[k];\n        }\n        document.cookie=str;\n    },\n    queryCookie:function(key){\n      var cookies=document.cookie;\n     //获得浏览器端存储的cookie,格式是key=value;key=value;key=value\n      cookies+=&quot;;&quot;;\n      var start=cookies.indexOf(key);\n      if(start&amp;lt;=-1){ return null; }  //说明不存在该cookie\n      var end=cookies.indexOf(&quot;;&quot;,start);\n      var value=cookies.slice(start+key.length+1,end);\n      return unescape(value);\n    },\n    deleteCookie:function(key){\n      var value=CookieUtil.queryCookie(key);\n      if(value===null){return false;}\n      CookieUtil.addCookie(key,value,{expires:0});//把过期时间设置为0，浏览器会马上自动帮我们删除cookie\n    }\n｝\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（17）事件委托机制&lt;/p&gt;&lt;p&gt;事件委托指的是，不再事件的发生地设立监听函数，而是在事件发生地的父元素或者祖先元素设置监听器函数，这样可以大大提高性能，因为可以减少绑定事件的元素，比如：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;ul&amp;gt;\n &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;\n &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;\n &amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;\n&amp;lt;/ul&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要给li元素绑定click事件，使用事件委托机制的话，就只需要给ul绑定click事件就行了，这样就不需要给每个li'绑定click事件，减小内存占用，提高效率，有兴趣的童鞋可以去看看jQuery的live，bind，on，delegate函数的区别，这几个函数就采用了事件委托机制。&lt;/p&gt;&lt;p&gt;三、其他部分&lt;/p&gt;&lt;p&gt;（1）http状态码&lt;/p&gt;&lt;p&gt;http状态码是表示服务器对请求的响应状态，主要分为以下几个部分&lt;/p&gt;&lt;p&gt;1**：这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束&lt;/p&gt;&lt;p&gt;2**：表示请求成功，&lt;/p&gt;&lt;p&gt;3**：表示重定向&lt;/p&gt;&lt;p&gt;4**：表示客户端错误&lt;/p&gt;&lt;p&gt;5**：表示服务器端错误&lt;/p&gt;&lt;p&gt;100（continue），客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收&lt;/p&gt;&lt;p&gt;200（OK），表示请求成功，请求所希望的响应头或数据体将随此响应返回。&lt;/p&gt;&lt;p&gt;202（Accepted），服务器已接受请求，但尚未处理。&lt;/p&gt;&lt;p&gt;204（No-Content），服务器成功处理了请求，但不需要返回任何实体内容&lt;/p&gt;&lt;p&gt;205（Reset-Content），服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。&lt;/p&gt;&lt;p&gt;206（Partial-Content），服务器已经成功处理了部分 GET 请求。&lt;/p&gt;&lt;p&gt;301（Moved-Permanently），永久性重定向&lt;/p&gt;&lt;p&gt;302（Moved-Temporarily），暂时性重定向&lt;/p&gt;&lt;p&gt;304（Not-Modified），浏览器端缓存的资源依然有效&lt;/p&gt;&lt;p&gt;400（Bad-Reques），请求有误，当前请求无法被服务器理解。&lt;/p&gt;&lt;p&gt;401（Unauthorized），当前请求需要用户验证。&lt;/p&gt;&lt;p&gt;403（Forbidden），服务器已经理解请求，但是拒绝执行它。&lt;/p&gt;&lt;p&gt;404（Not-Found），请求的资源没有被找到&lt;/p&gt;&lt;p&gt;500（Interval Server Error），服务器内部错误&lt;/p&gt;&lt;p&gt;502（Bad GateWay），网关出错&lt;/p&gt;&lt;p&gt;503（Service Unavailable），由于临时的服务器维护或者过载，服务器当前无法处理请求。&lt;/p&gt;&lt;p&gt;504（Gateway Timeout），作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。&lt;/p&gt;&lt;p&gt;（2）xss，csrf的概念以及防范方法&lt;/p&gt;&lt;p&gt;大公司如bat在面试的时候，web安全问题是必问的问题，所以一定要懂，要彻底理解xss和csrf的概念和防范方式，最好在项目中有用到对这两种攻击的防范，这样会给你的面试加很多分。由xss和csrf涉及的东西比较多，我就不具体给出了，详情请看&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/ghsau/article/details/17027893&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;XSS攻击及防御&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CSRF攻击&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;（3）CommonJs，AMD，CMD规范&lt;/p&gt;&lt;p&gt;对于前端模块化来说，这三个规范是必须要了解的，详情请看我的这篇文章&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22954387&quot; class=&quot;internal&quot;&gt;CommonJS，AMD，CMD&lt;/a&gt;&lt;/p&gt;&lt;p&gt;（4）谈谈对前端模块化的理解&lt;/p&gt;&lt;p&gt;前端模块话就是把复杂的文件分成一个个独立的模块，比如js文件，分成独立的模块之后有利于代码的重用和维护，但是这样又会引来模块与模块之间的依赖问题，所以就有了CommonJS、AMD、CMD规范，最后出现了webpack，webpack就是前端模块话的一种解决方案，基本上大公司都会使用webpack，想要详细的学习webpack的话请看&lt;a href=&quot;https://zhuanlan.zhihu.com/p/23538138&quot; class=&quot;internal&quot;&gt;webpack简明使用教程&lt;/a&gt;&lt;/p&gt;&lt;p&gt;（5）优雅降级和渐进增强&lt;/p&gt;&lt;p&gt;优雅降级指的是一开始就构建功能完好的网站，然后在慢慢兼容低版本的浏览器，使得各个浏览器之间的差异不要太大。&lt;/p&gt;&lt;p&gt;渐进增强是指在基本功能得到满足的情况下，对支持新特性的浏览器使用新特性，带给用户更换的体验。&lt;/p&gt;&lt;p&gt;优雅降级和渐进增强的出发点不同，前者是慢慢向下兼容，是向后看，后着是慢慢向上，增强功能，是向前看。&lt;/p&gt;&lt;p&gt;（6）前端优化（提高网页的加载速度）&lt;/p&gt;&lt;p&gt;    1、使用css sprites，可以有效的减少http请求数&lt;/p&gt;&lt;p&gt;    2、使用缓存&lt;/p&gt;&lt;p&gt;    3、压缩js，css文件，减小文件体积&lt;/p&gt;&lt;p&gt;    4、使用cdn，减小服务器负担&lt;/p&gt;&lt;p&gt;    5、懒加载图片&lt;/p&gt;&lt;p&gt;    6、预加载css，js文件&lt;/p&gt;&lt;p&gt;    7、避免dom结构的深层次嵌套&lt;/p&gt;&lt;p&gt;    8、给DOM元素添加样式时，把样式放到类中，直接给元素添加类，减少重构，回流&lt;/p&gt;&lt;p&gt;更多详细的前端优化请看&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.tuicool.com/articles/J3uyaa&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端优化：雅虎35条&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;或者&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/lei2007/archive/2013/08/16/3262897.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端性能优化----yahoo前端性能团队总结的35条黄金定律&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;四、前端学习文章推荐&lt;/p&gt;&lt;p&gt;知乎上面有人推荐了很多前端学习网站，具体信息请看&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://www.zhihu.com/question/19651401/answer/46211739&quot; class=&quot;internal&quot;&gt;关于 Javascript 学习，有哪些好的博客或者网站推荐？&lt;/a&gt;&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n作者：汪汪 链接：<a href=\"https://zhuanlan.zhihu.com/p/22606894\" class=\"internal\">知乎专栏</a> 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 这篇文章是对我大四秋招以来面试的总结，里面包含前端面试知识的方方面面，目前本人已经拿到腾讯offer，希望能对后面找工作的学习学妹们有所…\n\n<a href=\"/question/41466747/answer/132562725\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/41466747/answer/132562725\">发布于 2016-11-22</a></p>\n\n",
    "link": "https://zhihu.com/question/41466747/answer/132562725"
  },
  {
    "question": "\n什么是闭包？\n",
    "author": "魏振东",
    "content": "\n\n<textarea hidden class=\"content\">我叫独孤求败，我在一个山洞里，里面有世界上最好的剑法，还有最好的武器。我学习了里面的剑法，拿走了最好的剑。离开了这里。我来到这个江湖，快意恩仇。但是从来没有人知道我这把剑的来历，和我这一身的武功。。。那山洞就是一个闭包，而我，就是那个山洞里唯一一个可以与外界交汇的地方。这山洞的一切对外人而言就像不存在一样，只有我才拥有这里面的宝藏！</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n我叫独孤求败，我在一个山洞里，里面有世界上最好的剑法，还有最好的武器。我学习了里面的剑法，拿走了最好的剑。离开了这里。我来到这个江湖，快意恩仇。但是从来没有人知道我这把剑的来历，和我这一身的武功。。。那山洞就是一个闭包，而我，就是那个山洞…\n\n<a href=\"/question/34210214/answer/140436901\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/34210214/answer/140436901\">发布于 2017-01-11</a></p>\n\n",
    "link": "https://zhihu.com/question/34210214/answer/140436901"
  },
  {
    "question": "\nCSS 那么多属性，而且每个属性都有多个值怎么记？\n",
    "author": "徐尤熙",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;【css常用属性】&lt;/p&gt;&lt;p&gt;前面说了一点css基础，相信看完后对&lt;strong&gt;CSS&lt;/strong&gt;本身有一定的理解，这篇文章大概罗列出常用的&lt;strong&gt;CSS属性&lt;/strong&gt;，跟HTML常用的标签差不多，基本是对这些属性有一定的了解基本上CSS也算是入门了，本身CSS就是使用这些属性对网页内容的美化，所以认识&lt;strong&gt;CSS常用属性&lt;/strong&gt;是必要的！&lt;br&gt;&lt;/p&gt;&lt;p&gt;我们也可以试着看一些css的基础视频，&lt;a href=&quot;//link.zhihu.com/?target=http%3A//v.youku.com/v_show/id_XMTMyODgwOTQyNA%3D%3D.html%3Ff%3D26058274&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;dw教程从基础到入门&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;这些资源你们自己可以利用一下&lt;/p&gt;&lt;br&gt;&lt;strong&gt;CSS字体属性&lt;/strong&gt;&lt;p&gt;字体大小：&lt;strong&gt;font-size&lt;/strong&gt;: px/em/pt;（值使用数值即可）&lt;/p&gt;&lt;p&gt;字体样式：&lt;strong&gt;font-style&lt;/strong&gt;: oblique;(偏斜体) italic;(斜体) normal;(正常)&lt;/p&gt;&lt;p&gt;字体行高：&lt;strong&gt;line-height&lt;/strong&gt;: normal;(正常) 单位：PX、PD、EM&lt;/p&gt;&lt;p&gt;字体粗细：&lt;strong&gt;font-weight&lt;/strong&gt;: bold;(粗体) lighter;(细体) normal;(正常)&lt;/p&gt;&lt;p&gt;字体变体：&lt;strong&gt;font-variant&lt;/strong&gt;: small-caps;(小型大写字母) normal;(正常)&lt;/p&gt;&lt;p&gt;文字间距：&lt;strong&gt;letter-spacing&lt;/strong&gt;: normal; 数值 pt/em/pt&lt;/p&gt;&lt;p&gt;文字对齐：&lt;strong&gt;text-align&lt;/strong&gt;: justify;(两端对齐) left;(左对齐) right;(右对齐) center;(居中)&lt;/p&gt;&lt;p&gt;文字缩进：&lt;strong&gt;text-indent&lt;/strong&gt;: 数值 px;&lt;/p&gt;&lt;p&gt;词间距：&lt;strong&gt;word-spacing&lt;/strong&gt;: normal; 数值 px;&lt;/p&gt;&lt;p&gt;字体大小写：&lt;strong&gt;text-transform&lt;/strong&gt;: capitalize;(首字母大写) uppercase;(大写) lowercase;(小写) none;(无)&lt;/p&gt;&lt;p&gt;字体修饰：&lt;strong&gt;text-decoration&lt;/strong&gt;: underline;(下划线) overline;(上划线) line-through;(删除线) blink;(闪烁)&lt;/p&gt;&lt;p&gt;字体：&lt;strong&gt;font-family&lt;/strong&gt;:”Courier New”, Courier, monospace, “Times New Roman”, Times, serif, Arial, Helvetica, sans-serif, Verdana&lt;/p&gt;&lt;p&gt;&amp;lt;html&amp;gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;&lt;/p&gt;&lt;p&gt;.test{font-size:15px}&lt;/p&gt;&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;p class=&quot;test&quot;&amp;gt;测试文字效果&amp;lt;/p&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;CSS背景属性&lt;/strong&gt;&lt;p&gt;背景颜色：&lt;strong&gt;background-color&lt;/strong&gt;: #FFFFFF;&lt;/p&gt;&lt;p&gt;背景图片：&lt;strong&gt;background-image&lt;/strong&gt;: url();&lt;/p&gt;&lt;p&gt;背景图片重复：&lt;strong&gt;background-repeat&lt;/strong&gt;: no-repeat;&lt;/p&gt;&lt;p&gt;背景图片滚动：&lt;strong&gt;background-attachment&lt;/strong&gt;: fixed;(固定) scroll;(滚动)&lt;/p&gt;&lt;p&gt;背景图片位置：&lt;strong&gt;background-position&lt;/strong&gt;: left(水平) top(垂直);&lt;/p&gt;&lt;p&gt;简写方法： &lt;strong&gt;background&lt;/strong&gt;:#000 url(..) repeat fixed left top;&lt;/p&gt;&lt;p&gt;&amp;lt;html&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;&lt;/p&gt;&lt;p&gt;body{background:#ddd url(&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.baidu.com/search/img/logo.gif&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;baidu.com/search/img/lo&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;go.gif&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;) no-repeat fixed center;height:1000px;}&lt;/p&gt;&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;例如上面这些的编写的方法，是可以自己用最常用的软件dw可以编写的我们亦可以跟着&lt;a href=&quot;//link.zhihu.com/?target=http%3A//v.youku.com/v_show/id_XMTQ0NjI0Njk4OA%3D%3D.html%3Ff%3D26616358&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Dw小入门&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;照着葫芦画瓢自己好好练练，从而增强自己的认识&lt;br&gt;&lt;br&gt;&lt;strong&gt;区块属性&lt;/strong&gt;&lt;p&gt;垂直对齐：&lt;strong&gt;vertical-align&lt;/strong&gt;: baseline;(基线) sub;(下标) super;(下标) top; text-top; middle; bottom; text-bottom;&lt;/p&gt;&lt;p&gt;元素空格：&lt;strong&gt;white-space&lt;/strong&gt;: pre;(保留) nowrap;(不换行)&lt;/p&gt;&lt;p&gt;显示：&lt;strong&gt;display&lt;/strong&gt;:block;(块) inline;(内嵌) list-item;(列表项) run-in;(追加部分) compact;(紧凑) marker;(标记) table; inline-table; table-raw-group; table-header-group; table-footer-group; table-raw; table-column-group; table-column; table-cell; table-caption;(表格标题)&lt;/p&gt;&lt;p&gt;&amp;lt;html&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;&lt;/p&gt;&lt;p&gt;p {display: inline}&lt;/p&gt;&lt;p&gt;div {display: none}&lt;/p&gt;&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;p&amp;gt;本例中的样式表把段落元素设置为内联元素。&amp;lt;/p&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;p&amp;gt;而 div 元素不会显示出来！&amp;lt;/p&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;div&amp;gt;div 元素的内容不会显示出来！&amp;lt;/div&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;strong&gt;方框属性&lt;/strong&gt;&lt;p&gt;宽度：&lt;strong&gt;width&lt;/strong&gt;: 数值 px;&lt;/p&gt;&lt;p&gt;高度：&lt;strong&gt;height&lt;/strong&gt;: 数值 px;&lt;/p&gt;&lt;p&gt;外边距：margin: 1px 1px 1px 1px; 上右下左 简写：marign: 1px;&lt;/p&gt;&lt;p&gt;内边距：padding: 1px 1px 1px 1px; 上右下左  简写：padding:1px;&lt;/p&gt;&lt;p&gt;清除浮动：&lt;strong&gt;clear&lt;/strong&gt;:left(左侧不运行浮动)/right(右侧不允许浮动)/both(左右不允许浮动)/inherit(继承父元素)&lt;/p&gt;&lt;p&gt;&amp;lt;html&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;&lt;/p&gt;&lt;p&gt;p {display: inline}&lt;/p&gt;&lt;p&gt;div {display: none}&lt;/p&gt;&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;p&amp;gt;本例中的样式表把段落元素设置为内联元素。&amp;lt;/p&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;p&amp;gt;而 div 元素不会显示出来！&amp;lt;/p&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;div&amp;gt;div 元素的内容不会显示出来！&amp;lt;/div&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;边框属性&lt;/strong&gt;&lt;p&gt;边框样式：&lt;strong&gt;border-style&lt;/strong&gt;: dotted;(点线) dashed;(虚线) solid; double;(双线) groove;(槽线) ridge;(脊状) inset;(凹陷) outset;&lt;/p&gt;&lt;p&gt;边框宽度：&lt;strong&gt;border-width&lt;/strong&gt;: 数值 px;&lt;/p&gt;&lt;p&gt;边框颜色：&lt;strong&gt;border-color&lt;/strong&gt;:#fffff;&lt;/p&gt;&lt;p&gt;简写方法：border：width style color; &lt;/p&gt;&lt;p&gt;正文模板11，可在这输入内容，  - 96微信图文排版,微信图文编辑器,微信公众号编辑器，微信编辑首选。&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;列表属性&lt;/strong&gt;&lt;p&gt;列表类型：&lt;strong&gt;list-style-type&lt;/strong&gt;: disc;(圆点) circle;(圆圈) square;(方块) decimal;(数字) lower-roman;(小罗码数字) upper-roman; lower-alpha; upper-alpha;&lt;br&gt;列表位置：&lt;strong&gt;list-style-position&lt;/strong&gt;: outside;(外) inside(内);&lt;br&gt;列表图像：&lt;strong&gt;list-style-image&lt;/strong&gt;: url(..);&lt;/p&gt;&lt;p&gt;&amp;lt;html&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;&lt;/p&gt;&lt;p&gt;div{border:1px solid #eee;width:50%;height:50%;}&lt;/p&gt;&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;div&amp;gt;&amp;lt;p&amp;gt;我是边框内的内容&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;定位属性&lt;/strong&gt;&lt;p&gt;定位位置：&lt;strong&gt;Position&lt;/strong&gt;: absolute; relative; static;&lt;/p&gt;&lt;p&gt;元素是否可见：&lt;strong&gt;visibility&lt;/strong&gt;: inherit; visible; hidden;&lt;/p&gt;&lt;p&gt;内容溢出：&lt;strong&gt;overflow&lt;/strong&gt;: visible; hidden; scroll; auto;&lt;/p&gt;&lt;p&gt;裁剪：&lt;strong&gt;clip&lt;/strong&gt;: rect(12px,auto,12px,auto)&lt;/p&gt;&lt;p&gt;&amp;lt;html&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;head&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;&lt;/p&gt;&lt;p&gt;.absolute{position:absolute;left:100px;top:150px}&lt;/p&gt;&lt;p&gt;&amp;lt;/style&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/head&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;body&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;h2 class=&quot;absolute&quot;&amp;gt;这是带有绝对定位的标题&amp;lt;/h2&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;p&amp;gt;通过绝对定位，元素可以放置到页面上的任何位置。下面的标题距离页面左侧 100px，距离页面顶部 150px。&amp;lt;/p&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/body&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&amp;lt;/html&amp;gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;最后&lt;/strong&gt;&lt;p&gt;属性一般分为：背景属性、边框属性、文本属性、内外边距属性、内容生成属性、尺寸属性、定位属性、表格属性、打印属性等，具体可以参考下面的手册&lt;/p&gt;&lt;br&gt;&lt;p&gt;更多资源;&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/09251b6a292967dea70b4789a7e5dbad_b.jpg&quot; data-rawwidth=&quot;258&quot; data-rawheight=&quot;258&quot; class=&quot;content_image&quot; width=&quot;258&quot;&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic2.zhimg.com/09251b6a292967dea70b4789a7e5dbad_200x112.jpg\" data-rawwidth=\"258\" data-rawheight=\"258\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic2.zhimg.com/09251b6a292967dea70b4789a7e5dbad_r.jpg\">\n【css常用属性】前面说了一点css基础，相信看完后对<strong>CSS</strong>本身有一定的理解，这篇文章大概罗列出常用的<strong>CSS属性</strong>，跟HTML常用的标签差不多，基本是对这些属性有一定的了解基本上CSS也算是入门了，本身CSS就是使用这些属性对网页内容的美化，所以认识<strong>CSS常用属性</strong>…\n\n<a href=\"/question/31317160/answer/82663462\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-01-21\" target=\"_blank\" href=\"/question/31317160/answer/82663462\">编辑于 2016-02-18</a></p>\n\n",
    "link": "https://zhihu.com/question/31317160/answer/82663462"
  },
  {
    "question": "\n如何使用JavaScript生成lowpoly风格图像？\n",
    "author": "盖孟",
    "content": "\n\n<textarea hidden class=\"content\">&lt;a data-hash=&quot;0999189bddb6ba96ac860ef510325e4b&quot; href=&quot;//www.zhihu.com/people/0999189bddb6ba96ac860ef510325e4b&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@羡辙&quot; data-hovercard=&quot;p$b$0999189bddb6ba96ac860ef510325e4b&quot;&gt;@羡辙&lt;/a&gt; 回答中提到的论文作者羞射前来报到。&lt;br&gt;&lt;br&gt;算法都在论文中，详细可阅读： Gai M, Wang G. Artistic Low Poly rendering for images[J]. The Visual Computer, 2015: 1-10&lt;br&gt;&lt;br&gt;主要思路点一下吧：用边缘提取产生约束边进行带约束的Delaunay三角化；用Voronoi迭代优化顶点位置。另外显著区域提取是凑数的可有可无。主要时间开销也是在显著区域提取和CVD迭代两步。单纯做边缘提取Delaunay剖分也是很快的。&lt;br&gt;&lt;br&gt;结果不是太满意，主要难点在于图像中高层语义信息的保持。而边缘提取等局部算子只能提供低层次信息。&lt;br&gt;&lt;br&gt;贴几张论文里的大图吧：&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/b33bd96491132d268aae2ff7f90b2baf_b.png&quot; data-rawwidth=&quot;900&quot; data-rawheight=&quot;601&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;900&quot; data-original=&quot;https://pic4.zhimg.com/b33bd96491132d268aae2ff7f90b2baf_r.png&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/c12400623adb6d8c1bf89fcb06c41b4e_b.png&quot; data-rawwidth=&quot;801&quot; data-rawheight=&quot;602&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;801&quot; data-original=&quot;https://pic3.zhimg.com/c12400623adb6d8c1bf89fcb06c41b4e_r.png&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/5f10b9c78156f0037f677712cad13dc6_b.png&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;900&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic3.zhimg.com/5f10b9c78156f0037f677712cad13dc6_r.png&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/09684302b2f43e3b2f06177cd5d43b8b_b.png&quot; data-rawwidth=&quot;714&quot; data-rawheight=&quot;1024&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;714&quot; data-original=&quot;https://pic4.zhimg.com/09684302b2f43e3b2f06177cd5d43b8b_r.png&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/15d1a804cfe9dfad010d88e221b12728_b.png&quot; data-rawwidth=&quot;900&quot; data-rawheight=&quot;590&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;900&quot; data-original=&quot;https://pic1.zhimg.com/15d1a804cfe9dfad010d88e221b12728_r.png&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/dbe7cdfa1de3cbdeb17f64ea323ee57e_b.png&quot; data-rawwidth=&quot;838&quot; data-rawheight=&quot;1000&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;838&quot; data-original=&quot;https://pic3.zhimg.com/dbe7cdfa1de3cbdeb17f64ea323ee57e_r.png&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/d1e23fcb27507b7dc3518e3e80600a99_b.png&quot; data-rawwidth=&quot;598&quot; data-rawheight=&quot;799&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;598&quot; data-original=&quot;https://pic2.zhimg.com/d1e23fcb27507b7dc3518e3e80600a99_r.png&quot;&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/b33bd96491132d268aae2ff7f90b2baf_200x112.png\" data-rawwidth=\"900\" data-rawheight=\"601\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/b33bd96491132d268aae2ff7f90b2baf_r.png\">\n<a data-hash=\"0999189bddb6ba96ac860ef510325e4b\" href=\"//www.zhihu.com/people/0999189bddb6ba96ac860ef510325e4b\" class=\"member_mention\" data-editable=\"true\" data-title=\"@羡辙\" data-hovercard=\"p$b$0999189bddb6ba96ac860ef510325e4b\">@羡辙</a> 回答中提到的论文作者羞射前来报到。 算法都在论文中，详细可阅读： Gai M, Wang G. Artistic Low Poly rendering for images[J]. The Visual Computer, 2015: 1-10 主要思路点一下吧：用边缘提取产生约束边进行带约束的Delaunay三角化；用Voronoi迭…\n\n<a href=\"/question/29856775/answer/62245515\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/29856775/answer/62245515\">发布于 2015-09-04</a></p>\n\n",
    "link": "https://zhihu.com/question/29856775/answer/62245515"
  },
  {
    "question": "\n淡马锡为什么要在 2014 年改变投资策略？\n",
    "author": "俄熊",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;谢谢邀请。&lt;br&gt;&lt;br&gt;因最近看了一份麦肯锡的报告，我觉得有些相关，答题正好作为整理。如果各位看着喜欢，日后或许会回答的可用于整理我最近看过报告的题。&lt;br&gt;&lt;br&gt;投资我完全是外行，因此意见仅供参考。&lt;br&gt;&lt;br&gt;--&lt;/p&gt;&lt;p&gt;&lt;br&gt;不要听风就是雨，很多时候公司放出的消息与实际情况相比或许是滞后的。&lt;br&gt;&lt;br&gt;而淡马锡投资策略的转变应当拆开来看：减少大型公司持股，转投成长公司，减少上市公司持股，转投私有以及PE公司。而通过查看淡马锡年度报告中的投资组合部分，我并不认为这是今年才做出的策略转变。为什么人家要在做什么事之前昭告天下？一般说的要么和做的相反，要么是已经做了的。&lt;br&gt;&lt;br&gt;从2004年淡马锡第一次发布财务数据开始，公司就已经开始逐步减少成熟市场国家的投资，将重点放在了新兴市场国家，我认为其原因在于发源于新兴经济体中的新公司的迅速成长。与此同时因注意到私有企业的力量，也慢慢地减少上市公司持股转投私有以及PE公司。至于投资组合的产业结构则在近五年无大变动，04到09明显的变化在于减少TMT（科技媒体通信）方面投资，增加金融服务方面投资进而提高整体安全性。&lt;/p&gt;&lt;p&gt;&lt;br&gt;--&lt;/p&gt;&lt;p&gt;&lt;br&gt;麦肯锡认为年营收超过十亿美元可以算作是大公司，2010年有8000家公司可以算作大公司，73%在发达国家。而麦肯锡预测，到2025年会有15000家公司可算作大公司，而500强企业中的45%会在发展中国家产生，而新生大公司中，40%会在中国诞生，68%会在发展中国家诞生。而在发展中国家的大公司总部会是2010年的三倍左右，占比从27%涨到46%。&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/be2054039e33002b92e16c6775700cb6_b.jpg&quot; data-rawheight=&quot;436&quot; data-rawwidth=&quot;552&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;552&quot; data-original=&quot;https://pic3.zhimg.com/be2054039e33002b92e16c6775700cb6_r.jpg&quot;&gt;&lt;br&gt;就如日韩公司成长为世界级企业，像中国通信巨人华为，巴西航空工业公司Embraer，印度阿迪亚博拉集团(Aditya Birla Group)这样的生根于发展中国家的公司正在建立他们的声望以及影响力。在2025年，或许在某些领域主宰世界的顶级公司今天我们还不知道他们叫什么，或者是在一个不能在地图上标注的城市生根发芽。在新兴经济体中发芽的公司可以以更低的成本（人力、物料、资源）进行创新，甚至可以以低成本颠覆行业。而他们的成长也为服务提供商、供应商带来了更多机会。&lt;br&gt;&lt;br&gt;1980到2000年发源于新兴经济体中的500强企业公司数量增长缓慢，但是2000~2010年从原本的5%增加到了17%，2013年到23%。在1998与2012年名录的对比中，有140家企业落榜，90家因并购或者破产进而不会进入名单，被230个新晋企业所取代，而进入榜单的新面孔或许有很大一部分会来自于新经济体。根据预测2025年500强榜单中在新经济体中发源的新公司会占到46%。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/c1fc37ec674203c1d92947a3b5ce0301_b.jpg&quot; data-rawheight=&quot;693&quot; data-rawwidth=&quot;706&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;706&quot; data-original=&quot;https://pic2.zhimg.com/c1fc37ec674203c1d92947a3b5ce0301_r.jpg&quot;&gt;&lt;br&gt;由于在新兴经济体中大公司相对而言较少，因此给了不少小公司脱颖而出的机会，其次是在这些地区的城市GDP增速要比成熟经济体中的城市快得多，亦是有更加多的商业机会。在快速增长的GDP背后则是城市化进程、收入增长以及货币升值。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/9e2dd4ee89817598ab5b9fe24ba8a0d3_b.jpg&quot; data-rawheight=&quot;512&quot; data-rawwidth=&quot;663&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;663&quot; data-original=&quot;https://pic4.zhimg.com/9e2dd4ee89817598ab5b9fe24ba8a0d3_r.jpg&quot;&gt;&lt;br&gt;城市GDP与大公司数量相关，GDP越高，大公司数量越多。&lt;br&gt;&lt;br&gt;因此淡马锡调整投资策略，比较明显的变动体现在区域上而非行业，2000~2010年许许多多新兴公司在发展中国家涌现，淡马锡自然把更多的资金投入发展中国家较多的地区中。自2009之后区域以及行业均无明显变动。&lt;br&gt;&lt;br&gt;淡马锡投资组合（2014还未正式放出）2009&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/0951b80733440c438cc174c6845ec9c6_b.jpg&quot; data-rawheight=&quot;798&quot; data-rawwidth=&quot;576&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;576&quot; data-original=&quot;https://pic3.zhimg.com/0951b80733440c438cc174c6845ec9c6_r.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/ca6986667d39b84793e2b11aa6c02639_b.jpg&quot; data-rawheight=&quot;366&quot; data-rawwidth=&quot;570&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;570&quot; data-original=&quot;https://pic2.zhimg.com/ca6986667d39b84793e2b11aa6c02639_r.jpg&quot;&gt;&lt;br&gt;2013&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/87bb28a957bce5d6bb4bb87e677b649c_b.jpg&quot; data-rawheight=&quot;430&quot; data-rawwidth=&quot;582&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;582&quot; data-original=&quot;https://pic1.zhimg.com/87bb28a957bce5d6bb4bb87e677b649c_r.jpg&quot;&gt;&lt;br&gt;投资成长中的公司较容易理解，公司希望在退出的时候分到更大的一杯羹。而行业方面较为明显的变动为减少TMT方面投资，增大金融服务方面投资的比重，进而提高整体安全性。&lt;br&gt;&lt;br&gt;而投资私有公司的原因在于，一般情况下人们总是关注上市公司（比如福布斯500强，根据企业财务数字排名，私有公司大多不公布），反而忽略了那些世界上最大的公司，而他们大多都是私有公司（例如法国布依格集团Bouygues 美国科氏工业集团Koch Industries）或国有控股企业。&lt;br&gt;&lt;br&gt;因越来越多的公司已经注意到这一点，淡马锡自然也不例外，所以转变投资策略，以期获得更好的投资收益，但是09年后基本无大的变动。&lt;br&gt;&lt;br&gt;04与09年&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/d3baa9f4a8ab60447a6ccf69967b10cd_b.jpg&quot; data-rawheight=&quot;323&quot; data-rawwidth=&quot;565&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;565&quot; data-original=&quot;https://pic2.zhimg.com/d3baa9f4a8ab60447a6ccf69967b10cd_r.jpg&quot;&gt;13年与12年&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/2a30297684ad9a1bf8af9f96e922bd50_b.jpg&quot; data-rawheight=&quot;159&quot; data-rawwidth=&quot;613&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;613&quot; data-original=&quot;https://pic1.zhimg.com/2a30297684ad9a1bf8af9f96e922bd50_r.jpg&quot;&gt;（完）&lt;/p&gt;&lt;br&gt;&lt;br&gt;--&lt;br&gt;&lt;p&gt;麦肯锡报告下载地址 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.mckinsey.com/insights/urbanization/urban_world_the_shifting_global_business_landscape&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Urban world: The shifting global business landscape&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;--&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n谢谢邀请。 因最近看了一份麦肯锡的报告，我觉得有些相关，答题正好作为整理。如果各位看着喜欢，日后或许会回答的可用于整理我最近看过报告的题。 投资我完全是外行，因此意见仅供参考。 -- 不要听风就是雨，很多时候公司放出的消息与实际情况相比或许是滞…\n\n<a href=\"/question/23420307/answer/24564969\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-04-16\" target=\"_blank\" href=\"/question/23420307/answer/24564969\">编辑于 2014-04-18</a></p>\n\n",
    "link": "https://zhihu.com/question/23420307/answer/24564969"
  },
  {
    "question": "\nchildren.length和childElementCount？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">这是一个好问题。&lt;br&gt;&lt;br&gt;&lt;br&gt;我们分几点来说。&lt;br&gt;&lt;br&gt;首先 previousElementSibling, nextElementSibling 并不是多余的，因为 children 接口做不到同样的事情。&lt;br&gt;&lt;br&gt;其次 firstElementChild, lastElementChild 虽然等价于 children[0] 和 children[children.length - 1] ，但是前者避免了先生成一个 children 对象，所以是更直接且性能更好的接口（尤其是对 lastElementChild 来说）。&lt;br&gt;&lt;br&gt;注意 children 是一个 live collection，按照通常的 dom 实现来说，使用 firstElementChild 配合 nextElementSibling 的正向遍历（或者 lastElementChild 配合 previousElementSibling 的反向遍历）可以比通常的 for (let i = 0; i &amp;lt; children.length; ++i) children[i] 获得更好的性能。&lt;br&gt;&lt;br&gt;&lt;br&gt;最后，childElementCount 确实是多余的接口。【小彩蛋：如果你打开 spec 的源码会发现有一句注释：&amp;lt;!-- childElementCount is redundant --&amp;gt;】&lt;br&gt;&lt;br&gt;ElementTraversal API 是在2007年左右开始制定的，本源来自于 SVG Micro DOM 的需求（而不像其他 dom 新接口主要来自于浏览器厂商联盟 WHATWG），原本是没有 childElementCount 属性的。当时从 SVG 工作组接手的 WebAPI 工作组加入了这个属性，但并没有将 children 属性（原本是 IE 的私有接口）标准化列入议程。仅仅从 traversal 需求来说并不需要 children 属性，但某些次要需求其实需要 children count（参见 ElementTraversal API 的代码示例），所以就加了这个属性。但 children 属性标准化之后，这个 childElementCount 就变得多余了。&lt;br&gt;&lt;br&gt;其实在2011年左右，主导 HTML/DOM 标准制定的 WHATWG 有动议要删除这个属性，但是因为这个属性在之前的3年中已经在所有主流浏览器里实现了（2008年到2010年间，Chrome 1+、FF 3.5+、Safari 4+、IE9+ 都实现了此属性——是的，尽管很可能到今天还有许多前端并不知道这个接口的存在） ，所以到2012年年底的时候最后决定还是不删除了。&lt;br&gt;&lt;br&gt;&lt;br&gt;最后，现在（2016年）的 dom 标准你应该直接看 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.w3.org/TR/domcore/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;W3C DOM4&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ，ElementTraversal已经和DOM3一样属于上一代标准。或者你可以直接看上游的 WHATWG &lt;a href=&quot;//link.zhihu.com/?target=https%3A//dom.spec.whatwg.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;DOM Standard&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 。&lt;br&gt;&lt;br&gt;以上。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n这是一个好问题。 我们分几点来说。 首先 previousElementSibling, nextElementSibling 并不是多余的，因为 children 接口做不到同样的事情。 其次 firstElementChild, lastElementChild 虽然等价于 children[0] 和 children[children.length - 1] ，但是前…\n\n<a href=\"/question/53276320/answer/134282150\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-12-04\" target=\"_blank\" href=\"/question/53276320/answer/134282150\">编辑于 2016-12-04</a></p>\n\n",
    "link": "https://zhihu.com/question/53276320/answer/134282150"
  },
  {
    "question": "\n文本编辑器中，你正在用谁？你最喜欢谁？最看好谁？原因？\n",
    "author": "豪情",
    "content": "\n\n<textarea hidden class=\"content\">使用不同编辑器的原因在于不同的应用场景，就像使用浏览器一样。ide跟编辑器其实差别不大，都是完成开发的任务，我只是分析场景，所以一并列出来了。我的建议，等了解之后，在熟悉之后在合适的场景下选择合适的开发工具。&lt;br&gt;&lt;br&gt;一般会有这几个场景：&lt;br&gt;&lt;br&gt;一. 主力的开发工具，这个首推sublime text。主要优点有以下几点：    &lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/00b002c9579c86aa95b771529eaf00ed_b.png&quot; data-rawwidth=&quot;1367&quot; data-rawheight=&quot;769&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1367&quot; data-original=&quot;https://pic2.zhimg.com/00b002c9579c86aa95b771529eaf00ed_r.png&quot;&gt;&lt;br&gt;    1. 功能强大，占用内存小，插件丰富，界面友好，可以免费试用(多谢评论区同学指正)，适合前端开发这个岗位，支持语言比较多，可以跟不同的语言来合作还没有跨界的遗憾。&lt;br&gt;    2. &lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jikeytang/sublime-text&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;jikeytang/sublime-text: sublime-text&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 具体看这个网站。&lt;br&gt;&lt;br&gt;二. 方便提交 ftp,svn,git,查看本地文件历史记录的。这个我推荐webstorm：&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/c704d43dd9c182ba8a7cbeb43645f1dc_b.png&quot; data-rawwidth=&quot;523&quot; data-rawheight=&quot;486&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;523&quot; data-original=&quot;https://pic1.zhimg.com/c704d43dd9c182ba8a7cbeb43645f1dc_r.png&quot;&gt;&lt;br&gt;    1. ftp看这个：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3486621.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;如何在Webstorm/Phpstorm中设置连接FTP，并快速进行文件比较，上传下载，同步等操作&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;    2. 同时支持svn,git图形化操作，这里边不强调图形化比命令化功能对比，只说，图形化操作确实比较直观。&lt;br&gt;    另外webstorm本身的svn功能与小乌龟功能还是差不少，比如查看一些历史记录，浏览等等的。&lt;br&gt;    3. webstorm只是jetbrain大厂提供的一个，还有phpstorm, intellij idea也是不错的产品。&lt;br&gt;他的缺点是：占用内存大。&lt;br&gt;&lt;br&gt;三. 方便查看源码的，这个场景主要在新老版本交替，为了防止改错文件，我特意拉一个编辑器来查看：&lt;br&gt;    1. atom &lt;br&gt;    界面风格离sublime最近的一款。&lt;br&gt;    2. notepad++&lt;br&gt;    也可以，主要有一个工程目录管理，新版本也加了一个右边文件快速预览的功能。&lt;br&gt;&lt;br&gt;四. 单文件编辑，代替系统默认的notepad的，应用场景主要在临时记事，编辑小的文本，比如现在写答案用的。推荐：notepad2&lt;br&gt;&lt;br&gt;五. 炫技的vim，其实vim的强大在于他的修改场景，就是他写的时候跟别人差别不大，主要在修改的时候，快捷键的颗粒支持到任何一个场景。删前一个字母，后一个字母，跳前面，跳后面，等等。但是sublime里边vim插件偶尔用用还是不错的，webstorm的vim插件老是感觉没有st里边用那个无缝。另外win上用vim也就那样了，mac上还是不错的，半透明，多标签等等都支持。&lt;br&gt;另外vim的场景是，一般的产品环境都是linux系统，这下面只有vim。&lt;br&gt;&lt;br&gt;六. 有一些编辑器还有一定的应用场景，比如editplus里边批量修改文件编辑的功能，快速启动也是他的一个优点。ftp链接等等的，也是不错的。&lt;br&gt;&lt;br&gt;七. vs code：这款跨平台的，他是我用过所有的编辑器里边提示是最快的一款，webstorm的代码提示问题延迟那么几毫秒，但是这款跟其它微软产品一样，除了这个优点之外，没找出其它任何一个比其它编辑器胜出的地方。只感觉有点像adobe的Bracket，不习惯顶部空着，把打开的文件放到左边。&lt;br&gt;&lt;br&gt;然后说，都装了吗？常用的都装了，其实常用的就那几个。另外跨平台的几款做的比较好的：sublime, webstorm, atom这几款在win,mac平台下基本差别不大。&lt;br&gt;&lt;br&gt;最后题外话：没有最好的，只有最合适自己心理特征的，而每个人的内心活动是有差异的，只有建议自己去试。另外编程的核心还是：算法+数据结构。如果用一张图形容，就借用@winter老师的这张图： &lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/4eef7351e69b8f04893f135bcf1e8731_b.jpg&quot; data-rawwidth=&quot;629&quot; data-rawheight=&quot;1410&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;629&quot; data-original=&quot;https://pic2.zhimg.com/4eef7351e69b8f04893f135bcf1e8731_r.jpg&quot;&gt;看到没有，上面是知识，下面是能力，通过知识来积累编程的能力，不是通过工具来限制你思考的速度或深度。&lt;br&gt;&lt;br&gt;这个是你需要突破的瓶颈所在或所需要花费更多精力的地方，编辑器随便选一个，在入行初期对生产效率的影响并不大。限制产出的永远是人的思维，工具只是暂时的满足快速编程的假象。&lt;br&gt;&lt;br&gt;以上仅供参考。&lt;br&gt;&lt;br&gt;然后，如果喜欢前端，那就加这个前端群：&lt;b&gt;492107297&lt;/b&gt;，禁止闲聊，非喜勿进。&lt;br&gt;vue爱好者，加这个群：&lt;b&gt;364912432&lt;/b&gt;&lt;br&gt;进前，群规，月报先熟悉一下：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.kancloud.cn/jikeytang/qq/87646&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;目录 - [ JS前端开发群规&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.kancloud.cn/jsfront/month/82796&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;目录 - [ JS前端开发群月报 ]&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic2.zhimg.com/00b002c9579c86aa95b771529eaf00ed_200x112.png\" data-rawwidth=\"1367\" data-rawheight=\"769\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic2.zhimg.com/00b002c9579c86aa95b771529eaf00ed_r.png\">\n使用不同编辑器的原因在于不同的应用场景，就像使用浏览器一样。ide跟编辑器其实差别不大，都是完成开发的任务，我只是分析场景，所以一并列出来了。我的建议，等了解之后，在熟悉之后在合适的场景下选择合适的开发工具。 一般会有这几个场景： 一. 主力的…\n\n<a href=\"/question/39951477/answer/84113566\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-01-30\" target=\"_blank\" href=\"/question/39951477/answer/84113566\">编辑于 2016-01-31</a></p>\n\n",
    "link": "https://zhihu.com/question/39951477/answer/84113566"
  },
  {
    "question": "\n如何评价 Angular 2 发布 Beta 版本？\n",
    "author": "徐飞",
    "content": "\n\n<textarea hidden class=\"content\">Angular 2是一个重量级前端框架，明显比Vue重，作为全业务解决方案来说，大致和React整合了一堆东西之后在一个数量级。&lt;br&gt;&lt;br&gt;这么重的一个东西给谁用呢？两种场景：基于Web的企业应用，混合应用（包括桌面端和移动端）。&lt;br&gt;&lt;br&gt;我们可以发现，什么样的人非常欢迎Angular这么个体系，那就是有Java背景的Web开发者，这部分人大部分在做的就是各种管控系统，包括CRM、ERP软件，云平台之类。而且，需要在这个领域中算是比较有前端意识的人，才宁可倾向于Angular而不是ExtJS。&lt;br&gt;&lt;br&gt;尽管在整个前端开发圈中，大家并不是很欢迎Angular，而且很多人认为它的1.x版本已经衰落，但我跟 &lt;a data-hash=&quot;19d481ec083592d78e33acec6ad2573c&quot; href=&quot;//www.zhihu.com/people/19d481ec083592d78e33acec6ad2573c&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@小猪&quot; data-hovercard=&quot;p$b$19d481ec083592d78e33acec6ad2573c&quot;&gt;@小猪&lt;/a&gt;有个观点是一致的，那就是：“在企业开发领域，ng1的应用才方兴未艾”，也就是说，它在这个领域其实还是上升阶段。&lt;br&gt;&lt;br&gt;为什么呢？还是因为缺少对手。我们可以对比一下几个竞争对手，看看为什么这个领域的人更愿意选择Angular。&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;Vue，从前端的角度看，Vue有一万个好，Angular有一万种令人不满的地方，但企业领域的人偏爱集成解决方案，哪怕这个方案的语法是粗陋的，配置是繁琐的，连Java都用了，还怕这些？更关键的是ng1非常贴合Java开发人员的习惯，所以只要搞过Spring这类东西的，经过简单培训，写配置页面极其熟练。&lt;/li&gt;&lt;li&gt;React，与Vue相比，React还强制组件化理念，但是绝大部分管控系统其实是不需要组件化的，在这类系统中，模板比组件更便捷。&lt;/li&gt;&lt;li&gt;ExtJS，这个会在企业领域有不少市场，但随着用户对UI多样化的需求增加，不少人会逐步选择弃用它，而且它的开发效率并不算高，唯一优势是组件丰富而且适合企业领域。&lt;/li&gt;&lt;/ul&gt;所以，综合来看，如果你有一个这个领域的系统要开发新版本，仍然没有太好的选择。&lt;br&gt;&lt;br&gt;再看看Angular 2，一年前，我曾经回答过相关的一些问题，在这篇的评论中，有过对于版本发布时间的预测：&lt;a href=&quot;https://www.zhihu.com/question/26722922/answer/33798308&quot; class=&quot;internal&quot;&gt;Angular 2.0与1.3版本相比，有哪些方面的改进呢？ - 徐飞的回答&lt;/a&gt;，现在看来，大致是准确的，为什么我当时觉得要这么久时间呢，有这几方面的考虑：&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;太受关注了，大家对1.x的吐槽那么多，开发团队肯定亚历山大，所以很多他们的想法都会不自觉被这些言论引导，而且整个过程一直公开，在很多点上，会有争议，其实不一定非要改那么多的，可是你挡不住每个人都把他所拥有的认知往上加。做框架的时候，核心团队只能有2-3人，不然不可控因素太多了。《商君书》教导我们：&lt;u&gt;民不可与虑始，而可与乐成。&lt;/u&gt;从决定一个框架流行度的因素来说，事后的宣传和社区运营要比设计过程重要得多，只要不出致命问题，都可以认为是没有问题，是feature而非issue。&lt;br&gt;&lt;/li&gt;&lt;li&gt;想要做的事情太多了。比如说，可选渲染引擎，可选模块系统，考虑支持同构模式，考虑支持Native渲染，而且一会要考虑集成Rx，一会要考虑是否引入Imuutable，随时受到社区流行元素的影响，总是企图一劳永逸，这是不可能的事，没有哪个前端框架能够一次搞出拉钩上吊一百年不许变的模式，能选用Angular这样框架人，基本都会用默认配置，不会真的这么geek到自己替换模块的，要能这么干，他早就用Vue去了。&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;所以，我觉得做到现在，Angular团队的人自己也迷惘了，早期Rob Eisenberg离开创立了Aurelia框架，近期这个库：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/angular/watScript&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;angular/watScript · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，都反映出内部的人思想上的斗争与困惑：我们到底想要什么样的东西？从过程来看，这是必然的事情，可以预见到现在这种局面。&lt;br&gt;&lt;br&gt;其实，以现在Angular 2 Beta版所拥有的东西，已经非常超前了，但这个超前有没有用呢？说实话，不会很大。两个方面看：&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;能不能吸引到新用户？能吗，绝对不会有想象的那么多，为什么呢，因为一个成熟的开发人员，他考虑技术选型，并不是你很先进我就会用，而是要看你是否适合我的业务形态，对我的人员是否增加太多学习成本，能否带来明显的好处。至少现在没那么明显，等HTTP2普及度更高之后，或许会好些。&lt;br&gt;&lt;/li&gt;&lt;li&gt;能不能拉住老用户？能拉住一些，但失去的可能更多些，失去的原因主要还是一年前自己的那些豪言壮语。其实ng1.x真的那么不堪吗？不见得，只要把module机制这样的问题修改一下，仍然还是个很不错的框架，而且1.4和1.5版本加入的不少东西，也是非常有优势的，可惜很多见到风就是雨的人，会被那些言论吓跑了，不会持续关注。&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;小猪的答案中提到另外一点：&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;面向component编程是解决界面复杂性的好手段，但是，同样会带来代码复杂度上升的代价，从我的实践来看（不是angualar），这个平衡很难把握，而且有些懒惰的开发人员也不是很乐意在开发中仔细的拆分组件。&lt;/blockquote&gt;&lt;br&gt;深表同意，我个人前一段时间写的《Web应用组件化的权衡》：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/xufei/blog/issues/22&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Web应用组件化的权衡 · Issue #22 · xufei/blog · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;就是阐述这方面观点的。&lt;br&gt;&lt;br&gt;另外，对于开发语言的变更，很多人觉得是个问题，但我觉得对于企业开发者来说，这个还属于可接受范围。&lt;br&gt;&lt;br&gt;&lt;a class=&quot;internal&quot; href=&quot;https://www.zhihu.com/people/igaves&quot;&gt;莫大艺术家&lt;/a&gt; 的回答中，把ng2和ng1的升级比作as3和as2，非常好的比喻，赞。&lt;br&gt;&lt;br&gt;好了，说点总结吧：不管怎样，终于发布了，是好事。新版本更加强大优雅，但学习成本也更高了，这里面很多理念，对新时代的前端来说确实是必备技能（ES 2016，TS，Rx等等），从这个角度看也可以理解。能不能达到ng1曾经拥有过的辉煌，不得而知，80%的可能性是没有。&lt;br&gt;&lt;br&gt;我要吐槽的比较重要的一点是：&lt;br&gt;&lt;br&gt;我认为如果组件要依赖其他组件，其import过程应当放在html模板中，而不是放在ts代码里。MVVM三层，明显越上层越属于配置层，组件依赖数据配置信息，应当放在模板中更合适，对比一下这篇提出的跟Aurelia的对比：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.durandal.io/2015/05/20/porting-an-angular-2-0-app-to-aurelia/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;blog.durandal.io/2015/0&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;5/20/porting-an-angular-2-0-app-to-aurelia/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;另外，个人对Angular 2这次的Beta版有个猜测，官方其实还没有这么早把它推出的准备，因为官方从1.3版本之后，又陆续创建了1.4和1.5两个版本，当初说好1.3就终止的呢？可见自己并没有信心，这次推出ng2的Beta版，很可能是受到Aurelia前一阵发布Beta版的刺激所致……&lt;br&gt;&lt;br&gt;附带说句话，最近这些五花八门的框架，近期看，没有谁能够取代谁，有很多人拿出自己的作品来证明所用的东西好，其他框架不行，其实。。。是因为不管用哪个东西，都能做出你这样的作品。尤其是管控类的系统，还是那句话：轻量级的管控系统，至少有一百种做法。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nAngular 2是一个重量级前端框架，明显比Vue重，作为全业务解决方案来说，大致和React整合了一堆东西之后在一个数量级。 这么重的一个东西给谁用呢？两种场景：基于Web的企业应用，混合应用（包括桌面端和移动端）。 我们可以发现，什么样的人非常欢迎Angula…\n\n<a href=\"/question/38571416/answer/77067217\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-12-16\" target=\"_blank\" href=\"/question/38571416/answer/77067217\">编辑于 2015-12-16</a></p>\n\n",
    "link": "https://zhihu.com/question/38571416/answer/77067217"
  },
  {
    "question": "\n如何看待豪情的前端群的群规？\n",
    "author": "豪情",
    "content": "\n\n<textarea hidden class=\"content\">制定这个的目的在于：&lt;br&gt;1. 网络工具的娱乐性已经大于他的实用性，很多同学不会利用工具学习，而是用他浪费青春。哥看在眼里，急在心里，大把年华在说学逗唱中慢慢流走，等回首的时候感觉一事无成，时间却过了很多。迫于这个心理，在吸收其它群先进交流经验的基础上，加上个人从事互联网的一点积累，终成此群规，感谢以往对群规贡献过的同学，独木难成林，有大家的参与才有现在的硕果。我们的初衷是就是让QQ群的实用性大于娱乐性，当然我们也遇到了不少同学的误会或抵触，普遍反映群规过于沉闷或严肃。我的观点是：我们不是娱乐圈，不是搞相声，在什么圈子做什么事，在什么群讨论什么话题，最后的目的是：让专业的人做专业的事，让专业的讨论得到专业的回复。&lt;br&gt;我们群的风格是禁止闲聊，非喜勿进，当然我们不拒绝娱乐或在适当时间的放松，微信群专为娱乐而生，加qq群之后可以申请加微信群，大把的红包等着呢，而且我们4个微信群里边女生数量普遍大于男生，赶紧来一波男生吧，哥实在撑不住了，每天约，每天红包发不停。当然我们相信大部分同学是爱学习的，但是没有意识到质量的重要性效率的差异性。我们群是禁无意义的gif的，没有意识之前，感觉发个图片没什么，但是有了引导之后发现，图片会带偏话题，分散讨论的注意力。同时我们的群规也是强调引导大于惩罚，最终的目的授渔而不是鱼。&lt;br&gt;&lt;br&gt;2. 很多喜欢交流的同学没有去处。&lt;br&gt;bbs的方式正在没落，没落的原因，网络的时效差已经超越了人们的期望值。现在更希望一种及时反馈有效的交流。论坛发了要等人回复，提问的方式也没有跟进，国内更大论坛，貌似连一个在线运行代码这样的基础需求都没有满足，可见功能的缺乏或意识的落后。同时，很多同学业余时间想帮助同学，但没有地方可去。所以，我们这是一个不错的平台。QQ群的坏处就是，不能够即时的沉淀一些讨论主题，而且大部分讨论是在上班时间，碎片式的，并没有一个合理的渠道或方法来积累下来。&lt;br&gt;当然我们中的一些同学，经过自己的努力，进行了一些尝试，可以看看：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/LoveOrHate/category/687373.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;js高级群的日常&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/callback-w/category/682711.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;js中级前端开发群&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 日常总结&lt;br&gt;&lt;br&gt;3. 很多想学习的同学没有去处。&lt;br&gt;web前端发展日新月异，很多同学带着期望而来，除了慕课等被动式的平台之外，目前还找不到一个合适的交流平台，我们正好弥补了这个空白。试图用最低的门槛，最方便的方式，最友好的引导，最科学的管理，来达到共同提高的目的。&lt;br&gt;&lt;br&gt;4. 很多同学在走弯路，我们试着让这个弯路充满温情或期待。&lt;br&gt;众所周知，人生经过波折才会挖掘出自己的价值或潜力所在。但我们让这个拐点或波谷有一丁点的温情。遇到困难时，可以试当的提供思路，让学习者能够尽可能的缩短解决问题的时间或周期。同时让学习的同学看到希望或继续走下去的信心。不是因为一个不可控制的错误，而使前端开发界缺少一位这样的精英。&lt;br&gt;&lt;br&gt;5. 让知识有个汇集之地，学习有个目标或方向。&lt;br&gt;群规里边不但是日常的交流约定，同时也让所有的当前可能用到的前端工具罗列出来，可以让初学者有一个大致的学习方向，让开发者有一个技术造型时的参考，让深入学习者有一个可攀越的高峰，让旁观者有一个专业性的认识。因为专业所以我们如此执著，因为执著所以我们如此的义无反顾，就算我们的梦想不能实现，我们也无怨无悔，因为我们努力过付出过拼搏过，而且万一实现了呢？&lt;br&gt;&lt;br&gt;6. 最主要还是想让这个阶段性的积累分享给大家，让更多的同学能够在这个知识宝贵中受益，让一些高效的交流方式，有效的学习方法能够交流开来。而且基本的思路都来自互联网，因为从互联网受益，所以分享回馈给互联网。&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4602667.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;网上分享知识和帮助他人，自己有什么收获？&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;7. 试图让爱分享，喜欢技术的同学在一块，产生更大的热量或价值。&lt;br&gt;我们试图像一个孵化器或种子一样在引导着一批人，让这批人能够经过时间的沉淀或岁月的洗礼之后，能够把这种高效交流的方式或学习氛围带给其它人，间接的影响行业提升自己。或者多年回忆说：曾经在一个叫豪情建的高质量群里边或一群有意思的小伙伴们度过了那么一段难忘的岁月，那时的我们是那样的年轻，激情或冲动。他们的敬业，专注机智或风趣的交流让我到现在也是记忆犹新的，我不后悔加入这样的群。如果真有这样的体验或冲动也就够了，说明我们的努力或付出真的是没有白费。&lt;br&gt;&lt;br&gt;8. 我们群除了技术之外，每周五还提倡交流一些：职业困惑，产品方案，运营策略，创业历程，励志分享，技术走向等开放性话题。&lt;br&gt;&lt;br&gt;我们群交流的理想原则是这样：本群倡导一种开放，平等，自由的交流风格。但不强推某个观点，我们只是技术从业者，技术的受益者。只是把技术做为谋生的一种手段，一种解决问题的方法，生活除了技术之外还有很多，职业除了技术之外还有很多东西需要培养或学习。 &lt;br&gt;这是我群的一个特点，站在职业的高处看技术之外的东西，这样更利用于把技术干好，更能平衡技术在职业生涯中所起的作用。这样与上下游合作交流沟通时，才能换位思考，使合作更加的无缝或高效。 &lt;br&gt;另外我们强调技术的神奇的同时，我们不神化技术，技术做为我们的谋生手段之一，我们挖掘各个语言的长处，规避他的短处，不要因为技术的开放或其它特点，而深入其中不能自拨。 &lt;br&gt;所以，我经常在群里边建议同学们以一种创业者的心态来从事你现在的职业，我们感叹技术的神奇，但我们更好的利用他，驾驭他。以此来改变我们的生活，改变我们看待世界的眼光，最后改变我们做事的方法，提高思考的起点。 &lt;br&gt;所以，我们在群内交流表达各自的观点，但不强推，不灌输，不神化，说某个某个好的不得了，某个某个差得不得了。 &lt;br&gt;&lt;br&gt;最后，我们还是缺资深的前端同学的加入，虽然高级群有1000多人，但是与我们的期望还是差很远。&lt;br&gt;&lt;br&gt;9. 这个群规是开放式的，可以随时fork之后push。欢迎push。&lt;br&gt;正如群规中所说：群规会不断的修改或调整，你不在是一个受益者，更是一个项目参与者内容规则的制定者，建议watch，不建议fork。&lt;br&gt;&lt;br&gt;10.　我们的资源：&lt;br&gt;通过3年多的沉淀（高级群是：2013/10/29创建的），我们已经有阶段性的成果，内中项目虽然没有达到一定的规模效应或行业影响，但我们一直在坚持着慢慢积累，一直往前的想法或思路。&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jsfront&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JS高级前端开发 · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;我们github组织&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jsfront/month/tree/master/2015&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;month/2015 at master · jsfront/month · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;我们的月报&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jsfront/src&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfront/src · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;我们的其它代码收集&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jsfront/toucher&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfront/toucher · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;我们管理的一个toucher库&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jsfront/template&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfront/template · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;我们管理的一个template&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jsfront/sublime-text&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;jsfront/sublime-text · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;sublime text指导&lt;br&gt;&lt;br&gt;11. 加的人太多了，各种广告，各种学院的人，我们不得不设置门槛，如果你想加入中高级群，请参考：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/4426105.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JS高级前端开发群加群说明&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，一般加入的群号为：&lt;b&gt;327388215。&lt;/b&gt;&lt;br&gt;&lt;br&gt;12. 最后的感谢写给群内所有的成员，尤其是管理员或热心参加交流的同学们，道一声谢谢，你们辛苦了。多少个日夜日夜，多少次来回修改，是你们用最大的包容或耐心，一步步教会或感动了我们众多的朋友，从而激发了别人帮助别人的热情，是你们直接的推动了群内交流的气氛，简直改善了人们对技术的看法，最主要给了我们继续为前端奋斗的信念或动力，你们给了我们希望或信心，是你们给了我们站直了说话的魄力或自信，是你们让我有继续在前端界继续走下去的勇气或力量，&lt;br&gt;同时也感觉了到了这群存在的真正意义，或团队力量的伟大。&lt;br&gt;&lt;br&gt;也有很多群员私聊回我，感谢你提供了这样的一个高质量的平台，我说，是大家的力量，一个巴掌拍不响。看到群里边很多同学解决问题后很多at的感谢。使我在想放弃引导的时候寻找到力量，是你们让我持续的坚持着，持续的不断前行。&lt;br&gt;&lt;br&gt;以上仅供参考。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n制定这个的目的在于： 1. 网络工具的娱乐性已经大于他的实用性，很多同学不会利用工具学习，而是用他浪费青春。哥看在眼里，急在心里，大把年华在说学逗唱中慢慢流走，等回首的时候感觉一事无成，时间却过了很多。迫于这个心理，在吸收其它群先进交流经验的…\n\n<a href=\"/question/36239951/answer/66958607\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-10-09\" target=\"_blank\" href=\"/question/36239951/answer/66958607\">编辑于 2015-10-11</a></p>\n\n",
    "link": "https://zhihu.com/question/36239951/answer/66958607"
  },
  {
    "question": "\n怎么培养JavaScript编程兴趣？\n",
    "author": "徐飞",
    "content": "\n\n<textarea hidden class=\"content\">对一个东西的兴趣，一般来源于两个方面：利益，快乐。JavaScript这东西，两方面都可以有，属于很值得学的东西。&lt;br&gt;&lt;br&gt;从你的描述来看，有些心急了，我建议这么来：&lt;br&gt;&lt;br&gt;先不要忙着看什么源码之类，直接去看只会让你觉得枯燥。&lt;br&gt;&lt;br&gt;经常想一些小东西来做，每个东西不要太大，比如，一个计算器，一个黑白棋或者五子棋，一个波形曲线，一个雪花飘飘的动画，多做这种。&lt;br&gt;&lt;br&gt;做每个东西的时候，什么都不要参考，就自己想，硬写，不要管代码好不好看之类，然后写了不少个这类东西之后，尝试写更大一点的东西，比如流程图，比如富文本编辑器，比如小游戏。&lt;br&gt;&lt;br&gt;当写了一些这种东西，勉强实现出来之后，自己尝试优化，看看里面哪里有不好的地方，也提取一些公共函数之类，然后再去看看一些库，比如underscore，jq之类，看看它提取了什么通用功能，内部又是怎么实现的。如果你没有相关背景，上来就看源码，效果肯定是不好的。&lt;br&gt;&lt;br&gt;学js用处很大的，随手就可以写，写了就马上能跑，不用配环境，全可视化，实现个平时需要的小功能，或者哄哄妹子之类，太easy，你看前端工程师哪个是没有女朋友的……&lt;br&gt;&lt;br&gt;退一万步讲，就算你不喜欢妹子，而是喜欢已婚男人，把这个写好了还能赚钱啊，你看winter，他才30岁，都大几百万资产了，想干什么就干什么，去必胜客都直接吃最贵的套餐，生活乐无边。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n对一个东西的兴趣，一般来源于两个方面：利益，快乐。JavaScript这东西，两方面都可以有，属于很值得学的东西。 从你的描述来看，有些心急了，我建议这么来： 先不要忙着看什么源码之类，直接去看只会让你觉得枯燥。 经常想一些小东西来做，每个东西不要太…\n\n<a href=\"/question/29757187/answer/45504059\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/29757187/answer/45504059\">发布于 2015-04-21</a></p>\n\n",
    "link": "https://zhihu.com/question/29757187/answer/45504059"
  },
  {
    "question": "\n微信内置浏览器对于 HTML5 的支持如何？\n",
    "author": "沈啸",
    "content": "\n\n<textarea hidden class=\"content\">这是一个令人沮丧的事实。在android上所谓的x5内核只是众多被用来祸害前端的产品之一。&lt;br&gt;chromium这么强大，国内市场上却充满了基于过时android内置浏览器的第三方产品。更不可思议的是这些山寨货竟能把采用先进技术的产品逼进市场角落。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n这是一个令人沮丧的事实。在android上所谓的x5内核只是众多被用来祸害前端的产品之一。 chromium这么强大，国内市场上却充满了基于过时android内置浏览器的第三方产品。更不可思议的是这些山寨货竟能把采用先进技术的产品逼进市场角落。\n\n<a href=\"/question/23595715/answer/86127397\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-02-13\" target=\"_blank\" href=\"/question/23595715/answer/86127397\">编辑于 2016-02-13</a></p>\n\n",
    "link": "https://zhihu.com/question/23595715/answer/86127397"
  },
  {
    "question": "\n有哪些适合新手模仿学习的静态页面？\n",
    "author": "大漠",
    "content": "\n\n<textarea hidden class=\"content\">搜索了一些，仅供参考：&lt;br&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//html5up.net/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML5 UP! Responsive HTML5 and CSS3 Site Templates&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.freshdesignweb.com/free-html5-css3-templates/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;250+ Free Responsive HTML5 CSS3 Website Templates&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//w3layouts.com/free-responsive-html5-css3-website-templates/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;w3layouts.com/free-resp&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;onsive-html5-css3-website-templates/&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.html5xcss3.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;499+ Best Free Responsive Html5 Css3 Templates&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//templated.co/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;TEMPLATED - CSS, HTML5 and Responsive Site Templates&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.freehtml5templates.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Free HTML5 Templates&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//themeforest.net/tags/html5%2520css3&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Html5 css3 Templates &amp;amp; Themes&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;这些网站上可以找自己喜欢模仿的模板。其实还可以找一些psd资源下载的网站，把人家的psd下载下来，然后将psd转成Web页面。&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3cplus.com/source/20-great-websites-to-download-free-psd-files.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;20个免费下载PSD设计网站&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3cplus.com/source/ui-design.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;国外优秀的UI设计资源库&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;建议把搜索用好，这些东东只要在搜索中搜索，都能搜索出来的。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n搜索了一些，仅供参考： <a href=\"//link.zhihu.com/?target=http%3A//html5up.net/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">HTML5 UP! Responsive HTML5 and CSS3 Site Templates<i class=\"icon-external\"></i></a> <a href=\"//link.zhihu.com/?target=https%3A//www.freshdesignweb.com/free-html5-css3-templates/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">250+ Free Responsive HTML5 CSS3 Website Templates<i class=\"icon-external\"></i></a> <a href=\"//link.zhihu.com/?target=https%3A//w3layouts.com/free-responsive-html5-css3-website-templates/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">w3layouts.com/free-resp</span><span class=\"invisible\">onsive-html5-css3-website-templates/</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a> <a href=\"//link.zhihu.com/?target=http%3A//www.html5xcss3.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">499+ Best Free Responsive Html5 Css3 Templates<i class=\"icon-external\"></i></a> <a href=\"//link.zhihu.com/?target=http%3A//templated.co/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">TEMPLATED - CSS, HTML5 and Responsive Site Tem…<i class=\"icon-external\"></i></a>\n\n<a href=\"/question/23294037/answer/72280819\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/23294037/answer/72280819\">发布于 2015-11-15</a></p>\n\n",
    "link": "https://zhihu.com/question/23294037/answer/72280819"
  },
  {
    "question": "\n老板要求强制周六加班，周六不来就开除，我该如何保护自己的合法权益？\n",
    "author": "啊毛",
    "content": "\n\n<textarea hidden class=\"content\">很简单，专业人士教你，关键点，搜集证据，包括但不限于公司要求周六加班的通知，实际周六加班以及每日上班的打卡记录或其他证据，工资表，如果公司开除你的话，要求单位提供书面材料，如果不提供，那你每天都去公司坐着啥都不干，一直到公司提供书面材料为止，期间如果有冲突，及时报警并留存警方出警记录，以后都是有用的。&lt;br&gt;&lt;br&gt;&lt;br&gt;等拿到公司开除你的材料之后，你就可以去劳动仲裁了，可以要求的事项，工资可以结到公司书面提供解除合同那天为止，然后加班费，其次解除劳动合同的经济补偿金，最后由于公司违法解除劳动合同，可以要求单位承担数额等同于经济补偿金的经济补偿金。&lt;br&gt;&lt;br&gt;以上</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n很简单，专业人士教你，关键点，搜集证据，包括但不限于公司要求周六加班的通知，实际周六加班以及每日上班的打卡记录或其他证据，工资表，如果公司开除你的话，要求单位提供书面材料，如果不提供，那你每天都去公司坐着啥都不干，一直到公司提供书面材料为…\n\n<a href=\"/question/50947307/answer/123543413\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/50947307/answer/123543413\">发布于 2016-09-25</a></p>\n\n",
    "link": "https://zhihu.com/question/50947307/answer/123543413"
  },
  {
    "question": "\nCSS 有哪些暖心却鲜为人知的属性？\n",
    "author": "云贤力",
    "content": "\n\n<textarea hidden class=\"content\">&lt;ol&gt;&lt;li&gt;attr&lt;/li&gt;&lt;/ol&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cfm&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-unit=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;元&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;剩余话费40&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[data-unit]:after{\n  content: attr(data-unit);\n  color: #3b98e0;\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/mehuqaqica/edit%3Fhtml%2Ccss%2Coutput&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jsbin.com/mehuqaqica/ed&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;it?html,css,output&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;IE不支持&lt;a href=&quot;//link.zhihu.com/?target=http%3A//caniuse.com/%23search%3Dattr&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Can I use... Support tables for HTML5, CSS3, etc&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;2. currentColor是color属性的值&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;.box{\n  width: 200px;\n  height: 200px;\n  color: #3b98e0;\n  border: 1px solid currentColor;\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;box&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n  测试测试\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/yocifuhuxu/edit%3Fhtml%2Ccss%2Coutput&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JS Bin - Collaborative JavaScript Debugging&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;IE7，8不支持 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//caniuse.com/%23search%3DcurrentColor&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Can I use... Support tables for HTML5, CSS3, etc&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;3.user-select 禁止选择文本&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;.box-1{\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/kogimajovu/edit%3Fhtml%2Ccss%2Coutput&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JS Bin - Collaborative JavaScript Debugging&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;4.selection 可设置文字被选择时的样式&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:selection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#FE6E66&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#FFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jsbin.com/savegadamu/edit%3Fhtml%2Ccss%2Coutput&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JS Bin - Collaborative JavaScript Debugging&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;5.will-change  启动GPU加速，增强页面渲染性能&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.zhangxinxu.com/wordpress/2015/11/css3-will-change-improve-paint/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;使用CSS3 will-change提高页面滚动、动画等渲染性能 «  张鑫旭&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;6.响应图片&lt;br&gt;在不同设备像素比的屏幕下，自动加载2倍，3倍图&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;background-image: image-set( url(test@2x.png) 2x, url(test@3x.png) 3x );\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;兼容性：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//caniuse.com/%23search%3Dimage-set&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;caniuse.com/#&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;search=image-set&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nattr&lt;p data-unit=\"元\"&gt;剩余话费40&lt;/p&gt;\n[data-unit]:after{\n content: attr(data-unit);\n color: #3b98e0;\n}\n<a href=\"//link.zhihu.com/?target=http%3A//jsbin.com/mehuqaqica/edit%3Fhtml%2Ccss%2Coutput\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">http://jsbin.com/mehuqaqica/edit?html,css,output <i class=\"icon-external\"></i></a> IE不支持<a href=\"//link.zhihu.com/?target=http%3A//caniuse.com/%23search%3Dattr\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Can I use... Support tables for HTML5, CSS3, etc<i class=\"icon-external\"></i></a> 2. currentColor是color属性的…\n\n<a href=\"/question/39817183/answer/83440822\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-01-26\" target=\"_blank\" href=\"/question/39817183/answer/83440822\">编辑于 2016-03-13</a></p>\n\n",
    "link": "https://zhihu.com/question/39817183/answer/83440822"
  },
  {
    "question": "\n为什么现在pc份额越来越小，但是web前端技术却这么火热，难道是因为移动端的需求？\n",
    "author": "貘吃馍香",
    "content": "\n\n<textarea hidden class=\"content\">我就不忽悠什么前端春天了&lt;br&gt;学不会灌鸡汤&lt;br&gt;&lt;br&gt;首先不是PC份额越来越少&lt;br&gt;而是PC出货量越来越少&lt;br&gt;相对的是移动设备出货量越来越多&lt;br&gt;出货量多少表示设备的当前需求量&lt;br&gt;&lt;br&gt;这表示&lt;br&gt;PC市场饱和&lt;br&gt;移动端市场还未饱和&lt;br&gt;饱和市场并不是就彻底不需要Web开发了&lt;br&gt;它同样需要&lt;br&gt;&lt;br&gt;因为基础累积的总量还在&lt;br&gt;（你总不会买了PC几个月就扔了）&lt;br&gt;这种总量衰减还需要时间&lt;br&gt;&lt;br&gt;但是移动端新兴市场也需要&lt;br&gt;一边新增需求减缓&lt;br&gt;总量还在&lt;br&gt;另一边需求与总量都快速增加&lt;br&gt;移动端也是需要一部分Web来辅助App的&lt;br&gt;所以原本可能仅仅够PC时代的使用的web前端&lt;br&gt;在新需求倍增下突然显得不够了&lt;br&gt;&lt;br&gt;加之Web前端开发之前普遍是脏活累活&lt;br&gt;虽说相对入门门槛低&lt;br&gt;但很少人愿意干&lt;br&gt;也很少人能干的很好&lt;br&gt;干的好的人&lt;br&gt;经过这么多年&lt;br&gt;已经把面试（理论、技术体系等）门槛提的较高了&lt;br&gt;使得它入门门槛低的优势也不复存在&lt;br&gt;导致会的人看上去挺多&lt;br&gt;能用的人实际不多&lt;br&gt;&lt;br&gt;综合以上导致了看上去前端荒的现象</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n我就不忽悠什么前端春天了 学不会灌鸡汤 首先不是PC份额越来越少 而是PC出货量越来越少 相对的是移动设备出货量越来越多 出货量多少表示设备的当前需求量 这表示 PC市场饱和 移动端市场还未饱和 饱和市场并不是就彻底不需要Web开发了 它同样需要 因为基础累…\n\n<a href=\"/question/37127912/answer/70607777\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/37127912/answer/70607777\">发布于 2015-11-03</a></p>\n\n",
    "link": "https://zhihu.com/question/37127912/answer/70607777"
  },
  {
    "question": "\n做为一名在校学生而言，从其职业发展的角度出发，在学习 Web 前端开发的时候有必要花时间兼容 IE6、IE7 这些浏览器吗？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">绝对&lt;b&gt;没有&lt;/b&gt;必要。&lt;br&gt;&lt;b&gt;【更新：&lt;/b&gt;楼下那些说有必要的，麻烦你们切题清楚点，你们自己要兼容IE6你公司可能是为此付钱给你，但是提问者还是在校生，有人付钱让他&lt;b&gt;学习&lt;/b&gt;兼容IE6吗？&lt;b&gt;】&lt;br&gt;&lt;/b&gt;&lt;br&gt;目前（2012年10月）IE6、IE7的市场占有率即使在最小白的市场，份额也下降到了25%以下。考虑你还是在校生，意味着你进入可以承担较为独立的工作岗位时，至少还有2年以上时间，届时IE6、7的占有率估计至少将跌至10%以下，甚至可能小于5%。这意味着届时只有很少的互联网产品才会考虑兼容，比如那些最最基础的互联网应用和网站，而这类网站、应用往往都是已经非常成熟的codebase，没你什么事。&lt;br&gt;&lt;br&gt;另外，作为在校生，我不建议你现在就确定前端开发方向。前端开发的职业前景并不乐观。如果你想从事编程类工作，最好是把计算机基础打好，例如数据结构、算法、编译原理等。甚至好好学习下互联网基础协议，比如HTTP（1.1和未来2.0草案），绝对比花时间在IE6、7上有价值。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n绝对<b>没有</b>必要。 <b>【更新：</b>楼下那些说有必要的，麻烦你们切题清楚点，你们自己要兼容IE6你公司可能是为此付钱给你，但是提问者还是在校生，有人付钱让他<b>学习</b>兼容IE6吗？<b>】 </b> 目前（2012年10月）IE6、IE7的市场占有率即使在最小白的市场，份额也下降到了25%以下…\n\n<a href=\"/question/20552034/answer/15459412\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-10-25\" target=\"_blank\" href=\"/question/20552034/answer/15459412\">编辑于 2012-10-26</a></p>\n\n",
    "link": "https://zhihu.com/question/20552034/answer/15459412"
  },
  {
    "question": "\n现在的电子产品或者软件，有没有针对盲人而开发的？\n",
    "author": "侯志孝",
    "content": "\n\n<textarea hidden class=\"content\">补充1：感谢这么多人支持我的回答，也感谢知乎官方微博和知乎日报的转发分享。按照现在的情况，信息无障碍还任重道远。也希望做网站的看到这么多批评的声音以后能考虑无障碍方面的事宜。许多人评论说我们做的事情很好，感谢我们的努力。但是我觉得信息无障碍应该是所有做产品的应该考虑的东西。你们的做出来的东西将来会是和带有盲道的马路一样，让所有人都能够方便使用才对。&lt;br&gt;&lt;br&gt;&lt;br&gt;从10年3月来清华到现在快4年，一直从事盲人电子产品的研发，但从没有写过关于这个行业的字，现在借这个问题写一点，以后会多写。&lt;br&gt;        电子产品简单可以分为软件产品和硬件产品：针对盲人的软件产品主要指得是读屏软件，也就是把电脑屏幕上显示的东西读出来以让看不见的盲人听得到，只要在普通电脑或者智能手机上装个读屏软件就可以实现；而硬件产品可以理解为一个独立于其他设备的东西，针对盲人的硬件产品主要指的是把盲人看不见的文字或符号通过另外一种方式“显示”出来，通常是以电子单元的方式来显示盲文点字，盲人虽然看不见但是可以摸得到，这种产品叫点字显示器，简称点显器（你可以理解为盲人用的显示器）。还有一些辅助设备比如听书郎，读书机，盲杖等等，由于本人主要做点显器，所以对点显器的介绍会更仔细一点。&lt;br&gt;一、软件产品：&lt;br&gt;        前面几位都回答的是针对盲人做的软件产品，那我就不针对软件产品细说了，关于软件产品可以参考前面几位的回答。推荐几个读屏软件：针对PC的“争渡读屏”，有公益版本感兴趣可以下载试用，还有就是我们自己的“清华双星读屏软件”，实话实说，易用性上不如争渡；针对塞班和安卓手机的保益读屏；另外几位提到最多的苹果的voiceover，安卓的talkback和Brailleback等都属于这个范畴（国内好多手机厂商把这两个东西阉割了，可以自己play商店下载安装，安装成功后在辅助功能里面就可以打开。Brailleback会跟我之后提到的硬件产品有联系）。&lt;br&gt;        还是要吐槽一下现在国内的网站无障碍水平太差，我觉得这是跟观念有关的。网站广告乱放，跟读屏软件兼容的差，验证码难以识别甚至不能识别（针对验证码问题争渡读屏团队还专门做了一个让明眼人帮助盲人看验证码的公益活动&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.douban.com/group/topic/27660076/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;温暖他人、快乐自己，争渡识图志愿者倡议&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）。国内无障碍做的好的网站屈指可数，基本上都是网站做大了之后盲人用户主动给此公司联系要求他们改进无障碍他们才会做相应的工作。而一些小公司小企业的网站在做的时候根本没有考虑过这个事情。&lt;br&gt;        我要说的是无障碍是一种观念，是一种常识，是一种标准，所有的网站也必须按照这个标准来设定，就像所有的马路都要修盲道是一个道理。（趁机吐槽一下国内盲道的不堪，各种占用。新浪微博@随手拍问题盲道 ，是一个现在由本人担任志愿者的一个公益监督性质的微博欢迎大家随手拍问题盲道来at我，微博地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//weibo.com/mangdao&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;随手拍问题盲道的微博&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）如果你的网站不采用这个标准，是要负法律责任的（国内尚不清楚法律怎么规定，在香港有一个案例：香港失明人协进会（网址&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.hkbu.org.hk/b5_index.php&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;香港失明人協進會&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）去年因为麦当劳网站无障碍问题而起诉麦当劳，法院判决麦当劳败诉）；而对于网站经营者来说，无障碍做的不好会损失很多一部分用户。&lt;br&gt;&lt;br&gt;二、吐槽无极限，暂时到此。下面说说硬件产品。&lt;br&gt;图片1&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/4cc68270806971f1af7aa9f5ea6d7c4b_b.jpg&quot; data-rawwidth=&quot;1097&quot; data-rawheight=&quot;647&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1097&quot; data-original=&quot;https://pic4.zhimg.com/4cc68270806971f1af7aa9f5ea6d7c4b_r.jpg&quot;&gt;&lt;br&gt;        如图片1 这是由本人主要负责的一款产品（本人主要负责此产品的硬件电路设计和软件维护），名字叫做“盲用记事本”。&lt;br&gt;1、首先讲讲它的记事本功能——用键盘输入代替用针戳字。后面说它的功能是点字显示器功能。&lt;br&gt;        下面的黑底有白色点点的一排，这个叫做盲点，它的每个点是可以通过下面的电路驱动而上下动的，8个点为一个单元，每一个单元代表一个字（确切的说是一个英文字母或者汉语声韵母，比如第12点凸起，剩余所有点都下去代表英文字母“b”。汉语盲文是拼音形式存在的，比如“中”字由“zh”和“ong”两个单元构成，声母“zh”由一个单元（34点凸起，其余点下去）表示，韵母“ong”由另外一个单元（256点凸起，其余点下去）表示，有兴趣可以参考图片2盲文码表对照表）。&lt;br&gt;图片2 &lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/93053852b1f2db9d47b927a053c6a709_b.jpg&quot; data-rawwidth=&quot;540&quot; data-rawheight=&quot;673&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;540&quot; data-original=&quot;https://pic2.zhimg.com/93053852b1f2db9d47b927a053c6a709_r.jpg&quot;&gt;机器（图片1）最上面的八个比较大的键分别和下面每个单元的八个盲点一一对应（可能有人会注意到图片表格中所有盲文都是六点的，这里说明一下，八点盲文是近几年在电子设备上才流行寄来的一种盲文格式.上面六点和表格中的一样，最下面两点通常用于区分大小写或者光标使用），用这八个键来输入盲文：比如同时按下1 2键，下面第一个八点单元就会同步显示12点凸起，其余点落下，代表输入了字母“b”；汉字一个字一般需要输入两次，比如先同时按下34点 ，下面第二个八点单元34点凸起，其余点落下，则代表输入了“zh”，然后同时按下256点，则输入了“ong”。另外遇到歧义的地方还会有辅助的声调码（参见图片2）.&lt;br&gt;其他一些按键或者组合键 则代表上下翻页、翻行、光标移动、删除、回车等等不细说。&lt;br&gt;该机器有内置存储卡，输入的内容可以直接存储在卡上。&lt;br&gt;&lt;br&gt;2、其次它可以当作一个电脑或手机辅助设备使用，也就是之前提到的“把屏幕上的东西以盲文的方式显示在电子单元上，供盲人摸读”的功能。也就是纯粹的点显器功能：&lt;br&gt;         要实现这个功能，首先要用USB线或蓝牙连接电脑（USB接口在侧面，内置蓝牙），用蓝牙连接手机，使小机器与电脑或手机上的软件建立连接关系（软件比如前面提到的争渡读屏，我们自家的叫清华双星读屏，手机上和苹果的voiceover，谷歌安卓的braillback等等）。由这些软件搜集电脑屏幕或者手机屏幕上的内容发送到我们的这台机器上，我们机器就会以盲文的形式显示在下面那一行盲文电子单元上。&lt;br&gt;盲人通过操纵机器上的这些键也能够控制电脑或手机的相应操作（上下翻页翻行，光标移动，删除、回车等等）。当然用户也可以通过上面的八个点在电脑或者手机内部的记事本里用盲文输入法输入字符。&lt;br&gt;      简单来说，这个机器就是盲人用的显示器。&lt;br&gt;&lt;br&gt;3、本机器可以有计算器，日历时间等一些日常功能，显示方式同上&lt;br&gt;有兴趣可以上网站一看&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.qhqmx.com.cn/dianziji.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;清华大学启明星盲人网&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;附上我们的其他产品以及国外的一些厂商的点字显示器及其衍生产品（图片三图片四图片五）&lt;br&gt;图片三&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/98107016e9a38a8155690f4f93c842e5_b.jpg&quot; data-rawwidth=&quot;1358&quot; data-rawheight=&quot;1004&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1358&quot; data-original=&quot;https://pic2.zhimg.com/98107016e9a38a8155690f4f93c842e5_r.jpg&quot;&gt;&lt;br&gt;图片四&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/4007feab4e64749dd1be7b5fe8251c75_b.jpg&quot; data-rawwidth=&quot;904&quot; data-rawheight=&quot;571&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;904&quot; data-original=&quot;https://pic2.zhimg.com/4007feab4e64749dd1be7b5fe8251c75_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;图片五&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/2a36713fcc9c1cc84b869a717524aeb0_b.jpg&quot; data-rawwidth=&quot;360&quot; data-rawheight=&quot;435&quot; class=&quot;content_image&quot; width=&quot;360&quot;&gt;&lt;br&gt;4、关于盲人的硬件产品还有很多，比如有专门针对盲人做的手机，盲杖，我们新研发的读书机（把普通书本读物以语音的方式读出来），听书郎（把电子书以语言的方式读出来），还有针对低视力的扩视仪等等&lt;br&gt;三、题外话：好多人可能会问，盲人可以听到了干嘛还用那么麻烦的去摸读？我刚开始入行时也有类似的疑问，也问过好多盲人朋友这样的问题，他们的回答是用摸读记忆更深刻，更有利于学习。现在我可以这样解释：为什么可以正常人会说话也能听懂别人说话，干嘛还要识字，干嘛还要书本文字阅读？我想道理是跟这个一样吧。&lt;br&gt;        因为国内学习设备有限，无障碍基础落后，导致大多盲人只能从事按摩着一个职业，而事实上，如果有合适的设备，他们是可以从事大多数正常人可以干的职业的，当然也包括按摩。&lt;br&gt;        盲人参加高考本来很正常，但是众所周知前段时间一个盲人女孩为了参加考试费劲波折。据我了解，在某些资本主义国家，每张试卷都是会配套盲文试卷的。也就是说不管你看得见看不见，都可以在同一份试卷上面答题。&lt;br&gt;        我上面介绍的这些个东西对盲人学习是很有用的，但是由于成本限制价钱较高，而国家又没有补助，所以普通用户望而却步。盲人朋友一致说：国家不缺钱，缺的是一颗无障碍的心。&lt;br&gt;&lt;br&gt;        最后希望更多人关注这个行业，更快的推动国内无障碍基础建设。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/4cc68270806971f1af7aa9f5ea6d7c4b_200x112.jpg\" data-rawwidth=\"1097\" data-rawheight=\"647\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/4cc68270806971f1af7aa9f5ea6d7c4b_r.jpg\">\n补充1：感谢这么多人支持我的回答，也感谢知乎官方微博和知乎日报的转发分享。按照现在的情况，信息无障碍还任重道远。也希望做网站的看到这么多批评的声音以后能考虑无障碍方面的事宜。许多人评论说我们做的事情很好，感谢我们的努力。但是我觉得信息无障…\n\n<a href=\"/question/20432737/answer/18552138\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2013-08-25\" target=\"_blank\" href=\"/question/20432737/answer/18552138\">编辑于 2013-08-28</a></p>\n\n",
    "link": "https://zhihu.com/question/20432737/answer/18552138"
  },
  {
    "question": "\n百姓网的前端架构是怎样的？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">泻药。&lt;br&gt;&lt;br&gt;其实我们的前端架构还远未成熟，可以说正在传统前端架构到现代前端架构的转变中，这个转变以引入构建系统为标志（虽然之前mobile版已经引入了stylus），从去年（2014）年初开始，预计可能持续2到3年时间达到一个我心目中理想的较稳定架构。&lt;br&gt;&lt;br&gt;之所以预期如此长的时间，是因为总体上，对于前端构建、模块化、组件方案等非常基础和牵一发动全身的设施，我采取宁缺毋滥，看不清楚就先不上的保守策略——是不是看上去似乎和我在社区老是讲新技术的形象不太相符？^_^&lt;br&gt;&lt;br&gt;这种策略有三个原因。&lt;br&gt;&lt;br&gt;第一是百姓网的性质是以信息流为主、面向所有网民的、平台级的互联网服务。凡此种性质的网站，技术选型的策略总是偏向保守的。相对来说，以体验为主、面向相对小众群体、限定于特定领域的应用，可以更快的采用新技术。像我们的内部系统就会更多采用新技术。&lt;br&gt;&lt;br&gt;第二，也是更本质的原因是，架构不是光决定用个什么系统就行的，而是牵涉方法论、工具、流程乃至组织结构等诸多层面，是需要整个团队共同理解、实施、维护和不断改进的。团队前进，架构前进。这需要耐心。&lt;br&gt;&lt;br&gt;第三，百姓网的前端团队在建立之后很长时间里包括我只有3个人，主要精力都在业务上。（当然我们许多后端工程师甚至PM都附带前端开发技能——别以为我在讲段子以下绝壁是真的之我们的CEO三年前就自己玩&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=https%3A//www.meteor.com/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Meteor&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;并去硅谷见投资人时顺便去参加nodejs的workshop还带着财务总监&amp;amp;我们财务总监当场只完成了helloworld表示不服回来后买了犀牛书问我学JS是不是看这本就好之看你们以后谁敢在我面前自称技术型公司。）期间虽然有尝试改变主站的一些开发方式，但是因为各种原因而无疾而终。去年我们的前端工程师终于超过了10个人，不过和快速增长的业务相比还是远远不够。因此虽然从去年第二季度开始成立了前端架构组，但我并不急于引入各种新设施，\n因为我认为对于我们这样规模的团队，资源的冗余度是很低的，走弯路的代价比较高。我要确保每项引入的设施都是正确的。（BAT这样规模的公司就好一些，可以有多个团队同时实施几种不同架构方案。我就指着他们帮我们这些中小型公司探路了，所以我见到他们的人就鼓吹他们快上新技术，呵呵。）&lt;br&gt;&lt;br&gt;无论如何，今年会有几项重要的前端架构的实施，比如我预期今年要上ES6！大家可以注意到我去年12月的C4（&lt;a class=&quot; external&quot; href=&quot;//link.zhihu.com/?target=http%3A//weibo.com/1960954893/BBKpY8uq3&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weibo.com/1960954893/BB&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;KpY8uq3&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）和今年1月的FEDAY上讲的内容（&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/hax/es6-in-action&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;hax/es6-in-action · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）就是ES6。这回是要玩真的哦。总之，希望能稳健的前进，到明年这个时候再来看吧。&lt;br&gt;&lt;br&gt;&lt;br&gt;针对具体问题回答如下：&lt;br&gt;&lt;br&gt;Q: 百姓网是否使用了 sass / stylus / less 这类预处理工具 ？&lt;br&gt;A: 百姓网mobile版用了stylus。最新一版重构是基于 &lt;a data-title=&quot;@CSS魔法&quot; data-editable=&quot;true&quot; class=&quot;member_mention&quot; href=&quot;//www.zhihu.com/people/22964042e90fd3fd3612455d98af3cd2&quot; data-hash=&quot;22964042e90fd3fd3612455d98af3cd2&quot; data-tip=&quot;p$b$22964042e90fd3fd3612455d98af3cd2&quot; data-hovercard=&quot;p$b$22964042e90fd3fd3612455d98af3cd2&quot;&gt;@CSS魔法 &lt;/a&gt;开发和维护的&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/CMUI/CMUI&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CMUI/CMUI · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;。桌面版因为开发历史比较悠久，一直没有引入预处理工具，短期也不会改。但长期来说最终应该会引入的。&lt;br&gt;&lt;br&gt;Q: 百姓网 js 模块化开发是如何组织的，是否使用了什么模块化工具、框架？&lt;br&gt;A: 与大家预期可能不一样，这块我们仍然停留在刀耕火种阶段。百姓网历史上，页面中脚本一直用得不多，虽然很早以前 &lt;a class=&quot;member_mention&quot; href=&quot;//www.zhihu.com/people/d1f62e3c16392d92ab7eb9aad870f18a&quot; data-hash=&quot;d1f62e3c16392d92ab7eb9aad870f18a&quot; data-tip=&quot;p$b$d1f62e3c16392d92ab7eb9aad870f18a&quot; data-hovercard=&quot;p$b$d1f62e3c16392d92ab7eb9aad870f18a&quot;&gt;@sofish&lt;/a&gt; 就考虑过引入如seajs的可能性，但是实践上，粗放的脚本合并和一个简陋的按需加载（&lt;a class=&quot; external&quot; href=&quot;//link.zhihu.com/?target=http%3A//s.baixing.net/js/global/defer.js&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;s.baixing.net/js/global&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;/defer.js&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）也就够用了。不过随着开发规模的增长，当然早晚是要走向更成熟的模块化方案。所以去年年初就开始评估和试验各种方案，比如新开发的某些独立性较高的功能组件是基于commonjs+browserify的。总体上，因为我预期所有模块化方案最终要统一到ES6的module/loader上去，所以基本上想直接上基于遵循ES6语义和API的loader的方案。但是ES6的module部分定案和实现比预期的慢，loader规范也被postpone到独立spec中。估计今年第二季度之后会引入模块化方案。需要注意的是，模块化主要是为提升代码的可维护性，侧重开发阶段。而侧重部署的模块加载或一般化的资源加载相关领域其实还有大量的可能性要探索，仅制定中的标准草案就有HTML Imports、ServiceWorker、&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//w3ctag.github.io/packaging-on-the-web/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Packaging on the Web&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;、HTTP2等，我们需要在架构上厘清这些不同的组件是如何协作并构成整个体系的，这对于未来Web网站和应用的整体性能提升会有极大价值，也是个长期任务。&lt;br&gt;&lt;br&gt;Q: 具有完整的 html css js 代码片段的 component，是如何 include 到各个页面里的，include 时对 html css js 分别进行了哪些处理？如果这其中的 js 又依赖于某更基础的 js 模块，这个依赖是如何处理的？&lt;br&gt;A:\n 和上一个问题类似，由于历史上百姓网的结构比较简单，所以一直没有引入任何一种确定的组件方案。除了需求不是特别大之外，相比模块系统已经明确会统一到ES6，组件系统目前仍是完全不明朗的情况。从维护角度说，模块系统其实转换成本并不太高，组件系统就复杂多了，要从某种\n组件系统切换到另一个组件系统听上去就很恐怖。此外，目前业界流行的MV*组件框架绝大多数是纯浏览器端方案，在百姓网主站这样以信息流为主、SEO必需、有较高浏览器兼容性要求的网站来说，无法直接使用。目前业界缺乏能很好的统一浏览器端和服务器端的方案，这是类似百姓网这样的中大型互联网网站少有直接引入类似MV*组件框架的原因。尽管目前没有确定的计划，但在内部系统和不涉及主站的新项目中会鼓励团队成员尝试新技术和方案，目前有少数内部项目已经尝试了Angular。大型Web应用中，组件化的需求是不可避免的（如 &lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=https%3A//github.com/baixing/jedi/issues/38&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;block 和 include 协作问题 · Issue #38 · baixing/jedi · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;），只是最终的答案可能要再过一段时间才会浮现出来。&lt;br&gt;&lt;br&gt;Q: 开发环境的代码在发布上线过程中做了哪些处理？&lt;br&gt;A:\n 我们有一套PHP写的deploy系统，前端资源的编译、压缩、版本化、替换路径等步骤都是该系统执行的。从去年年初开始我们引入了gulp来进行mobile版的前端构建，会逐步将前述步骤移回到gulp工具链中，并增加更多的处理，比如图片优化和模块打包。desktop版今年应该也会引入。&lt;br&gt;&lt;br&gt;Q: nodejs 在百姓网技术栈中承担了哪些任务？&lt;br&gt;A:\n \n前端构建阶段的整条工具链是完全基于nodejs平台，这个自不用说。在线上服务中，部分日志系统是基于nodejs，并且计划会进一步将更多涉及前端的日志系统迁移至nodejs。另外我们使用的第三方服务如LeanCloud的消息服务估计是基于nodejs平台的（虽然与我们无关，但是因为这个服务我们是首先吃螃蟹的用户，它本还没有js sdk，我只好亲自搞了一个&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/hax/avos-chat&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;hax/avos-chat · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，所以顺便说说）。我们的后端是基于PHP的，但我们并不排斥其他平台，如我们的新业务线也有采用基于python的系统。内部系统也有许多基于nodejs平台，并可能采用新的app框架如Koa。主站系统部分（特别是表现层）迁移到nodejs平台从架构层面来说也一直是可选项。目前的障碍更多的是在较缺乏有nodejs运维经验的工程师，有兴趣的同学欢迎投递简历。&lt;br&gt;&lt;br&gt;以上。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n泻药。 其实我们的前端架构还远未成熟，可以说正在传统前端架构到现代前端架构的转变中，这个转变以引入构建系统为标志（虽然之前mobile版已经引入了stylus），从去年（2014）年初开始，预计可能持续2到3年时间达到一个我心目中理想的较稳定架构。 之所以预…\n\n<a href=\"/question/27734203/answer/37905737\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-01-23\" target=\"_blank\" href=\"/question/27734203/answer/37905737\">编辑于 2015-01-23</a></p>\n\n",
    "link": "https://zhihu.com/question/27734203/answer/37905737"
  },
  {
    "question": "\nAndroid开发和前端开发，该选择哪个？\n",
    "author": "姚冬",
    "content": "\n\n<textarea hidden class=\"content\">在一个充分竞争的领域是不存在低投入高收益的东西的。&lt;br&gt;码农就是个充分竞争的领域。学得快又有前途的东西是不存在的，即使偶尔存在，那么很快会有大批人涌入，因为学得快啊，所以很快就会竞争惨烈。&lt;br&gt;&lt;br&gt;想找个学的快前途好的方向，其实是个危险的想法，这种想法会导致短视、跟风，竞争激烈时这些人就会退缩，总是容易第一批被淘汰。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n在一个充分竞争的领域是不存在低投入高收益的东西的。 码农就是个充分竞争的领域。学得快又有前途的东西是不存在的，即使偶尔存在，那么很快会有大批人涌入，因为学得快啊，所以很快就会竞争惨烈。 想找个学的快前途好的方向，其实是个危险的想法，这种想法…\n\n<a href=\"/question/27145893/answer/35423356\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/27145893/answer/35423356\">发布于 2014-12-18</a></p>\n\n",
    "link": "https://zhihu.com/question/27145893/answer/35423356"
  }
]