[
  {
    "question": "\n一年前端工作经验，感觉自己没有学到什么知识，如何突破？\n",
    "author": "slashhuang",
    "content": "\n\n<textarea hidden class=\"content\">友情回答一下。&lt;br&gt;&lt;br&gt;       我在工作满一年的时候已经可以写一个移动端的手势库，理解和运用设计模式编写第三方npm组件，重写redux给公司使用了。&lt;br&gt;&lt;br&gt;        我觉得题主想要突破现在的工作状态可以从以下几方面入手。   对于css，我的建议是多去尝试类似flexbox和其它api的使用方式，理解css的精髓和浏览器解析css生成的hash表方式。    对于html5新的API规范，可以多去实践，比如利用history自己实现路由方案等等。    关于nodeJS，可以从IO的角度理解stream，从线程的角度看并发都是不错的研究方向，当然类似朴大师_&lt;a href=&quot;//www.zhihu.com/people/7cd6a45d341fb2b4b35b01444e746b98&quot; data-hash=&quot;7cd6a45d341fb2b4b35b01444e746b98&quot; class=&quot;member_mention&quot; data-tip=&quot;p$b$7cd6a45d341fb2b4b35b01444e746b98&quot; data-hovercard=&quot;p$b$7cd6a45d341fb2b4b35b01444e746b98&quot;&gt;@朴灵&lt;/a&gt;的anywhere、尤大师的meteor，著名的socket.io等开源模块仔细研究，一定可以很好的提升自己nodeJS的造诣。   最后，一定要在增加代码量的同时，增加对问题理解的深度和广度，同时多去github和npm找差距。&lt;br&gt;&lt;br&gt;  我每次写前端有点到瓶颈的时候，就去看看全栈工程师_&lt;a href=&quot;//www.zhihu.com/people/fea2f801ab1dc87a87f8bdeb6fdb3394&quot; data-hash=&quot;fea2f801ab1dc87a87f8bdeb6fdb3394&quot; class=&quot;member_mention&quot; data-tip=&quot;p$b$fea2f801ab1dc87a87f8bdeb6fdb3394&quot; data-hovercard=&quot;p$b$fea2f801ab1dc87a87f8bdeb6fdb3394&quot;&gt;@phodal&lt;/a&gt;，Vue作者 _&lt;a href=&quot;//www.zhihu.com/people/cfdec6226ece879d2571fbc274372e9f&quot; data-hash=&quot;cfdec6226ece879d2571fbc274372e9f&quot; class=&quot;member_mention&quot; data-tip=&quot;p$b$cfdec6226ece879d2571fbc274372e9f&quot; data-hovercard=&quot;p$b$cfdec6226ece879d2571fbc274372e9f&quot;&gt;@尤雨溪&lt;/a&gt;或者facebook开源的react项目主导者garean的github找虐。&lt;br&gt;每次被自我鄙视完，总可以找到些突破点继续钻研。&lt;br&gt;&lt;br&gt;   所以，想要进步和突破瓶颈就去对比更强的人吧！=_=</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n友情回答一下。 我在工作满一年的时候已经可以写一个移动端的手势库，理解和运用设计模式编写第三方npm组件，重写redux给公司使用了。 我觉得题主想要突破现在的工作状态可以从以下几方面入手。 对于css，我的建议是多去尝试类似flexbox和其它api的使用方式…\n\n<a href=\"/question/46836466/answer/103214892\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-05-29\" target=\"_blank\" href=\"/question/46836466/answer/103214892\">编辑于 2016-05-29</a></p>\n\n",
    "link": "https://zhihu.com/question/46836466/answer/103214892"
  },
  {
    "question": "\n只会 HTML+CSS+JS 的人如何进阶前端开发工程师？\n",
    "author": "David",
    "content": "\n\n<textarea hidden class=\"content\">谢邀。&lt;br&gt;&lt;br&gt;这么好奇进BAT的前端学什么，那给你一个&lt;a href=&quot;//link.zhihu.com/?target=http%3A//tianmaying.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;天码营&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;出品的前端工程师的面经，拿的是BAT前端开发Special Offer。看看考察什么，自然知道要学什么了。&lt;br&gt;&lt;br&gt;----------------------------------------------------------------------------------------------&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;至今已到手百度前端Special、腾讯前端Special、网易游戏研发、阿里前端（网传白菜价）、还有一些小公司，如知乎等等。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;有些笔试是要求保密的，在此不便多说。主要写面试经历。在经历这二十多轮的面试后，我更加深信了面试成功与否不仅在于实力，还有运气、缘分、还有气场。暂且按照面试过程的相似度来分小节记述吧！&lt;/p&gt;阿里、腾讯&lt;p&gt;我在腾讯和阿里的面试都偏重项目，没有深入地探讨技术细节。和面试官讨论的问题也多有重合。所以把他们一起来记录。&lt;/p&gt;&lt;p&gt;很早阿里就开始面试了，这是BAT中我面试最早的一家。一共3面，首面技术，二面工程，三面是总监。一个多月后拿到传言中的10k Offer，已被我拒绝。腾讯的工作环境相当赞，是我在面试中见过最好的。一共5面，首面技术，二、三、四、五什么都问。。。Special Offer。&lt;/p&gt;&lt;p&gt;一面上来基本是做几个JS，CSS题目，然后开始各种问CSS。想必这是前端工程师标准的一面流程。涉及的问题就更加普遍了：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;写一个两栏的布局，左边自适应。&lt;/p&gt;&lt;p&gt;老老实实写就好了，float、absolute、table都可以实现，可以问问面试官有什么要求。再谈一谈利弊即可。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;什么是JS闭包？然后来一道题，基本都是网上能查到的。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;还有就是稍微问一点偏门的，比如阿里一面让我用CSS写一个转圈的球。正好带了我的Macbook，分分钟写了一个出来，面试官表示非常满意。&lt;/p&gt;&lt;p&gt;二面一直在谈项目，碰到很多经典的问题：你做过的最有挑战的项目讲一讲？最有成就感的事情呢？你有什么缺点？为什么想来我们这里？隐约能感受到文化相符度（culture fit）的考察。&lt;/p&gt;&lt;p&gt;问到项目我就谈&lt;a href=&quot;//link.zhihu.com/?target=https%3A//onboard.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Onboard&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;和&lt;a href=&quot;//link.zhihu.com/?target=http%3A//tianmaying.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;天码营&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;。比如天码营前后台分离的架构，Node服务器和HTTP/Websocket代理，Onboard单页App，CSS、JS的模块化（JS loader，AMD&amp;amp;CMD，LESS/SASS）实践……有一个Git的问题被问到很多次：git pull和git fetch有什么区别？这个问题你可以请教&lt;a href=&quot;//link.zhihu.com/?target=http%3A//tianmaying.com/user/luoruici&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Ricky&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，是他告诉我的。&lt;/p&gt;知乎、百度&lt;p&gt;我感觉知乎、百度等面试过程更注重编码能力和技术细节的考察，在这里统一记述。知乎5轮面试，很早就给正式Offer了。百度3轮面试，Special Offer。&lt;/p&gt;&lt;p&gt;CSS 问题：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;box-sizing是什么东西？CSS盒模型有两种：border-box和content-box，计算宽度的方式不同。&lt;/li&gt;&lt;li&gt;float和absolute布局有啥区别？两者都会脱离文档流，但前者仍会占据位置，后者会覆盖文档流中的其他元素。&lt;/li&gt;&lt;li&gt;Node.js是怎么实现并发的？可以去参考一下libuv、cpio……&lt;/li&gt;&lt;li&gt;Cookie和Session有什么区别？&lt;/li&gt;&lt;li&gt;大页面优化、回流和重绘（通常会和table一起问，它默认并非流式布局）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我简历里有AngularJS，所以有一些AngularJS的问题。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;知乎也是重度AngularJS用户。&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;AngularJS的依赖注入是什么？双向绑定是什么？&lt;/li&gt;&lt;li&gt;Service和Factory有什么区别？这是框架细节了，这两个的本质都是Provider的shortcut。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;知乎问我AngularJS有让你不爽的地方吗？看来AngularJS让知乎很不爽，此前我们做的&lt;a href=&quot;//link.zhihu.com/?target=https%3A//onboard.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Onboard&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;已经实现了完整的Angular单页App。其实只要合理地控制复杂度、加上优雅的设计、以及代码风格控制，完全可以很爽。&lt;/p&gt;华为、网易游戏&lt;p&gt;除了前端，我还面试了很多C++工程师，包括华为、网易游戏、还有一些小的游戏公司。小公司当然都给Offer了，然后我不好意思地拒绝他们（PS：确实刚开始面试不知自己几斤几两骗了好多小Offer）。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;网易游戏是最赞的，面试半天时间，两天后直接签发正式Offer。技术终面的面试官直接签发offer，HR只负责组织流程和维护秩序。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这些公司考察的都是C++和后台相关的题目了，在网上都可以查到大把的答案：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;STL熟悉吗？C11呢？用C11写一个算法，找出所有1,000,000以内的质数。&lt;/li&gt;&lt;li&gt;虚函数是怎么实现动态联编的？多继承时虚函数表是怎样的？&lt;/li&gt;&lt;li&gt;TCP的三次握手和四次握手，为什么要四次？&lt;/li&gt;&lt;li&gt;IPC有哪些方式？匿名管道为什么只能让父子进程共享？&lt;/li&gt;&lt;li&gt;求解最邻近点对问题、单源最短路径问题（书上有，分治策略）&lt;/li&gt;&lt;li&gt;还有一些小算法题记不清了，这些通常不会太难。&lt;/li&gt;&lt;/ol&gt;一点感悟&lt;p&gt;感觉面试不同于笔试，正确与否真的不重要。首先一点要保持放松，不要慌。不过当你已经被要求做过几十次自我介绍之后，想必你也不会再慌了（我都想吐了）。其次要保持主动，不要因为不会做就卡在那里，说说你想到了什么或者你做过什么类似的，这样能够引导面试官来问你擅长的东西。&lt;/p&gt;&lt;p&gt;比如我被问到如何实现视差滚动时，也懒得写CSS了，直接拿&lt;a href=&quot;//link.zhihu.com/?target=http%3A//tianmaying.com/app/collect-b/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;装B游戏&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;的背景山脉来说事。然后就开始扯这个小游戏了……&lt;/p&gt;&lt;p&gt;另外前端工程师个人博客/网站是很重要的。虽然并不是必须的要求，但你在整个面试过程中让面试官无聊的时候看看你的作品还是蛮好的。&lt;/p&gt;&lt;p&gt;实习重要么？重要！实习至少可以保底一家公司，如果你不需要保底的话当然可以不实习。身边很多同学已经印证了这一点。其实我没有实习过，是因为我有&lt;a href=&quot;//link.zhihu.com/?target=http%3A//tianmaying.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;更重要的事&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;要做。&lt;/p&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/8e320852a96abb92d426baf0194c8843_b.png&quot; data-rawwidth=&quot;1828&quot; data-rawheight=&quot;776&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1828&quot; data-original=&quot;https://pic4.zhimg.com/8e320852a96abb92d426baf0194c8843_r.png&quot;&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/8e320852a96abb92d426baf0194c8843_200x112.png\" data-rawwidth=\"1828\" data-rawheight=\"776\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/8e320852a96abb92d426baf0194c8843_r.png\">\n谢邀。 这么好奇进BAT的前端学什么，那给你一个<a href=\"//link.zhihu.com/?target=http%3A//tianmaying.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">天码营<i class=\"icon-external\"></i></a>出品的前端工程师的面经，拿的是BAT前端开发Special Offer。看看考察什么，自然知道要学什么了。 ---------------------------------------------------------------------------------------------- 至…\n\n<a href=\"/question/46313657/answer/101195809\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-05-16\" target=\"_blank\" href=\"/question/46313657/answer/101195809\">编辑于 2016-05-17</a></p>\n\n",
    "link": "https://zhihu.com/question/46313657/answer/101195809"
  },
  {
    "question": "\nescape,encodeURI,encodeURIComponent有什么区别?\n",
    "author": "黄家兴",
    "content": "\n\n<textarea hidden class=\"content\">写过一篇博客来记录它们的区别的，粘过来。&lt;br&gt;&lt;br&gt;&lt;b&gt;一、escape和它们不是同一类&lt;/b&gt;&lt;br&gt;&lt;p&gt;简单来说，escape是对字符串(string)进行编码(而另外两种是对URL)，作用是让它们在所有电脑上可读。&lt;br&gt;编码之后的效果是%XX或者%uXXXX这种形式。&lt;br&gt;其中 &lt;u&gt;ASCII字母  数字  @*/+&lt;/u&gt;   这几个字符&lt;em&gt;&lt;strong&gt;不会&lt;/strong&gt;&lt;/em&gt;被编码，其余的都会。&lt;br&gt;最关键的是，当你需要对URL编码时，请忘记这个方法，这个方法是针对字符串使用的，不适用于URL。&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;二、最常用的encodeURI和encodeURIComponent&lt;/b&gt;&lt;/p&gt;&lt;br&gt;对URL编码是常见的事，所以这两个方法应该是实际中要特别注意的。&lt;br&gt;它们都是编码URL，唯一区别就是编码的字符范围，其中&lt;br&gt;encodeURI方法&lt;em&gt;&lt;strong&gt;不会&lt;/strong&gt;&lt;/em&gt;对下列字符编码  &lt;b&gt;&lt;u&gt;ASCII字母  数字  ~!@#$&amp;amp;*()=:/,;?+'&lt;/u&gt;&lt;/b&gt;&lt;br&gt;encodeURIComponent方法&lt;em&gt;&lt;strong&gt;不会&lt;/strong&gt;&lt;/em&gt;对下列字符编码 &lt;b&gt;&lt;u&gt;ASCII字母  数字  ~!*()'&lt;/u&gt;&lt;/b&gt;&lt;br&gt;所以encodeURIComponent比encodeURI编码的范围更大。&lt;br&gt;实际例子来说，encodeURIComponent会把 http://  编码成  http%3A%2F%2F 而encodeURI却不会。&lt;br&gt;&lt;br&gt;&lt;b&gt;三、最重要的，什么场合应该用什么方法&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;1、如果只是编码字符串，不和URL有半毛钱关系，那么用escape。&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;2、如果你需要编码整个URL，然后需要使用这个URL，那么用encodeURI。&lt;/strong&gt;&lt;br&gt;比如&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;encodeURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.cnblogs.com/season-huang/some other thing&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;编码后会变为&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.cnblogs.com/season-huang/some%20other%20thing&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;其中，空格被编码成了%20。但是如果你用了encodeURIComponent，那么结果变为&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http%3A%2F%2Fwww.cnblogs.com%2Fseason-huang%2Fsome%20other%20thing&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;看到了区别吗，连 &quot;/&quot; 都被编码了，整个URL已经没法用了。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3、当你需要编码URL中的参数的时候，那么encodeURIComponent是最好方法。&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.cnblogs.com/season-huang/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//param为参数&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;encodeURIComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.cnblogs.com?next=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//&quot;http://www.cnblogs.com?next=http%3A%2F%2Fwww.cnblogs.com%2Fseason-huang%2F&quot;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;看到了把，参数中的 &quot;/&quot; 可以编码，如果用encodeURI肯定要出问题，因为后面的/是需要编码的。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n写过一篇博客来记录它们的区别的，粘过来。 <b>一、escape和它们不是同一类</b> 简单来说，escape是对字符串(string)进行编码(而另外两种是对URL)，作用是让它们在所有电脑上可读。 编码之后的效果是%XX或者%uXXXX这种形式。 其中 <u>ASCII字母 数字 @*/+</u> 这几个字符<em><strong>…</strong></em>\n\n<a href=\"/question/21861899/answer/20300871\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/21861899/answer/20300871\">发布于 2013-11-24</a></p>\n\n",
    "link": "https://zhihu.com/question/21861899/answer/20300871"
  },
  {
    "question": "\n有哪些技术博客，最好全一点的?\n",
    "author": "嘉瑜",
    "content": "\n\n<textarea hidden class=\"content\">哼，骗我的收藏夹，不上当~ &lt;br&gt;&lt;br&gt;github是一个很好的blog平台，里面索引类的项目非常多，&lt;br&gt;开发者blog还是建议看国内外的大牛们的，比如Martin Fowler、国内的有阮一峰、廖雪峰等，开发团体的（比如淘宝前端，在github中可以找到很多大IT公司的org页面，你要有这个精力都可以去看看它们的committer，通常这些committer的界面都有个人blog信息），每个领域都有它的大牛blog，有些索引类总结得非常好，既然是大牛就是非常出名也很被认可的，所以要找到都不是难事；至于一些普通的个人技术blog良莠不齐，不太建议花太多时间去看，大部分都是读书笔记或练习笔记，看它们不如自己下载个ebook看看（我并非贬低这些blog，只是个人实在没有精力去分辨好坏）；&lt;br&gt;或者一些比如象infoQ、极客学院wiki、csdn知识库等这种已经被整理过的（否则的话，资源太多，你估计怕是看不过来）；&lt;br&gt;综合来讲有些索引聚合类的也不错，比如startup news, manong, hackernews,infoQ, 极客头条；&lt;br&gt;有些平台也不错，比如简书中的一些专题（可以找github有趣的收藏之类的keyword）、还有segmentfault中也有相当多的高质量索引分享；&lt;br&gt;手机端有猿已阅、掘金、开发者头条、csdn的知识库等app&lt;br&gt;&lt;br&gt;好吧，还是share一下收藏夹，这儿有点索引类的示例，如：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.jianshu.com/collection/e2a2a0073e2d&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GitHub上有趣的资源&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;索引类&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//segmentfault.com/a/1190000002804472&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;github上值得关注的前端项目&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/fouber/blog/issues/10&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端工程——基础篇 · Issue #10 · fouber/blog · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/qiu-deqing/FE-learning/blob/master/README.md&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;FE-learning/README.md at master · qiu-deqing/FE-learning&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/dypsilon/frontend-dev-bookmarks&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;dypsilon/frontend-dev-bookmarks&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/sindresorhus/awesome/blob/master/readme.md&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;awesome/readme.md at master · sindresorhus/awesome&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.stuq.org/subject/skill-map/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;StuQ技能图谱v0.1.1&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//yanhaijing.com/categories.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;分类&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/JacksonTian/fks&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JacksonTian/fks&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/airbnb/javascript&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;javascript-style-guide&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/hawx1993/github-FE-project&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;hawx1993/github-FE-project · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jikeytang/front-end-collect&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;front-end-collect&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//wiki.jikexueyuan.com/project/fend_note/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端开发笔记本-极客学院Wiki&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;b&gt;以下放毒，聚合及平台类：&lt;/b&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//geek.csdn.net/hotest&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;最新最热 - 极客头条 - CSDN.NET&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.manong.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;技术、产品、营销 - 码农IO官方博客&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//weekly.manong.io/issues/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;往期回顾_码农周刊&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//toutiao.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;开发者头条 - 开发者的首选阅读分享平台&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//news.dbanotes.net/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Startup News&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.infoq.com/cn/dockers/%3Futm_source%3Dinfoq%26utm_medium%3Dheader_graybar%26utm_campaign%3Dtopic_clk&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;InfoQ&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//segmentfault.com/blogs&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;推荐的文章 - SegmentFault&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.jianshu.com/collections&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;专题广场 - 简书&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//bluereader.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;深蓝阅读&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//medium.com/keep-learning-keep-growing/365-awesome-free-resources-for-entrepreneur-business-and-life-a88a79c6be59&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;365+ Awesome Free Resources for Entrepreneur, Business and Life — Personal Growth — Medium&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.v2ex.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;V2EX&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.reddit.com/r/webdev/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;webdev: reddit for web developers&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//forum.memect.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;好东西论坛 | 好东西传送门的论坛&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;资源收集对我们来说永远不是最难的事，爱收集和分享资源的人太多（谢谢前辈们），所以我就不要再花精力去收集了。&lt;br&gt;&lt;br&gt;BTW，简书和Medium的打尝模式不错，知乎啥时候能引入。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n哼，骗我的收藏夹，不上当~ github是一个很好的blog平台，里面索引类的项目非常多， 开发者blog还是建议看国内外的大牛们的，比如Martin Fowler、国内的有阮一峰、廖雪峰等，开发团体的（比如淘宝前端，在github中可以找到很多大IT公司的org页面，你要有这…\n\n<a href=\"/question/37116938/answer/72438874\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-11-16\" target=\"_blank\" href=\"/question/37116938/answer/72438874\">编辑于 2015-11-16</a></p>\n\n",
    "link": "https://zhihu.com/question/37116938/answer/72438874"
  },
  {
    "question": "\nCocos2dx+lua合适还是Cocos2dx+js合适?\n",
    "author": "左文",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;&lt;b&gt;纯属个人观点&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;1  Unity3d支持c#和js开发，cocos2d-x支持c++、js、lua开发。看到了么，当前最流行的两大手游引擎都有js，而且Unity3d和Cocos2d-x官方好像都更偏重js，从这一点看，js未来前景很大；&lt;/p&gt;&lt;br&gt;&lt;br&gt;2 如今，大家都是高配置手机的时代，js运行效率无需过多担心；&lt;br&gt;&lt;br&gt;3 js是真正的编写一次，处处运行；假如未来html5大行其道，选择js刚好可以顺势而起；&lt;br&gt;&lt;br&gt;&lt;p&gt;4 另外一点，开发工具IDE的好坏和效率，cocos2d-js有不错集成开发工具&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CocosEditor&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，lua这块倒是没发现顺手的ide；&lt;/p&gt;&lt;br&gt;5 完善的cocos2d-js学习资料和教程，拿去吧&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/baf8423a2d074f5475639ad92b4b4ee6_b.jpg&quot; data-rawwidth=&quot;1364&quot; data-rawheight=&quot;738&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1364&quot; data-original=&quot;https://pic3.zhimg.com/baf8423a2d074f5475639ad92b4b4ee6_r.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/765282dd955615781212934f058aba5a_b.jpg&quot; data-rawwidth=&quot;1355&quot; data-rawheight=&quot;706&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1355&quot; data-original=&quot;https://pic3.zhimg.com/765282dd955615781212934f058aba5a_r.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/0ab40199df16155dee739e43d9b366f2_b.jpg&quot; data-rawwidth=&quot;1360&quot; data-rawheight=&quot;726&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1360&quot; data-original=&quot;https://pic3.zhimg.com/0ab40199df16155dee739e43d9b366f2_r.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/5994e6b7a39277102b4afb9304252733_b.jpg&quot; data-rawwidth=&quot;1358&quot; data-rawheight=&quot;728&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1358&quot; data-original=&quot;https://pic4.zhimg.com/5994e6b7a39277102b4afb9304252733_r.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/abdee6f10d30cda1edb6aff4c8d07b10_b.jpg&quot; data-rawwidth=&quot;1361&quot; data-rawheight=&quot;727&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1361&quot; data-original=&quot;https://pic1.zhimg.com/abdee6f10d30cda1edb6aff4c8d07b10_r.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/6fd502bb7517157be3293f9417c10785_b.jpg&quot; data-rawwidth=&quot;1358&quot; data-rawheight=&quot;728&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1358&quot; data-original=&quot;https://pic2.zhimg.com/6fd502bb7517157be3293f9417c10785_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;博文系列&lt;/b&gt;&lt;br&gt;&lt;br&gt;——————————————游戏基础教程篇—————————————&lt;br&gt;&lt;br&gt;&lt;br&gt;一 cocos2d-x editor工具下载和基础教程JS篇：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18446119&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;一 手游开发神器 cocos2d-x editor初识&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18451107&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;二 手游开发神器 cocos2d-x editor工具下载和安装配置&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18455569&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;三 手游开发神器 cocos2d-x editor 之基础工具 intellij idea&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18701179&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;四 手游开发神器 cocos2d-x editor 游戏框架介绍&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18711473&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;五 手游开发神器 cocos2d-x editor 之贴图（TexturePacker）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18712819&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;六 手游开发神器 cocos2d-x editor 之场景切换&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18732031&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;七 手游开发神器 cocos2d-x editor 之图片字体（LabelBMFont）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18733223&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;八 手游开发神器 cocos2d-x editor 之动画和帧动画&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18735963&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;九 手游开发神器 cocos2d-x editor 之粒子效果（ParticleEditor）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18765359&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十 手游开发神器 cocos2d-x editor 之触摸事件&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18766705&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十一 手游开发神器 cocos2d-x editor 之音乐和音效&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18767489&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十二 手游开发神器 cocos2d-x editor 之游戏暂停悬浮层&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18769191&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十三 手游开发神器 cocos2d-x editor 之选关滑动界面（ScrollView）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/18770755&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十四 手游开发神器 cocos2d-x editor 之串联游戏流程&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19176091&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十五 手游开发神器cocos2d-x editor 之移植到android平台（打包成apk）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19269757&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十六 手游开发神器cocos2d-x editor 之移植到html5网页浏览器&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.makeapp.co/%3Fp%3D417&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;十七 手游开发神器cocos2d-x editor 之例子手册&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;二 cocos2d-x editor工具下载和基础教程Lua篇：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.makeapp.co/%3Fp%3D329&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;一 手游开发神器 cocos2d-x editor for lua 之配置lua环境和运行hellolua&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;三 cocos2d-x editor简介视频：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.makeapp.co/%3Fp%3D115&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;简单介绍了工具的基本功能和使用方法&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;——————————————游戏项目实战篇—————————————&lt;br&gt;&lt;br&gt;&lt;br&gt;四 cocos2d-x editor 项目实战--Flappy Bird (休闲益智类)&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19071961&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;flappy bird游戏源代码揭秘和下载&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19176091&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;flappy bird游戏源代码揭秘和下载后续---移植到android真机上&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19269757&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;flappy bird游戏源代码揭秘和下载后续---移植到html5网页浏览器&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/20258869&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;flappy bird游戏源代码揭秘和下载后续---日进5万美元的秘诀AdMob广告 &lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;flappy bird游戏源代码揭秘和下载后续---移植到苹果ios上 ——推迟——&lt;br&gt;&lt;br&gt;&lt;br&gt;五 cocos2d-x editor 项目实战--PopStar （消除类）&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19981961&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;PopStar(消灭星星)游戏源代码下载、分析及跨平台移植---第一篇（界面）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19981961&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;PopStar(消灭星星)游戏源代码下载、分析及跨平台移植---第一篇（界面） &lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/19982015&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;PopStar(消灭星星)游戏源代码下载、分析及跨平台移植---第二篇（算法）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/22580263&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;PopStar(消灭星星)游戏源代码下载、分析及跨平台移植---第三篇（分数）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/22583129&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;PopStar(消灭星星)游戏源代码下载、分析及跨平台移植---第四篇（关卡）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;PopStar(消灭星星)游戏源代码下载、分析及跨平台移植---第五篇（移植） ——将写——&lt;/p&gt;&lt;br&gt;&lt;p&gt;六 cocos2d-x editor 项目实战--FruitNinja （切东西类）&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/touchsnow/article/details/22585403&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Fruit Ninja(水果忍者)游戏源代码下载、分析（上）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Fruit Ninja(水果忍者)游戏源代码下载、分析（中）&lt;br&gt;&lt;/p&gt;&lt;p&gt;Fruit Ninja(水果忍者)游戏源代码下载、分析（下）&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;——————————————整理项目—————————————&lt;br&gt;&lt;br&gt;七 cocos2d-x editor 项目实战--MoonWarriors （飞行射击类）&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.makeapp.co/%3Fp%3D407&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;MoonWarriors （月亮战神）游戏源代码下载&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ——代码先发布——&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;八 cocos2d-x editor 项目实战--FruitAttact（类粉碎糖果传奇消除游戏）&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.makeapp.co/%3Fp%3D412&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;FruitAttact (水果消消看) 游戏源代码下载&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ——代码先发布——&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;九 cocos2d-x editor 项目实战--TestsJavascript&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.makeapp.co/%3Fp%3D417&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;TestsJavascript（官方API例子手册）源代码下载&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ——代码先发布——&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;——————————————游戏系列计划—————————————&lt;/p&gt;&lt;br&gt;十 cocos2d-x editor 项目实战--Doodle Jump （跳跃类）&lt;br&gt;Doodle Jump （涂鸦跳跃）游戏源代码下载、分析 ——会写——&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;十一 cocos2d-x editor 项目实战--Ski Safari （跑酷类）&lt;br&gt;Ski Safari（滑雪大冒险）游戏源代码下载、分析 ——会写——</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic3.zhimg.com/baf8423a2d074f5475639ad92b4b4ee6_200x112.jpg\" data-rawwidth=\"1364\" data-rawheight=\"738\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic3.zhimg.com/baf8423a2d074f5475639ad92b4b4ee6_r.jpg\">\n<b>纯属个人观点</b> 1 Unity3d支持c#和js开发，cocos2d-x支持c++、js、lua开发。看到了么，当前最流行的两大手游引擎都有js，而且Unity3d和Cocos2d-x官方好像都更偏重js，从这一点看，js未来前景很大； 2 如今，大家都是高配置手机的时代，js运行效率无需过多担心…\n\n<a href=\"/question/21130385/answer/21789568\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-01-20\" target=\"_blank\" href=\"/question/21130385/answer/21789568\">编辑于 2014-05-29</a></p>\n\n",
    "link": "https://zhihu.com/question/21130385/answer/21789568"
  },
  {
    "question": "\n在手持设备上使用 touchstart 事件代替 click 事件是不是个好主意？\n",
    "author": "佑界",
    "content": "\n\n<textarea hidden class=\"content\">在手持设备的浏览器上（本处主要指代iOS和Android系统上的webkit内核的浏览器和嵌入在应用程序里面的webview），由于两次连续“轻触”是“放大”的操作（即使你两次轻触的是一个链接或一个有click事件监听器的元素），所以在第一次被“轻触”后，浏览器需要先等一段时间，看看有没有所谓的“连续的第二次轻触”。如果有，则进行“放大”操作。没有，才敢放心地认为用户不是要放大，而是需要“click”至此才敢触发click事件，导致“短按（手指接触屏幕到离开屏幕的时间比较短）”的click事件通常约会延迟300ms左右。&lt;img src=&quot;https://pic1.zhimg.com/32e83d90544535d2ea14880ebee9f500_b.jpg&quot; data-rawwidth=&quot;500&quot; data-rawheight=&quot;325&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;500&quot; data-original=&quot;https://pic1.zhimg.com/32e83d90544535d2ea14880ebee9f500_r.jpg&quot;&gt;采用touchstart代替click是比较初级的解决方案，首先，touchstart和click的触发条件就有区别，对于手持设备的浏览器：&lt;br&gt;1.touchstart：在这个dom（或冒泡到这个dom，这当然是废话）上手指触摸开始即能触发&lt;br&gt;2.click：在这个dom（或冒泡到这个dom，这当然是废话）上手指触摸开始，且手指未曾在屏幕上移动（某些浏览器允许移动一个非常小的位移值），且在这个在这个dom上手指离开屏幕，且触摸和离开屏幕之间的间隔时间较短（某些浏览器不检测间隔时间，也会触发click）才能触发&lt;br&gt;于是我们可以看到，完全用touchstart代替是不太可取的。&lt;br&gt;根据上面的区别，又要规避click在移动手持设备上带来的延迟，很容易有了模拟的办法，大致思路是：&lt;br&gt;在touchstart、touchend时记录时间、手指位置，在touchend时进行比较，如果手指位置为同一位置（或允许移动一个非常小的位移值）且时间间隔较短（一般认为是200ms），且过程中未曾触发过touchmove，即可认为触发了手持设备上的“click”，一般称它为“tap”&lt;br&gt;zepto已经封装了上述tap：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/madrobby/zepto/blob/master/src/touch.js%23files&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;zepto/src/touch.js at master 路 madrobby/zepto 路 GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;另外（由下面的&lt;a data-hash=&quot;27916ce8779140d760994f6c3f1c1749&quot; href=&quot;//www.zhihu.com/people/27916ce8779140d760994f6c3f1c1749&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@张辰&quot; data-hovercard=&quot;p$b$27916ce8779140d760994f6c3f1c1749&quot;&gt;@张辰&lt;/a&gt; 同学的回答，）还可以直接使用Fastclick：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/ftlabs/fastclick&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;ftlabs/fastclick · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;来模拟点击，也不会有延迟，目前我已经迁移到此方案。&lt;br&gt;更新：&lt;br&gt;&lt;ul&gt;&lt;li&gt;zepto先前的实现方案有一些小问题，某些情况下会导致点透（&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.youyo.name/archives/zepto-tap-click-through-research.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;blog.youyo.name/archive&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;s/zepto-tap-click-through-research.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;），现在最新版的已经修复了这个问题。&lt;br&gt;&lt;/li&gt;&lt;li&gt;在安卓4.1+的chrome浏览器上，如果在meta viewport中指定页面不可缩放，则click没有上述300ms左右的延迟&lt;/li&gt;&lt;/ul&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic1.zhimg.com/32e83d90544535d2ea14880ebee9f500_200x112.jpg\" data-rawwidth=\"500\" data-rawheight=\"325\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic1.zhimg.com/32e83d90544535d2ea14880ebee9f500_r.jpg\">\n在手持设备的浏览器上（本处主要指代iOS和Android系统上的webkit内核的浏览器和嵌入在应用程序里面的webview），由于两次连续“轻触”是“放大”的操作（即使你两次轻触的是一个链接或一个有click事件监听器的元素），所以在第一次被“轻触”后，浏览器需要…\n\n<a href=\"/question/20702822/answer/15992377\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2013-01-21\" target=\"_blank\" href=\"/question/20702822/answer/15992377\">编辑于 2013-12-17</a></p>\n\n",
    "link": "https://zhihu.com/question/20702822/answer/15992377"
  },
  {
    "question": "\nJSONP 的工作原理是什么？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">很简单，就是利用&amp;lt;script&amp;gt;标签没有跨域限制的“漏洞”（历史遗迹啊）来达到与第三方通讯的目的。当需要通讯时，本站脚本创建一个&amp;lt;script&amp;gt;元素，地址指向第三方的API网址，形如：    &lt;br&gt; &amp;lt;script src=&quot;http://www.example.net/api?param1=1&amp;amp;param2=2&quot;&amp;gt;&amp;lt;/script&amp;gt;    &lt;br&gt; 并提供一个回调函数来接收数据（函数名可约定，或通过地址参数传递）。    &lt;br&gt; 第三方产生的响应为json数据的包装（故称之为jsonp，即json padding），形如：    &lt;br&gt; callback({&quot;name&quot;:&quot;hax&quot;,&quot;gender&quot;:&quot;Male&quot;})    &lt;br&gt; 这样浏览器会调用callback函数，并传递解析后json对象作为参数。本站脚本可在callback函数里处理所传入的数据。   &lt;br&gt; 补充：“历史遗迹”的意思就是，如果在今天重新设计的话，也许就不会允许这样简单的跨域了嘿，比如可能像XHR一样按照CORS规范要求服务器发送特定的http头。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n很简单，就是利用&lt;script&gt;标签没有跨域限制的“漏洞”（历史遗迹啊）来达到与第三方通讯的目的。当需要通讯时，本站脚本创建一个&lt;script&gt;元素，地址指向第三方的API网址，形如： &lt;script src=\"http://www.example.net/api?param1=1&amp;param2=2\"&gt;&lt;/script&gt; 并…\n\n<a href=\"/question/19966531/answer/13502030\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2011-12-13\" target=\"_blank\" href=\"/question/19966531/answer/13502030\">编辑于 2011-12-13</a></p>\n\n",
    "link": "https://zhihu.com/question/19966531/answer/13502030"
  },
  {
    "question": "\nJavaScript 函数式编程存在性能问题么？\n",
    "author": "RednaxelaFX",
    "content": "\n\n<textarea hidden class=\"content\">其实有很多原本不那么倾向函数式风格的语言在转向流行函数式风格的编码方式后，其&lt;b&gt;主流实现&lt;/b&gt;对新风格代码的优化都跟不上趟。C# 3也是，Java 8也是，JavaScript也不例外。&lt;br&gt;&lt;br&gt;有一点很有趣的是，这些语言的&lt;b&gt;主流实现中&lt;/b&gt;的编译器都没能对函数式风格的代码做充分的优化。特别是fusion系的优化。像题主给出的那种map-reduce用法的例子，如果编译器自身能充分内联并把map()和reduce()自动做fusion，那题主就不会跑来问这个问题了…&lt;br&gt;&lt;br&gt;但话说回来，题主的问题描述中，&lt;br&gt;&lt;blockquote&gt;但是先map再reduce把数据遍历了两次&lt;/blockquote&gt;JavaScript的 Array.prototype.map() 函数是设计成eager方式的，确实会“单独遍历一遍”输入的数组。&lt;br&gt;&lt;br&gt;但是对应这个 map() 看，像C#的 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//msdn.microsoft.com/en-us/library/bb548891.aspx&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Enumerable.Select()&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 、Java 8的 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Stream.map()&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ，这些都被设计成lazy语义的，只有当有eager操作要求它们求值的时候它们才会去求值。所以在C#中 Enumerable.Select() + Enumerable.Aggregate() 、Java 8中 Stream.map() + Stream.reduce() ，其实都只会遍历原始输入1遍——由eager的reduce()去驱动lazy的map()做遍历。并不存在题主所想像的“遍历两遍”的问题。&lt;br&gt;&lt;br&gt;JavaScript要是用generator来重新设计个 Array.prototype.map() 的对应物的话也可以达到一样的“只遍历一遍”的效果。&lt;br&gt;可惜就是目前主流的JavaScript引擎对generator的优化都还很弱…就更指望不上它们正确实现fusion系优化了。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n其实有很多原本不那么倾向函数式风格的语言在转向流行函数式风格的编码方式后，其<b>主流实现</b>对新风格代码的优化都跟不上趟。C# 3也是，Java 8也是，JavaScript也不例外。 有一点很有趣的是，这些语言的<b>主流实现中</b>的编译器都没能对函数式风格的代码做充分的优…\n\n<a href=\"/question/54637225/answer/140615087\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/54637225/answer/140615087\">发布于 2017-01-12</a></p>\n\n",
    "link": "https://zhihu.com/question/54637225/answer/140615087"
  },
  {
    "question": "\n知乎响应这么慢是因为使用了 Python 语言吗？\n",
    "author": "赵云涛",
    "content": "\n\n<textarea hidden class=\"content\">决定网站性能的主要因素是架构，然后是代码水平，最后才是语言</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n决定网站性能的主要因素是架构，然后是代码水平，最后才是语言\n\n<a href=\"/question/54522524/answer/139767725\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/54522524/answer/139767725\">发布于 2017-01-08</a></p>\n\n",
    "link": "https://zhihu.com/question/54522524/answer/139767725"
  },
  {
    "question": "\n中国的网站为什么做的那么丑，特别是一些gov，连一些非洲的网站都做的很好？\n",
    "author": "COIN",
    "content": "\n\n<textarea hidden class=\"content\">泻药&lt;br&gt;我接触过gov的项目，我所知道的原因大约有三吧。&lt;br&gt;其一，项目全是外包，层层克扣之后到外包的钱少的可怜，再加上外包团队的技术水准偏低，所以就没有细节上的考量，而且验收的人也不在乎。&lt;br&gt;&lt;br&gt;其二，他们不在乎用户。我接触过某市准备做小区电商，设计师设计出来一套UI之后，gov的负责人看了之后发了一个gov的网站过来，说按照这个抄一下，改一下⋯⋯设计师写设计说明写了一大堆还去现场展示为什么要这样设计，他们依然坚持抄。我实在不懂他们为什么会这样，毕竟不是一个阶层的人。&lt;br&gt;&lt;br&gt;其三，没有市场经济驱动的东西必然都是垃圾。没有竞争，没有业绩考核，不在乎盈利与否，只是为了找点事做，自然是虎头蛇尾，甚至还有可能是为了洗什么⋯⋯&lt;br&gt;&lt;br&gt;自此之后，凡事有gov背景或项目的公司。我一律不去。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n泻药 我接触过gov的项目，我所知道的原因大约有三吧。 其一，项目全是外包，层层克扣之后到外包的钱少的可怜，再加上外包团队的技术水准偏低，所以就没有细节上的考量，而且验收的人也不在乎。 其二，他们不在乎用户。我接触过某市准备做小区电商，设计师设…\n\n<a href=\"/question/46379339/answer/104447363\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/46379339/answer/104447363\">发布于 2016-06-05</a></p>\n\n",
    "link": "https://zhihu.com/question/46379339/answer/104447363"
  },
  {
    "question": "\n产品经理如何在设计产品时避免给开发挖坑?\n",
    "author": "shotgun",
    "content": "\n\n<textarea hidden class=\"content\">说实话，这个要求挺高的。&lt;br&gt;&lt;br&gt;要做到这一点，首先产品经理要有架构师的能力，这样才能最大程度的考虑到重用、扩展性和灵活性。&lt;br&gt;&lt;br&gt;其次产品经理还需要有很强的市场前瞻性，所以可以预知未来会发生什么样的变化，事先做好准备。&lt;br&gt;&lt;br&gt;然后产品经理还应该有财务总监的能力，就能计算出投入产出比，找到最优的投资方案。&lt;br&gt;&lt;br&gt;那这样的产品经理薪水需要多少呢？多少也不行，有这些能力人家早就自己去创业了。&lt;br&gt;&lt;br&gt;以上，大部分时候产品经理都是在替老板背锅而已，很多公司里，真正的产品经理的权力，其实在老板手上。&lt;br&gt;&lt;br&gt;转一篇十几年经验产品经理的文章—《醒醒吧，信息安全的产品经理们》&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzIzMTAzNzUxMQ%3D%3D%26mid%3D2652873615%26idx%3D1%26sn%3Ddd993d9ef7e461d213acec297f07cae1%26scene%3D0%23wechat_redirect&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;mp.weixin.qq.com/s?&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;__biz=MzIzMTAzNzUxMQ==&amp;amp;mid=2652873615&amp;amp;idx=1&amp;amp;sn=dd993d9ef7e461d213acec297f07cae1&amp;amp;scene=0#wechat_redirect&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n说实话，这个要求挺高的。 要做到这一点，首先产品经理要有架构师的能力，这样才能最大程度的考虑到重用、扩展性和灵活性。 其次产品经理还需要有很强的市场前瞻性，所以可以预知未来会发生什么样的变化，事先做好准备。 然后产品经理还应该有财务总监的能…\n\n<a href=\"/question/41618379/answer/97103278\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-04-25\" target=\"_blank\" href=\"/question/41618379/answer/97103278\">编辑于 2016-04-27</a></p>\n\n",
    "link": "https://zhihu.com/question/41618379/answer/97103278"
  },
  {
    "question": "\njs 可以跨域得到 cookie？QQ 邮箱被一封邮件黑了？\n",
    "author": "宁合军",
    "content": "\n\n<textarea hidden class=\"content\">&lt;b&gt;这个是xss，不是跨域。url参数直接原文在html里面展示了，导致页面代码可以被传入参数修改。&lt;/b&gt;&lt;br&gt;虽然是做后台开发，但是我几年前刚入职时也写过一段时间页面。我很羞愧地告诉大家，xss、csrf之类的漏洞，我写出过不下20回。大部分漏洞都被安全平台扫出来了，极少部分发到外网，被发现，留下了心理阴影。就算今天来写，我也胆战心惊，怕一不小心就会写出漏洞。&lt;br&gt;为什么？因为腾讯的生产工具太落后了。&lt;br&gt;腾讯的网站，基本都是cgi裸写出来的。腾讯网站上的每个页面，其实都是用printf,cout,或out.print输出来的，模板引擎之类有性能开销的东西，腾讯基本是不考虑使用的。那么多页面，都是手工拼出来，还要记得每个参数都转义一下，难免有一两个参数漏掉了，于是xss漏洞就出来了。&lt;br&gt;一些人认为腾讯作为大厂，技术还不至于这么烂吧？其实腾讯崇尚的技术，都是高性能、高并发、大数据、分布式之类的。你要是写了个模板引擎，说可以提升开发效率，避免xss漏洞，去面试T3估计是难以通过的。&lt;br&gt;&lt;b&gt;由于分工明确，搞安全的专门搞安全，写代码的专门写代码，导致很多普通程序员其实是没有什么安全知识的。而写页面这种低端工作，就是专门交给应届生等新手来写的。新手没有被xss搞过，觉得写页面毫无难度，于是漏洞自然就更多了。&lt;/b&gt;&lt;br&gt;由于新手写出的xss漏洞实在太多，老手写出的xss也很多，于是安全平台部搞了个安全扫描网站。但是扫描它也得知道页面有哪些参数，于是安全平台部搞了一个客户端安装在各开发同学电脑上，收集访问过的url，用于安全扫描。但是这种泄漏个人隐私的事情，显然是得不到程序员的支持的。于是没有推广成功。安全平台部又想从开发网路由器上去捞日志，但是这个路由器是属于另一个部门的，而且不管是领导还是员工，大家都有访问敏感网站的需求，于是注定了这条路也不能成功。安全平台部又想从各idc机器上去捞访问日志，但是各机器也是属于不同部门的，注定也很难成功。后来安全平台部发现，漏洞反正都是你们自己的事，于是他也不管了，让你自己主动去扫描。&lt;br&gt;我当年的部门还是比较注意安全的，在发布时主动提交url到安全平台进行扫描。安全平台从这个url出发，使用爬虫技术，把所有的url获取出来，都扫一下。然而也难免漏网之鱼，那些爬不到的，或是爬到的参数不足的，漏洞是不一定能扫出来的。&lt;br&gt;&lt;b&gt;所以腾讯的网站，漏洞也会有很多的，而且你反馈漏洞给腾讯安全，他们还不一定能立即找到对应的负责人，所以修复漏洞也是要很久的。&lt;/b&gt;&lt;br&gt;===================================================================&lt;br&gt;个人观点，不代表任何公司立场。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n<b>这个是xss，不是跨域。url参数直接原文在html里面展示了，导致页面代码可以被传入参数修改。</b> 虽然是做后台开发，但是我几年前刚入职时也写过一段时间页面。我很羞愧地告诉大家，xss、csrf之类的漏洞，我写出过不下20回。大部分漏洞都被安全平台扫出来了，极…\n\n<a href=\"/question/39019943/answer/79301863\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/39019943/answer/79301863\">发布于 2015-12-30</a></p>\n\n",
    "link": "https://zhihu.com/question/39019943/answer/79301863"
  },
  {
    "question": "\nReactJS 真的好吗？\n",
    "author": "徐飞",
    "content": "\n\n<textarea hidden class=\"content\">刚看到这个问题的时候就想回答，但前后几个月才渐渐把思路组织好，昨天在平安那边的技术分享上，讲了这个主题，文本内容地址如下：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/xufei/blog/issues/22&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Web应用组件化的权衡 · Issue #22 · xufei/blog · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;幻灯片如下：&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//xufei.github.io/slides/2015/components%2520and%2520templates.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;xufei.github.io/slides/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;2015/components%20and%20templates.html&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;我的主要内容其实不是用来当做对“React真的好吗”这个话题的回答，而是针对React或者其他框架所能够带给我们的组件化开发方式的一些思考，以及这些组件化开发方式可能会对我们的工程应用造成什么样的影响和改变，组件化是否必然好，在工程实践中有怎样的权衡。&lt;br&gt;&lt;br&gt;我的观点是，大面积的模板是有它的意义的，全组件化体系的工程负担是比较重的，在Web应用领域全面组件化还是一个比较长期的路，而且Web体系当前自身的一些特性，也对全组件化有一些制约。&lt;br&gt;&lt;br&gt;&lt;a data-hash=&quot;d43e4664142900b2db06b5f229c91061&quot; href=&quot;//www.zhihu.com/people/d43e4664142900b2db06b5f229c91061&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@Saviio&quot; data-tip=&quot;p$b$d43e4664142900b2db06b5f229c91061&quot; data-hovercard=&quot;p$b$d43e4664142900b2db06b5f229c91061&quot;&gt;@Saviio&lt;/a&gt; 的答案中，引用了一个链接：&lt;a href=&quot;http://www.zhihu.com/question/22426434&quot; class=&quot;internal&quot;&gt;还要多少年, 前端开发才能像客户端开发那样轻松？ - HTML5&lt;/a&gt;，这里面有个回答是我的，但我要说的是 &lt;a data-hash=&quot;c265de1dfd836bf0f644c8e0123e53a4&quot; href=&quot;//www.zhihu.com/people/c265de1dfd836bf0f644c8e0123e53a4&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@Johnny Wu&quot; data-tip=&quot;p$b$c265de1dfd836bf0f644c8e0123e53a4&quot; data-hovercard=&quot;p$b$c265de1dfd836bf0f644c8e0123e53a4&quot;&gt;@Johnny Wu&lt;/a&gt; 当时的那个回答&lt;a href=&quot;http://www.zhihu.com/question/22426434/answer/33395263&quot; class=&quot;internal&quot;&gt;还要多少年, 前端开发才能像客户端开发那样轻松？ - Johnny Wu 的回答&lt;/a&gt;，这个回答非常好，组件化的实施也做得好，但我们需要认识到，他这个项目有其特殊性，目前存在的绝大部分Web应用并不是这个形态，这世界上大部分东西都不过是普通的东西，对这些东西来说，把各方面门槛提高太高并不一定是好事，正好比我们现在有能加工0.1毫米精度的机床，但在加工大部分产品的时候，只会使用1毫米精度的，因为绝大部分产品并不需要这样的精度，提高不必要的精度可能会导致成本上升，对人员技能的要求也大幅提高。&lt;br&gt;&lt;br&gt;我们看到ReactJS本身的定位还是一个相对大众化的框架，它并不期望自己会成为小众，一切组件化框架都不会期望自己成为小众，那么，为它们推出组件化的工程实施方案的时候，是不是需要存在兼顾高端和低端产品、人群的考虑？&lt;br&gt;&lt;br&gt;所以，我提出，在大部分Web应用中，只适合使用“半组件化”，也就是基础部分组件化，业务上层适当松散的方式，就是基于这些权衡。&lt;br&gt;&lt;br&gt;在移动端，适合全组件化的产品比重会较高，因为方寸之地，组件树一般不会特别复杂，工程代价不会很高，对生产力的提高比较明显。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n刚看到这个问题的时候就想回答，但前后几个月才渐渐把思路组织好，昨天在平安那边的技术分享上，讲了这个主题，文本内容地址如下： <a href=\"//link.zhihu.com/?target=https%3A//github.com/xufei/blog/issues/22\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Web应用组件化的权衡 · Issue #22 · xufei/blog · GitHub<i class=\"icon-external\"></i></a> 幻灯片如下： <a href=\"//link.zhihu.com/?target=http%3A//xufei.github.io/slides/2015/components%2520and%2520templates.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">xufei.github.io/slides/</span><span class=\"invisible\">2015/components%20and%20templates.html</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a> 我的主要内容其实不是用来…\n\n<a href=\"/question/33631170/answer/68363623\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-10-19\" target=\"_blank\" href=\"/question/33631170/answer/68363623\">编辑于 2015-10-19</a></p>\n\n",
    "link": "https://zhihu.com/question/33631170/answer/68363623"
  },
  {
    "question": "\n前端新人愿意以付出免费劳动力为代价，在职场上获得提升，可行吗？\n",
    "author": "Nimo True",
    "content": "\n\n<textarea hidden class=\"content\">&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/nimojs/learn-js&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;nimojs/learn-js · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;blockquote&gt;一个 JavaScript 互助学习的项目。接受组件开发的挑战，提交代码让他人评论你的代码以提高。&lt;br&gt;&lt;/blockquote&gt;互助学习吧，非工作关系一对一是不可能的。收钱别人都不一定愿意。&lt;br&gt;如果你在学习过程中遇到问题，可以留言到 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/nimojs/learn-js/issues/new&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/nimojs/learn&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;-js/issues/new&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/baidu-ife/ife&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;baidu-ife/ife · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 百度前端技术学院（&lt;b&gt;强烈推荐&lt;/b&gt;）&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//javascript.ruanyifeng.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaScript 标准参考教程（alpha）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;blockquote&gt;阮一峰的教程理解起来比常见的教程轻松很多&lt;/blockquote&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n<a href=\"//link.zhihu.com/?target=https%3A//github.com/nimojs/learn-js\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">nimojs/learn-js · GitHub<i class=\"icon-external\"></i></a>一个 JavaScript 互助学习的项目。接受组件开发的挑战，提交代码让他人评论你的代码以提高。 互助学习吧，非工作关系一对一是不可能的。收钱别人都不一定愿意。 如果你在学习过程中遇到问题，可以留言到 <a href=\"//link.zhihu.com/?target=https%3A//github.com/nimojs/learn-js/issues/new\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/nimojs/learn</span><span class=\"invisible\">-js/issues/new</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a> <a href=\"//link.zhihu.com/?target=https%3A//github.com/baidu-ife/ife\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">bai…<i class=\"icon-external\"></i></a>\n\n<a href=\"/question/30387440/answer/48162698\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-05-18\" target=\"_blank\" href=\"/question/30387440/answer/48162698\">编辑于 2015-07-10</a></p>\n\n",
    "link": "https://zhihu.com/question/30387440/answer/48162698"
  },
  {
    "question": "\n如何看待《HTML5 定稿：手机 App 三年内将彻底消失？》\n",
    "author": "vczh",
    "content": "\n\n<textarea hidden class=\"content\">这句话20年前就在说了，只是当时不叫HTML5，敌人也不叫App。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n这句话20年前就在说了，只是当时不叫HTML5，敌人也不叫App。\n\n<a href=\"/question/28672128/answer/41696608\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/28672128/answer/41696608\">发布于 2015-03-11</a></p>\n\n",
    "link": "https://zhihu.com/question/28672128/answer/41696608"
  },
  {
    "question": "\n怎样合理地使用 Ajax ？过度使用 Ajax 会有哪些弊端？\n",
    "author": "周卓卓",
    "content": "\n\n<textarea hidden class=\"content\">时代变了。在 Single Page WebApp 满地跑的年代，原最高票提到的经验已经不适用。&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;1. 页面上首次显示的内容尽量不要用 Ajax，显示更多（或换页）的时候再用&lt;br&gt;&lt;/blockquote&gt;该方案其实是对面向内容的传统 Web 页面的一种优化。对于强调沉浸体验的 WebApp 而言，所有数据都可以使用相同的方式获取并且渲染到页面。&lt;br&gt;&lt;br&gt;比如说 Google Docs &lt;a href=&quot;//link.zhihu.com/?target=http%3A//docs.google.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://docs.google.com&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 和 Dropbox Paper &lt;a href=&quot;//link.zhihu.com/?target=http%3A//paper.dropbox.com&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;paper.dropbox.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 这样的 WebApp，不需要也不应该去强求数据跟随 HTML 一起加载。&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;2. 切换页面的时候不用要 Ajax&lt;/blockquote&gt;对于现代 Web 页面而言，切换页面时是可以保持 URL 的语义化的（无论使用hashHistory 还是 browserHistory）。&lt;br&gt;&lt;br&gt;即使是面向内容阅读的网站，比如 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//Medium.com&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;Medium.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，无论是翻页还是导航切换，都使用 Ajax 去异步加载。&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;题主的问题可以重新解读为：&lt;br&gt;&lt;ol&gt;&lt;li&gt; 什么时候应该用 Ajax&lt;br&gt;&lt;/li&gt;&lt;li&gt; 如何应对使用 Ajax 技术导致的程序复杂性&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;&lt;b&gt;什么时候应该用 Ajax &lt;/b&gt;&lt;br&gt;先看看 Ajax 和传统 Server Centri Web 架构的区别。&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/a4204a177c938afd7e32975832fbdd05_b.png&quot; data-rawwidth=&quot;800&quot; data-rawheight=&quot;786&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;800&quot; data-original=&quot;https://pic2.zhimg.com/a4204a177c938afd7e32975832fbdd05_r.png&quot;&gt;&lt;br&gt;Ajax本质上是一种浏览器端技术，从图中可以看出，传统 Server Centri Web 架构的最大区别是将大量业务逻辑从服务器端移到浏览器。&lt;br&gt;&lt;br&gt;好处是当数据发生变更时，只需要重新渲染相关的 HTML，而不需要加载整个页面。坏处是使用大量 Ajax 的项目与其说是B/S架构，不如说是C/S架构，自然也具备C/S架构的特点，在浏览器环境下，某些特点会成为缺陷。&lt;br&gt;&lt;br&gt;比如说 Ajax 要求业务逻辑必须先于数据加载，浏览器必须加载完相关 js 文件后才能开始加载数据，因此第一次页面 ready 的时间会晚于传统 Web 页面。不过这样的问题也有很多解决方案，例如 Application Cache 可以将文件保存在浏览器里，避免反复加载相同的脚本和资源文件。&lt;br&gt;&lt;br&gt;所以结论是：&lt;b&gt;是否应该使用 Ajax 取决于业务流程和技术栈&lt;/b&gt;&lt;br&gt;&lt;br&gt;那怎么判定一个业务流程是否适合 Ajax 呢，我举个例子 。&lt;br&gt;&lt;br&gt;假如你需要在微信里接入一个卖水果的活动，流程可以如下设计：&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/77f429b6dd488c523526584e4fae9711_b.png&quot; data-rawwidth=&quot;1526&quot; data-rawheight=&quot;1174&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1526&quot; data-original=&quot;https://pic2.zhimg.com/77f429b6dd488c523526584e4fae9711_r.png&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;如何应对使用 Ajax 技术导致的程序复杂性&lt;/b&gt;&lt;br&gt;&lt;br&gt;澄清一点：Ajax 本身并没有加重程序复杂性。&lt;br&gt;&lt;br&gt;程序变得复杂的原因是：由于 Ajax 要求业务逻辑被移动到浏览器端，因此浏览器端为了应对更多业务逻辑变得复杂。&lt;br&gt;&lt;br&gt;既然是问题是程序复杂性，那么解决方案当然来自软件工程：&lt;br&gt;&lt;br&gt;1. 重浏览器端的 WebApp 应用，和客户端开发一样，善用 MVC/MVV (&lt;a href=&quot;//link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/MVC&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;zh.wikipedia.org/wiki/M&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;VC&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;)这样的软件设计模式，对复杂度的简化，使程序结构更加直观。&lt;br&gt;&lt;br&gt;现代 Web Frameworks 都在执行这一理念。如果需要做一个 WebApp，从 React、Vue.js、Angular.js 等框架入手都是最好的选择。&lt;br&gt;&lt;br&gt;2. 使用 Ajax 优化传统 Server Centri Web 的体验&lt;br&gt;&lt;br&gt;无非是结构化的程序设计方式，相信所有 CS 出身的开发者都能游刃有余。&lt;br&gt;&lt;br&gt;再有就是合理使用第三方库，例如使用 jQuery、underscore.js 这样的工具性第三方库可以降低对 DOM 操作的难度，并应对浏览器兼容性问题。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic2.zhimg.com/a4204a177c938afd7e32975832fbdd05_200x112.png\" data-rawwidth=\"800\" data-rawheight=\"786\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic2.zhimg.com/a4204a177c938afd7e32975832fbdd05_r.png\">\n时代变了。在 Single Page WebApp 满地跑的年代，原最高票提到的经验已经不适用。 1. 页面上首次显示的内容尽量不要用 Ajax，显示更多（或换页）的时候再用 该方案其实是对面向内容的传统 Web 页面的一种优化。对于强调沉浸体验的 WebApp 而言，所有数据都…\n\n<a href=\"/question/20410763/answer/117742113\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-08-19\" target=\"_blank\" href=\"/question/20410763/answer/117742113\">编辑于 2016-09-01</a></p>\n\n",
    "link": "https://zhihu.com/question/20410763/answer/117742113"
  },
  {
    "question": "\nJavascript 初学者如何思考才可以把脑中的东西转换成代码写出来？\n",
    "author": "野火Taffy",
    "content": "\n\n<textarea hidden class=\"content\">&lt;a data-hash=&quot;0970f947b898ecc0ec035f9126dd4e08&quot; href=&quot;//www.zhihu.com/people/0970f947b898ecc0ec035f9126dd4e08&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@vczh&quot; data-hovercard=&quot;p$b$0970f947b898ecc0ec035f9126dd4e08&quot;&gt;@vczh&lt;/a&gt; 轮子哥时间宝贵。我就来详细的讲一下这个&lt;b&gt;穷举法&lt;/b&gt;的意思。&lt;br&gt;&lt;br&gt;想当初旁听人工智能课程的时候就是讲的井字棋的AI实现。对一般人来说，实现井字棋最难的地方就是这里的这个AI算法了吧。&lt;br&gt;&lt;br&gt;）——课件找不到了，好在我是认真听课了的！——（&lt;br&gt;&lt;br&gt;下图这个就是所谓的穷举法的前两层。&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/23237a183e456ccac2db2eb0b69c6acb_b.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;225&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic4.zhimg.com/23237a183e456ccac2db2eb0b69c6acb_r.jpg&quot;&gt;……&lt;br&gt;&lt;br&gt;实际情况下，完全遍历一颗博弈树的层级的节点数是指数级递增的：&lt;br&gt;&lt;br&gt;层数   节点数&lt;br&gt; 0       1&lt;br&gt; 1       9&lt;br&gt; 2       72&lt;br&gt; 3       504&lt;br&gt; 4       3024&lt;br&gt; 5       15120&lt;br&gt; 6       60480&lt;br&gt; 7       181440&lt;br&gt; 8       362880&lt;br&gt;&lt;br&gt;&lt;b&gt;那么实际的层数可以不要那么多就好了。&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;u&gt;然后你就会问了，就算遍历了，怎么知道要怎样走呢。&lt;/u&gt;我们的Minimax算法就在这里出现了，具体介绍可以移步维基 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/Minimax&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Minimax&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 。我就简单的说一下，在井字棋的游戏里面，两个人博弈，一个是用X，一个是用O，这里的X是Max，O就是这里的Min。X的策略就是让这个Max-Min的值尽可能的大，而O的策略就是让这个Max-Min的值尽可能的小。Max-Min的这个值就是我们要的分数值。&lt;br&gt;&lt;br&gt;&lt;u&gt;那么下一个问题，这个分数要怎么就算呢。&lt;/u&gt;其实这个也是可以自己总结出来的，数字也可以改，下面是NTU的网站上给的记分方法：&lt;br&gt;&lt;ul&gt;&lt;li&gt;己方在同一条线上有三子，记+100分;&lt;br&gt;&lt;/li&gt;&lt;li&gt;己方在同一条线上有二子，记+10分;&lt;br&gt;&lt;/li&gt;&lt;li&gt;己方在同一条线上有一子，记+1分;&lt;br&gt;&lt;/li&gt;&lt;li&gt;同理，对方在同一条线上有三子，二子，一子，分别记-100, -10, -1分;&lt;br&gt;&lt;/li&gt;&lt;li&gt;其余情况记0分。（在线上没有任一子或者同时有两方的子数）&lt;/li&gt;&lt;/ul&gt;然后就可以得到下面的遍历的记分。（这个是4层遍历的情况）&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/3c65e96d661ed1580b51f14dcdc24dae_b.jpg&quot; data-rawwidth=&quot;772&quot; data-rawheight=&quot;399&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;772&quot; data-original=&quot;https://pic3.zhimg.com/3c65e96d661ed1580b51f14dcdc24dae_r.jpg&quot;&gt;&lt;br&gt;&lt;b&gt;这样一个简单的AI就实现了，接下来我们还可以把这个AI再完善一些，加上剪枝，加上一些经验的规则，一些经验的走法，再给AI加上开局库等等。&lt;/b&gt;&lt;br&gt;&lt;br&gt;-----------  &lt;a data-hash=&quot;0970f947b898ecc0ec035f9126dd4e08&quot; href=&quot;//www.zhihu.com/people/0970f947b898ecc0ec035f9126dd4e08&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@vczh&quot; data-hovercard=&quot;p$b$0970f947b898ecc0ec035f9126dd4e08&quot;&gt;@vczh&lt;/a&gt; 轮子哥简单一句&lt;b&gt;穷举&lt;/b&gt;就把上面这些给带过了，也真是醉了-----------&lt;br&gt;&lt;br&gt;接下来就是代码层面的具体实现了，这里的话就是要把js具体用进去了。前面的前辈们也说到了，&lt;b&gt;真正学写代码还是要自己一个字母一个字母的敲进去&lt;/b&gt;才行，用代码实现我给几个简单的hint。&lt;br&gt;&lt;br&gt;比如每一个棋位用什么表示，用数字，还是用一个矩阵。至于显示的话，比较直观的就是用Canvas来画。比方说对于计算机来说数组[1,4,9]就可以表示获胜。&lt;br&gt;&lt;br&gt;另外一个小建议，这样的项目可以不用什么lib来实现，这样比较直观，Angular本身也不适合处理这个项目。它本身就是设计来收发json到页面的。&lt;br&gt;&lt;br&gt;当然如果是要Hack，用什么lib都没有关系。&lt;br&gt;&lt;br&gt;最后说一句，Codeacademy上的Javascript的课程并不好，我大概两年前就做过了，学完了不过是熟悉了JS的语法而已，真正JS里的重要的地方都没有提到，比如像什么bind, apply, call, __proto__这些特别容易混淆的地方，都是需要重新去看书。&lt;b&gt;如果是学诚心想学Javascript的话，推荐看&lt;u&gt; 《&lt;/u&gt;&lt;u&gt;Javascript: The Good Parts》&lt;/u&gt; 这本书，不容错过。&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;以上，抛砖引玉，还望指正。&lt;br&gt;&lt;br&gt;参考拓展：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ntu.edu.sg/home/ehchua/programming/java/JavaGame_TicTacToe_AI.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Tic-tac-toe AI&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.javascriptkit.com/script/script2/tactoe.shtml&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Cut &amp;amp; Paste Tic Tac Toe with AI&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;（具体的JS实现，其实可以在这个基础上做得更漂亮的）&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//univasity.iteye.com/blog/1170216&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Minimax算法研究（TicTacToe）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;——————————————&lt;br&gt;&lt;br&gt;P.S. 除去机器人的实现，剩余的部分有好的范例啦，参见 &lt;a data-hash=&quot;766a84590614270ad6e4cc2dd0fbfc12&quot; href=&quot;//www.zhihu.com/people/766a84590614270ad6e4cc2dd0fbfc12&quot; class=&quot;member_mention&quot; data-hovercard=&quot;p$b$766a84590614270ad6e4cc2dd0fbfc12&quot;&gt;@Jasin Yip&lt;/a&gt;，代码很干净漂亮^^</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/23237a183e456ccac2db2eb0b69c6acb_200x112.jpg\" data-rawwidth=\"600\" data-rawheight=\"225\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/23237a183e456ccac2db2eb0b69c6acb_r.jpg\">\n<a data-hash=\"0970f947b898ecc0ec035f9126dd4e08\" href=\"//www.zhihu.com/people/0970f947b898ecc0ec035f9126dd4e08\" class=\"member_mention\" data-editable=\"true\" data-title=\"@vczh\" data-hovercard=\"p$b$0970f947b898ecc0ec035f9126dd4e08\">@vczh</a> 轮子哥时间宝贵。我就来详细的讲一下这个<b>穷举法</b>的意思。 想当初旁听人工智能课程的时候就是讲的井字棋的AI实现。对一般人来说，实现井字棋最难的地方就是这里的这个AI算法了吧。 ）——课件找不到了，好在我是认真听课了的！——（ 下图这个就是所谓…\n\n<a href=\"/question/27580342/answer/37204646\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-01-14\" target=\"_blank\" href=\"/question/27580342/answer/37204646\">编辑于 2015-01-14</a></p>\n\n",
    "link": "https://zhihu.com/question/27580342/answer/37204646"
  },
  {
    "question": "\n毫无排版和缩进的 JavaScript 代码，怎么阅读？\n",
    "author": "我未成妖",
    "content": "\n\n<textarea hidden class=\"content\">打开chrome，打开一个页面，比如目前这个页面吧 &lt;a href=&quot;http://www.zhihu.com/question/20195561&quot; class=&quot;internal&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;zhihu.com/question/2019&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;5561&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;按Ctrl+shift+I 打开开发者工具，点Scripts选项卡。&lt;br&gt;下面有一个图标为两个花括号的按钮{}，鼠标放上去提示是pretty print，点一下，js代码就有换行了。&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/0d4ed8d46c78ac952980c56e1de33fa9_b.jpg&quot; data-rawwidth=&quot;401&quot; data-rawheight=&quot;299&quot; class=&quot;content_image&quot; width=&quot;401&quot;&gt;&lt;br&gt;其他浏览器都有类似的开发者工具。试试吧。~</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic2.zhimg.com/0d4ed8d46c78ac952980c56e1de33fa9_200x112.jpg\" data-rawwidth=\"401\" data-rawheight=\"299\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic2.zhimg.com/0d4ed8d46c78ac952980c56e1de33fa9_r.jpg\">\n打开chrome，打开一个页面，比如目前这个页面吧 <a href=\"http://www.zhihu.com/question/20195561\" class=\"internal\"><span class=\"invisible\">http://www.</span><span class=\"visible\">zhihu.com/question/2019</span><span class=\"invisible\">5561</span><span class=\"ellipsis\"></span></a> 按Ctrl+shift+I 打开开发者工具，点Scripts选项卡。 下面有一个图标为两个花括号的按钮{}，鼠标放上去提示是pretty print，点一下，js代码就有换行了。 其他浏览器都有类似的开发者工具…\n\n<a href=\"/question/20195561/answer/14293917\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-04-23\" target=\"_blank\" href=\"/question/20195561/answer/14293917\">编辑于 2012-04-23</a></p>\n\n",
    "link": "https://zhihu.com/question/20195561/answer/14293917"
  },
  {
    "question": "\n你们觉得响应式好呢，还是手机和PC端分开来写？\n",
    "author": "张克军",
    "content": "\n\n<textarea hidden class=\"content\">谢邀。无法简单的用好坏评判。一是看应用场景，二是看如何设计“响应式”方案。&lt;br&gt;简单、轻量的页面直接用media query实现响应性就很好。比如blog、小型企业站之类。现在的CSS框架基本都具备响应性。但请注意响应式不仅仅是响应式布局。&lt;br&gt;对于大型站简单用media query是远远不够的。于是在同一个controller层上，识别UA，渲染不同版本的模板，组合相应的静态资源。这也算是响应式。开发及维护成本明显提高。&lt;br&gt;当各个版本间的差异很大时，维护成本很可能会大到无法接受。即便分开做，架构上也要调整，后端服务化，应用层app化。根据不同公司的技术特点，调整的成本也难讲是否可行。&lt;br&gt;对于大型站，分开做更清晰，同时用响应式组件解决复用、功能同步的问题。比如原生的select控件，在pc、android、ios下有不同的呈现和交互，但用法是一致的。同理，通用的业务组件也可以这样做。web component普及后最终能解决这个问题。现在这个阶段，可以设计类web component的方案。&lt;br&gt;另外，从优化角度，是否分开做，图片之类静态资源的响应性都是有必要做的。&lt;br&gt;总之，根据场景响应式可以从各种层面，各种粒度上做。这是现代web开发的特点。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n谢邀。无法简单的用好坏评判。一是看应用场景，二是看如何设计“响应式”方案。 简单、轻量的页面直接用media query实现响应性就很好。比如blog、小型企业站之类。现在的CSS框架基本都具备响应性。但请注意响应式不仅仅是响应式布局。 对于大型站简单用medi…\n\n<a href=\"/question/25836425/answer/31570068\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-10-08\" target=\"_blank\" href=\"/question/25836425/answer/31570068\">编辑于 2014-10-08</a></p>\n\n",
    "link": "https://zhihu.com/question/25836425/answer/31570068"
  },
  {
    "question": "\n前端开发中如何在JS文件中检测用户浏览器是否打开了调试面板（F12打开开发者工具）？\n",
    "author": "飞羽解",
    "content": "\n\n<textarea hidden class=\"content\">有个奇淫巧技，具体原理未知，测试chrome可以&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/x/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n  &lt;span class=&quot;nx&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'第 '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' 次打开控制台'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n有个奇淫巧技，具体原理未知，测试chrome可以 (function () {\n var re = /x/;\n var i = 0;\n console.log(re);\n\n re.toString = function () {\n return '第 ' + (++i) + ' 次打开控制台';\n };\n})();\n\n\n<a href=\"/question/24188524/answer/117094116\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/24188524/answer/117094116\">发布于 2016-08-16</a></p>\n\n",
    "link": "https://zhihu.com/question/24188524/answer/117094116"
  }
]