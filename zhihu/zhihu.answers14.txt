[
  {
    "question": "\n从接触编程到工作，你们对编程的认识是一个怎样的变化过程？\n",
    "author": "躺糖",
    "content": "\n\n<textarea hidden class=\"content\">小时候：c好屌啊，写起来就像写英语&lt;br&gt;稍微大一点：python好屌啊，写起来就像写英语&lt;br&gt;再大一点：英语好屌啊，再也不碰nlp了啊！&lt;br&gt;&lt;br&gt;//TODO fix this&lt;br&gt;&lt;br&gt;小时候：学毛线java&lt;br&gt;稍微大一点：学毛线python&lt;br&gt;再大一点：学毛线&lt;br&gt;&lt;br&gt;//TODO FIX THIS!!!&lt;br&gt;&lt;br&gt;小时侯：我要自己写自己的library&lt;br&gt;稍微大一点：把别人library拼起来就好了&lt;br&gt;再大一点：直接抄别人代码就好了&lt;br&gt;&lt;br&gt;//TODO FIX THIS NOW&lt;br&gt;&lt;br&gt;小时候：我写的程序绝对不会有bug&lt;br&gt;稍微大一点：这个bug不想修了&lt;br&gt;再大一点：这是feature，滚&lt;br&gt;&lt;br&gt;//TODO if you don't fix this, it will backfire on you&lt;br&gt;&lt;br&gt;小时候：我代码简洁不需要注释&lt;br&gt;稍微大一点：我tm写的这是啥&lt;br&gt;再大一点：什么垃圾代码，哪个傻逼写的ヽ( `д´*)ノ&lt;br&gt;&lt;br&gt;//TODO if you don't fix this, it will explode&lt;br&gt;&lt;br&gt;小时候：我要当黑客&lt;br&gt;稍微大一点：其实研究一下信息安全就好了&lt;br&gt;再大一点：我就想乖乖当个码农&lt;br&gt;&lt;br&gt;//TODO I know you can't see me, but please fix this&lt;br&gt;&lt;br&gt;小时候：我要写个贪吃蛇&lt;br&gt;稍微大一点：我要写个MMO&lt;br&gt;再大一点：写个hello world就行了&lt;br&gt;&lt;br&gt;//TODO if you fix this, you will be promoted&lt;br&gt;&lt;br&gt;小时候：这个看起不难，我做好了发给你&lt;br&gt;稍微大一点：这个其实挺麻烦的，你多少请我吃顿饭呗&lt;br&gt;再大一点：不会，滚&lt;br&gt;&lt;br&gt;//TODO fix this for a kiss from Katy&lt;br&gt;&lt;br&gt;小时候：我不但懂软件还懂硬件&lt;br&gt;稍微大一点：我只会写程序，硬件不熟悉&lt;br&gt;再大一点：我只是搞理论的，不会写程序&lt;br&gt;&lt;br&gt;//TODO Ok, I lied. Nobody here knows a girl named Katy, but can you just fix this, plz&lt;br&gt;&lt;br&gt;小时候：linux就是屌&lt;br&gt;稍微大一点：mac就是屌&lt;br&gt;再大一点：都什么什么狗屁os还不如windows呢&lt;br&gt;&lt;br&gt;//TODO sir, I'm dying, please fix me&lt;br&gt;&lt;br&gt;小时候：要买最贵的电脑&lt;br&gt;稍微大一点：要买性能最好的电脑&lt;br&gt;再大一点：买好看的&lt;br&gt;&lt;br&gt;//TODO fuck you, programmers! fuck you all!&lt;br&gt;&lt;br&gt;小时候：我要找个漂亮女朋友&lt;br&gt;稍微大一点：我要找个女朋友&lt;br&gt;再大一点：我要找个（女？）朋友&lt;br&gt;&lt;br&gt;//分割线&lt;br&gt;&lt;br&gt;转眼100个赞了，承蒙各位错爱，在下不胜感激。还是说点正经的吧，我这个人说正经的东西大家都不太喜欢看，所以如果不喜欢的话看到这一行就可以了。非常非常感谢各位的时间与耐心！&lt;br&gt;&lt;br&gt;我刚开始编程的时候，本来是觉得黑客技术好酷炫，要是我也能成为一个黑客就好了。那时候什么都不懂，没有健全的人格，也没有完善的知识体系。生活中也遇到了各种各样的挫折，然后面对了一个选择：大学要选什么专业？&lt;br&gt;&lt;br&gt;我不是一个聪明人，数学什么的一直不是我擅长的领域，虽然现在的我也是数学计算机双专业本科毕业的，但是数学对于我来说，就跟黑客的幻想一样遥不可及。“我热爱数学，可是数学爱的是别人。”我这么自己骗自己。&lt;br&gt;&lt;br&gt;刚刚接触编程技术的时候，我并不理解“我是谁，我在干什么，我写的是什么东西”。其实花了大概两年三年的本科学习我才明白了现在我奉为真理的一句话“编程就是为了把重复出现的流程自动化”。&lt;br&gt;&lt;br&gt;但是当时的我，面对那个选择的问题，我对一切都一无所知。我只知道一件事“计算机是我学习经历里唯一看到新内容不慌的东西”然后我就傻着个脸选了计算机玄学。我幻想着学学如何编程，以后就可以当黑客了。&lt;br&gt;&lt;br&gt;后来慢慢的，我发现，计算机玄学根本就不讲如何编程啊，什么鬼！总之我也硬着头皮活到了本科毕业，在逐渐学习，了解编程的过程中，与黑客梦想渐行渐远，成为了现在这个鬼样子。&lt;br&gt;&lt;br&gt;这个过程中，我的转变很大，我曾经自诩掌握一点编程技巧，觉得看别人都高人一等。到现在，真正见识过了各种各样的人以后，我发现我智力有障碍。&lt;br&gt;&lt;br&gt;曾经我以为编程就是非常简单的一个把“重复流程自动化”的过程，直到我经历了各种各样硬件、软件、数据量、用户需求、用户行为、用户智商的限制，才发现重复流程自动化的水其实很深。&lt;br&gt;&lt;br&gt;我不再认为编程是“是个人长个脑子就能学会的东西”了，我开始承认“不会就是不会，不丢人”“每个人擅长的领域不同，我并不比任何人强”。我学会了不要轻易断言，除非你能证明你是对的，或者你能用你的方法解决问题。&lt;br&gt;&lt;br&gt;我认为学习编程的过程，对于我整个人生是一种提升。而我对编程的看法的转变则在于，一开始我是相信鄙视链的，我写assembly就是比你写c强，我写底层就是比你写应用强。到现在，大家只是分工不一样，一个程序需要我也需要你，任何一环坏掉了这都不是一个好程序。从一开始我相信，我一定能写出最好的程序，到现在我承认你写的比我写的好，谢谢你的努力与创意，希望我能在你的工作的基础上完善整个项目。从一开始我相信写程序就要用什么什么操作系统，用其他操作系统的都是智障，到现在你喜欢哪个平台就用哪个，舒服就好，写出来好程序才是最重要的。从一开始用vim鄙视ide，到现在觉得只要这个工具能帮助我简化流程，用就好了。从一开始为了面板数据买alienware，到给我一台机器我就能创造一个世界（这个还到不了）。&lt;br&gt;&lt;br&gt;这个过程我发现了更多关于编程、关于计算机本身的东西，像是computability, complexity, polynomiality, NP hardness这些理论。像是用户需求，产品质量，代码可维护性这些和应用息息相关的东西。还有一些计算机的细节方向的理论比如learning, graphics, algorithm, compiler, DBMS。而不是一些非常片面的表象：系统，语言，IDE，面板数据。本科的学习带我探索到了编程更深的一个层次。&lt;br&gt;&lt;br&gt;以至于再拿到什么问题，我不会再像个蠢货一样（虽然我还是蠢货）直着个脸然后满嘴跑火车。而是开始渐渐分析问题，提出方案，改进方案，实现方案，评估结果。然后再满嘴跑火车。&lt;br&gt;&lt;br&gt;总之就是，我还是之前那个蠢货，但是我现在知道自己蠢了。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n小时候：c好屌啊，写起来就像写英语 稍微大一点：python好屌啊，写起来就像写英语 再大一点：英语好屌啊，再也不碰nlp了啊！ //TODO fix this 小时候：学毛线java 稍微大一点：学毛线python 再大一点：学毛线 //TODO FIX THIS!!! 小时侯：我要自己写自己的l…\n\n<a href=\"/question/53945189/answer/137379649\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-12-24\" target=\"_blank\" href=\"/question/53945189/answer/137379649\">编辑于 2016-12-24</a></p>\n\n",
    "link": "https://zhihu.com/question/53945189/answer/137379649"
  },
  {
    "question": "\n我们为什么需要React?\n",
    "author": "尤雨溪",
    "content": "\n\n<textarea hidden class=\"content\">首先题主要区分两个概念：React 本身和 React 生态圈所推崇的主流应用架构。&lt;br&gt;&lt;br&gt;React 本身其实还算简单的。最简单的理解，一个组件的渲染函数就是一个基于 state 和 props 的纯函数，state 是自己的，props 是外面来的，任何东西变了就重新渲染一遍，是不是很简单？&lt;br&gt;&lt;br&gt;但是，如果抛开 React 生态圈现在所有的那些东西，只用 React 本身来做个大型应用，你 hold 得住么？我可以打包票，99% 的开发者 hold 不住。因为大型应用会带来很多规模上的复杂度，比如跨组件通信，多组件共享状态，多人协作的可维护性，大量嵌套组件的性能问题... 等等。这些东西如何处理，都是靠前人填坑才一步步产生了今天的各种设计模式。Flux/Redux 的繁琐，本质上是针对大型应用的复杂度所作出的权衡：用繁琐一些的 API，换长线的可维护性。在规模不够大的应用里，这些问题并不那么明显，那么这些繁琐的 API 也就显得有些过度设计了。&lt;br&gt;&lt;br&gt;Dan Abramov 自己在推上多次强调过，Redux 的设计是以几个原则为优先的：要让状态的变化可追踪，可重复，可维护。为了达成这个目的，才会有 reducer, action, action creator, middleware 这些概念。本来一个 callApi(res =&amp;gt; a.b = res) 可以做到的事情，现在你需要先写全套然后配上 thunk middleware 才能做到。因此在规模不够的应用里使用 Redux 肯定会觉得杀鸡用牛刀。然而 React 生态圈里面之前并没有适合中小规模应用的状态解决方案，因为 Flux 从一开始就是冲着 Facebook scale 去设计的，并没有考虑中小规模的应用。最近 MobX 也算是在 React 生态圈里搞出点小动静，就是因为它填补了这个空白，然而用 React + MobX 本质上就是一个更繁琐的 Vue。&lt;br&gt;&lt;br&gt;如果做个比较的话，Vue 本身不加任何库就可以很好地满足中小规模应用的需求，配合 Vuex 可以满足大规模应用的需求。同时由于 Vue 的依赖追踪机制，不管 1.0 还是 2.0 都不存在过渡重渲染的性能问题，shouldComponentUpdate / reselect / ImmutableJS 之类的统统不需要。&lt;br&gt;&lt;br&gt;其实本来没想提到 Vue 的，只是因为有些人的答案里面非要拿 Vue 来比较。&lt;br&gt;&lt;br&gt;回到题主最早的问题，我们需要 React/Redux 么？从可维护性的角度考虑，大型应用确实需要，但这不代表任何规模的应用都得用它，更不代表它就是最好的。如果一个方案能够用更简洁的方式满足你的项目对应规模的可维护性需求，并且让你用得爽，那就相信你自己的心，不要因为 React 教徒云里雾里的宣传看上去很厉害就盲从。&lt;br&gt;&lt;br&gt;很多 React 用户喜欢标榜 React is not easy, but it is simple... 我想说，Life is short, easy is underrated.&lt;br&gt;&lt;br&gt;总结一下：别人说用得爽，不代表你会用得爽；自己用得爽的才是真的爽。适合自己（或者手头项目）的才是最好的。&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;原本的题外话针对的答案已经被踩下去了，我也就不放和题主问题无关的东西了。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n首先题主要区分两个概念：React 本身和 React 生态圈所推崇的主流应用架构。 React 本身其实还算简单的。最简单的理解，一个组件的渲染函数就是一个基于 state 和 props 的纯函数，state 是自己的，props 是外面来的，任何东西变了就重新渲染一遍，是不是很…\n\n<a href=\"/question/47161776/answer/111370024\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-07-16\" target=\"_blank\" href=\"/question/47161776/answer/111370024\">编辑于 2016-07-17</a></p>\n\n",
    "link": "https://zhihu.com/question/47161776/answer/111370024"
  },
  {
    "question": "\n怎么学习前端开发？求推荐学习路线？\n",
    "author": "Mad Wiki",
    "content": "\n\n<textarea hidden class=\"content\">不答题，我就是顺手撕个搞小白培训的抠脚大汉。&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/b96f2ae363113de7601dbb877064be1b_b.png&quot; data-rawwidth=&quot;1342&quot; data-rawheight=&quot;1808&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1342&quot; data-original=&quot;https://pic4.zhimg.com/b96f2ae363113de7601dbb877064be1b_r.png&quot;&gt;&lt;br&gt;这种字里行间等于是告诉你“我是骗子，我是抠脚大汉，我在为培训班攒傻×”的回答，也是可以有人上当的。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/8fcbb4f37bd0ae0c567aaa70a61fd426_b.png&quot; data-rawwidth=&quot;2560&quot; data-rawheight=&quot;1340&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;2560&quot; data-original=&quot;https://pic3.zhimg.com/8fcbb4f37bd0ae0c567aaa70a61fd426_r.png&quot;&gt;&lt;br&gt;你以为剪裁一下就搜不出来了？你以为搜图是逐个像素对比吗？你以为大家都用百度吗？&lt;br&gt;还动辄“小女子”“小女子”的，显摆啥？第一天做女生是吗？&lt;br&gt;&lt;br&gt;西游记里面妖怪幻化人形的时候也自称“小女子”，这蠢得就跟相亲时叫女方“花姑娘”一样。&lt;br&gt;&lt;br&gt;现在骗子都对智商没有要求了吗？&lt;br&gt;&lt;br&gt;知乎把它推到我时间线上来，等于是知乎也有责任啊。&lt;br&gt;&lt;br&gt;&lt;br&gt;=====================================分割线==========================&lt;br&gt;&lt;br&gt;&lt;br&gt;已经这么多赞同了，不说点有用的也不好意思了。&lt;br&gt;&lt;br&gt;首先，不推荐&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3school.com.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;w3school 在线教程&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，两个原因，一是过时，二是不全。这个东西是非官方的，也很久没维护了。&lt;br&gt;&lt;br&gt;如果是搜索和学习API,推荐&lt;a href=&quot;//link.zhihu.com/?target=http%3A//devdocs.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;DevDocs API Documentation&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 两个原因，一是实时更新，二是作为手册涵盖非常全面，用法和例子很清晰。有时候正看着的时候它就弹个消息告诉你内容更新了。&lt;br&gt;&lt;br&gt;如果是系统学习标准知识，推荐&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ecma-international.org/publications/standards/Ecma-262.htm&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Standard ECMA-262&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;当然，初学可以先不用看这个。等你进阶的时候可以一边工作一边看。国内也有人翻译过中文版，你可以自己找找。&lt;br&gt;&lt;br&gt;其次，不推荐各种乱七八糟小论坛QQ群，这种东西最终就是把你引导到付费培训班去。上上主流的技术网站、业界知名的论坛足矣，大部分时候以搜索为主。&lt;br&gt;&lt;br&gt;再有就是，以当今社区的开放程度，自学是能实现系统的学习的。那么多项目开源在那任你阅览，主流技术都有文档和无数的线上问答。唯一能约束你的就是时间和精力。&lt;br&gt;&lt;br&gt;而在一手资料那么多的情况下去找寻所谓的更舒服的学习方式是得不偿失的，这除了延长你的学习时间外并没有什么好处。&lt;br&gt;&lt;br&gt;况且在当前日益严峻的就业环境下，时间才是最宝贵的东西。一届又一届的毕业生都在挤占为数不多的初级岗位。你还想低效地再多学一年和更多的失业人口竞争实习岗么？&lt;br&gt;&lt;br&gt;取匿。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/b96f2ae363113de7601dbb877064be1b_200x112.png\" data-rawwidth=\"1342\" data-rawheight=\"1808\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/b96f2ae363113de7601dbb877064be1b_r.png\">\n不答题，我就是顺手撕个搞小白培训的抠脚大汉。 这种字里行间等于是告诉你“我是骗子，我是抠脚大汉，我在为培训班攒傻×”的回答，也是可以有人上当的。 你以为剪裁一下就搜不出来了？你以为搜图是逐个像素对比吗？你以为大家都用百度吗？ 还动辄“小女子…\n\n<a href=\"/question/30180100/answer/125461283\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-10-08\" target=\"_blank\" href=\"/question/30180100/answer/125461283\">编辑于 2016-10-08</a></p>\n\n",
    "link": "https://zhihu.com/question/30180100/answer/125461283"
  },
  {
    "question": "\n专科，本三学历进入BAT是什么感受？\n",
    "author": "匿名用户",
    "content": "\n\n<textarea hidden class=\"content\">我自己就是专科，&lt;br&gt;当年高考与二本线也就差几分，三本没去去了专科，虽然不后悔，但有深深的遗憾。&lt;br&gt;因为很多公司，尤其是知名公司招聘第一条就是本科以上学历。所以大多数情况下门都进不去的。&lt;br&gt;所以本人绕了一个大大的圈子，历经六年才进去你题中的公司。&lt;br&gt;这些年的经历，本人深深感到身边圈子的重要，因为起点低，身边都是普通的人，自己的视野打不开，连努力方向都不知道。中途想改变，却茫然无力。最后只能一步步去更好的公司，与更优秀的人共事。终于花了六年光阴，极好的运气，赶上了别人的起点。&lt;br&gt;学历真的给我带来了无尽的烦恼，暂住证办不了。同事一谈自己大学我就深深地自卑。喜欢老家介绍的一位姑娘。可是对方是211。我在她面前又如何张开口。&lt;br&gt;人生如牌局。抓到烂牌，时刻需要小心翼翼。付出的艰辛只有自己知道。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n我自己就是专科， 当年高考与二本线也就差几分，三本没去去了专科，虽然不后悔，但有深深的遗憾。 因为很多公司，尤其是知名公司招聘第一条就是本科以上学历。所以大多数情况下门都进不去的。 所以本人绕了一个大大的圈子，历经六年才进去你题中的公司。 这…\n\n<a href=\"/question/34633154/answer/59789781\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-08-18\" target=\"_blank\" href=\"/question/34633154/answer/59789781\">编辑于 2015-08-18</a></p>\n\n",
    "link": "https://zhihu.com/question/34633154/answer/59789781"
  },
  {
    "question": "\nmedium.com 是如何让图片加载时从模糊到清晰的？\n",
    "author": "张靖超",
    "content": "\n\n<textarea hidden class=\"content\">单单就 medium 来说，他们载入图片具体的流程如下：&lt;br&gt;&lt;br&gt;1. 在文档流中嵌入一个和原图一样大的 canvas，和一个不显示的 img ，后者负责载入一个非常小的图片（如40px大小&lt;br&gt;2. 一段 js 监听到上述 img 标签的 onload 事件时，将小的图片以高斯模糊的方式绘制到 canvas 上&lt;br&gt;3. 当页面滚动到快要显示这张图片时，js 控制开始加载原图&lt;br&gt;4. 原图加载完成后，被放在之前的 img 标签中（此时看不到原图，被 canvas 挡住&lt;br&gt;5. 在 canvas 中应用 fadeOut 效果，逐渐露出原图&lt;br&gt;6. fadeOut 播放完成后，将 canvas display：none&lt;br&gt;&lt;br&gt;表示 medium 的细节做的真是非常到位，之前我记得有篇文章专门说这个来着，一时找不到链接了</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n单单就 medium 来说，他们载入图片具体的流程如下： 1. 在文档流中嵌入一个和原图一样大的 canvas，和一个不显示的 img ，后者负责载入一个非常小的图片（如40px大小 2. 一段 js 监听到上述 img 标签的 onload 事件时，将小的图片以高斯模糊的方式绘制到 ca…\n\n<a href=\"/question/40757342/answer/88144066\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-02-26\" target=\"_blank\" href=\"/question/40757342/answer/88144066\">编辑于 2016-02-26</a></p>\n\n",
    "link": "https://zhihu.com/question/40757342/answer/88144066"
  },
  {
    "question": "\n若想学 HTML，应从哪里入手？\n",
    "author": "李路",
    "content": "\n\n<textarea hidden class=\"content\">陈贤安先生推荐的书籍，我认为非常不适合入门，他们更像是全面的参考指南，充斥着各类细节，且行文晦涩，对初学者有难度，容易挫败其热情。 &lt;br&gt;&lt;br&gt;我负责任地说： &lt;br&gt;&lt;br&gt;O'reilly 的 Head first html， xhtml &amp;amp; CSS 是这个地球上最好的html和css入门书，没有之一。 &lt;br&gt;&lt;br&gt;1， 最正式的规范和思路 &lt;br&gt;2， 最简单易懂，乐趣盎然的学习过程 &lt;br&gt;&lt;br&gt;读完这本后，请直接去学习同作者的刚刚出版的新书： &lt;br&gt;&lt;br&gt;Head first Html5 &lt;br&gt;&lt;br&gt;这本不但是最好的html5入门书，也是极好的javascript入门书。这两本的结合，应是目前最快的html学习路径。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n陈贤安先生推荐的书籍，我认为非常不适合入门，他们更像是全面的参考指南，充斥着各类细节，且行文晦涩，对初学者有难度，容易挫败其热情。 我负责任地说： O'reilly 的 Head first html， xhtml &amp; CSS 是这个地球上最好的html和css入门书，没有之一。 1， …\n\n<a href=\"/question/19753196/answer/13366018\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/19753196/answer/13366018\">发布于 2011-11-21</a></p>\n\n",
    "link": "https://zhihu.com/question/19753196/answer/13366018"
  },
  {
    "question": "\n如何评价阮一峰关于前端工具变化快的言论？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">其实本答案并不是对工具变化快的直接评价，而是通过预言来间接给出评价：与我预言的即将发生的变革相比，阮老师所描述的变化是小巫见大巫。&lt;br&gt;&lt;br&gt;我的这个预言或者说判断，在2014年年中即已成形，但我一直憋到2015年年底才来回答——因为在一周前D2的夜场上，我在即兴发言中终于憋不住抛出了我的预言：前端的构建部署即将发生革命性的变化——单独的构建环节将逐渐弱化乃至消失，构建所包含的实质性内容即脚本、样式等资源的编译转译等将云化和实时化。两年后（到2018年时），不要说Grunt/Browserify，Gulp/Webpack等也均将退出主流。&lt;br&gt;&lt;br&gt;具体来说，我预言明年（2016年）将出现包含JS模块加载、包依赖自动处理、JS自动编译这三项核心功能，并基于HTTP/2的前端资源云服务（可理解为CDN的进化形态）。并且这类服务会在未来两年里快速成长并带动整个前端的大跃进。比如，通过ServiceWorker大幅提升浏览器缓存利用率，加上HTTP/2等协议级优化，Web应用的加载性能将获得划时代的提升；根据UA分发目标平台特定编译版本和自动polyfill，Web应用的浏览器兼容性将获得划时代的提升；提供各种增值服务如方便部署安全特性，安全性监控、灰度部署、包的平稳升级、前端（精确到应用和所依赖的包）的错误监控和分析、前端性能监控和分析等，Web应用的质量将获得划时代的提升，开发效率也将是划时代的提升……由此，前端工程师也会重新把很大一部分精力从构建部署相关的工程问题回归到网站/应用的交互体验本身。（不过应用框架和组件化相关的工程问题届时是否能有比较一致的答案，现在看还很难说。）&lt;br&gt;&lt;br&gt;以上就是我的预言，立此存照。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;BTW，如果2016年9月前我预言的事情还没开始发生，我会亲自动手。 ^_^</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n其实本答案并不是对工具变化快的直接评价，而是通过预言来间接给出评价：与我预言的即将发生的变革相比，阮老师所描述的变化是小巫见大巫。 我的这个预言或者说判断，在2014年年中即已成形，但我一直憋到2015年年底才来回答——因为在一周前D2的夜场上，我…\n\n<a href=\"/question/34449620/answer/79028575\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-12-29\" target=\"_blank\" href=\"/question/34449620/answer/79028575\">编辑于 2015-12-29</a></p>\n\n",
    "link": "https://zhihu.com/question/34449620/answer/79028575"
  },
  {
    "question": "\n如何监听 js 中变量的变化?\n",
    "author": "DaraW",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;这个问题问的很好。&lt;/p&gt;&lt;p&gt;流行的MVVM的JS库/框架都有共同的特点就是数据绑定，在数据变更后响应式的自动进行相关计算并变更DOM展现。所以这个问题也可以理解为&lt;strong&gt;如何实现MVVM库/框架的数据绑定&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;常见的数据绑定的实现有脏值检测，基于ES5的getter和setter，以及ES已被废弃的Object.observe，和ES6中添加的Proxy。&lt;/p&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;脏值检测&lt;/u&gt;&lt;/b&gt;&lt;p&gt;angular使用的就是脏值检测，原理是比较新值和旧值，当值真的发生改变时再去更改DOM，所以angular中有一个$digest。那么为什么在像ng-click这样的内置指令在触发后会自动变更呢？原理也很简单，在ng-click这样的内置指令中最后追加了$digest。&lt;/p&gt;&lt;p&gt;简易的实现一个脏值检测：&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;two-way binding&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;onload=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;init()&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;inc&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n            Increase\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;reset&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n            Reset\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;color:red&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-bind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;counter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;color:blue&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-bind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;counter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;color:green&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-bind=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;counter&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;\n\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n            &lt;span class=&quot;cm&quot;&gt;/* 数据模型区开始 */&lt;/span&gt;\n            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;cm&quot;&gt;/* 数据模型区结束 */&lt;/span&gt;\n\n            &lt;span class=&quot;cm&quot;&gt;/* 绑定关系区开始 */&lt;/span&gt;\n            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[ng-click]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                    &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                            &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ng-click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]();&lt;/span&gt;\n                            &lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n                        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;\n                    &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n            &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[ng-bind='counter']&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n                &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                        &lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;cm&quot;&gt;/* 绑定关系区结束 */&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;这样做的坏处是自己变更数据后，是无法自动改变DOM的，必须要想办法触发apply()，所以只能借助ng-click的包装，在ng-click中包含真实的click事件监听并追加脏值检测以判断是否要更新DOM。&lt;/p&gt;&lt;br&gt;&lt;p&gt;另外一个坏处是如果不注意，每次脏值检测会检测大量的数据，而很多数据是没有检测的必要的，容易影响性能。&lt;/p&gt;&lt;br&gt;&lt;p&gt;关于如何实现一个和angular一样的脏值检测，知道原理后还有很多工作要去做，以及如何优化等等。如果有兴趣可以看看民工叔曾经推荐的《Build Your Own Angular.js》，第一章Scope便讲了如何实现angular的作用域和脏值检测。对了，上面的例子也是从民工叔的博客稍加修改来的，建议最后去看下原文，链接在参考资料中。&lt;/p&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;ES5的getter与setter&lt;/u&gt;&lt;/b&gt;&lt;p&gt;在ES5中新增了一个Object.defineProperty，直接在一个对象上定义一个新属性，或者修改一个已经存在的属性， 并返回这个对象。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;descriptor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其接受的第三个参数可以取get和set并各自对应一个getter和setter方法：&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;\n\n&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defineProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'zhihu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'get：'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'set:'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;\n\n&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// set:2&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// get：2&lt;/span&gt;\n                      &lt;span class=&quot;c1&quot;&gt;// 2&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;基于ES5的getter和setter可以说几乎完美符合了要求。为什么要说&lt;b&gt;几乎&lt;/b&gt;呢？&lt;/p&gt;&lt;br&gt;&lt;p&gt;首先IE8及更低版本IE是无法使用的，而且这个特性是没有polyfill的，无法在不支持的平台实现，这也是基于ES5getter和setter的Vue.js不支持IE8及更低版本IE的原因。也许有人会提到avalon，avalon在低版本IE借助vbscript一些黑魔法实现了类似的功能。&lt;/p&gt;&lt;p&gt;除此之外，还有一个问题就是修改数组的length，直接用索引设置元素如items[0] = {}，以及数组的push等变异方法是无法触发setter的。&lt;br&gt;如果想要解决这个问题可以参考Vue的做法，在Vue的observer/array.js中，Vue直接修改了数组的原型方法：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayProto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;\n&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayMethods&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrayProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;\n&lt;span class=&quot;cm&quot;&gt; * Intercept mutating methods and emit events&lt;/span&gt;\n&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;\n\n&lt;span class=&quot;p&quot;&gt;;[&lt;/span&gt;\n  &lt;span class=&quot;s1&quot;&gt;'push'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;s1&quot;&gt;'pop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;s1&quot;&gt;'shift'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;s1&quot;&gt;'unshift'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;s1&quot;&gt;'splice'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;s1&quot;&gt;'sort'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;s1&quot;&gt;'reverse'&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;c1&quot;&gt;// cache original method&lt;/span&gt;\n  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;original&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arrayMethods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mutator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// avoid leaking arguments:&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// http://jsperf.com/closure-with-arguments&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;original&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ob&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__ob__&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inserted&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'push'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;inserted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;\n      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'unshift'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;inserted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;\n      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'splice'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;inserted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inserted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observeArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inserted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// notify change&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;notify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;\n  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;这样重写了原型方法，在执行数组变异方法后依然能够触发视图的更新。&lt;/p&gt;&lt;br&gt;&lt;p&gt;但是这样还是不能解决修改数组的length和直接用索引设置元素如items[0] = {}的问题，想要解决依然可以参考Vue的做法：&lt;br&gt;前一个问题可以直接用新的数组代替旧的数组；后一个问题可以为数组拓展一个$set方法，在执行修改后顺便触发视图的更新。&lt;/p&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;已被废弃的Object.observe&lt;/u&gt;&lt;/b&gt;&lt;p&gt;Object.observe曾在ES7的草案中，并在提议中进展到stage2，最终依然被废弃。&lt;br&gt;这里只举一个MDN上的例子：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// 一个数据模型&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Brendan Eich'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mr.'&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// 创建用户的greeting&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateGreeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello, '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;updateGreeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;observe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;changes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;changes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 当name或title属性改变时, 更新greeting&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;nx&quot;&gt;updateGreeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;由于是已经废弃了的特性，Chrome虽然曾经支持但也已经废弃了支持，这里不再讲更多，有兴趣可以搜一搜以前的文章，这曾经是一个被看好的特性（&lt;a href=&quot;//link.zhihu.com/?target=http%3A//div.io/topic/600&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Object.observe()带来的数据绑定变革&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）。&lt;br&gt;当然关于它也有一些替代品&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/polymer/observe-js&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Polymer/observe-js&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;/p&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;ES6带来的Proxy&lt;/u&gt;&lt;/b&gt;&lt;p&gt;人如其名，类似HTTP中的代理：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;target为目标对象，可以是任意类型的对象，比如数组，函数，甚至是另外一个代理对象。&lt;br&gt;handler为处理器对象，包含了一组代理方法，分别控制所生成代理对象的各种行为。&lt;/p&gt;&lt;p&gt;举个例子：&lt;/p&gt;&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Proxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n  &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'zhihu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;set &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;\n\n&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zhihu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;当然，Proxy的能力远不止此，还可以实现代理转发等等。&lt;/p&gt;&lt;p&gt;但是要注意的是目前浏览器中只有Firefox18支持这个特性，而babel官方也表明不支持这个特性：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Unsupported feature&lt;br&gt;Due to the limitations of ES5, Proxies cannot be transpiled or polyfilled.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;目前已经有babel插件可以实现，但是据说实现的比较复杂。&lt;br&gt;如果是Node的话升级到目前的最新版本应该就可以使用了，上面的例子测试环境为Node v6.4.0。&lt;/p&gt;&lt;br&gt;&lt;br&gt;参考资料&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/xufei/blog/issues/10&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Angular沉思录（一）数据绑定&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Object.defineProperty() - JavaScript | MDN&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/vuejs/vue/blob/dev/src/observer/array.js&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;vue/array.js at dev · vuejs/vue&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/observe&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Object.observe() - JavaScript | MDN&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Proxy - JavaScript | MDN&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;知乎的代码排版比较蛋疼，如果看的不爽可以去我的博客看：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.daraw.cn/2016/08/17/how-to-monitor-changes-of-js-variable/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;如何监听JS变量的变化&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n这个问题问的很好。流行的MVVM的JS库/框架都有共同的特点就是数据绑定，在数据变更后响应式的自动进行相关计算并变更DOM展现。所以这个问题也可以理解为<strong>如何实现MVVM库/框架的数据绑定</strong>。常见的数据绑定的实现有脏值检测，基于ES5的getter和setter，以及ES已…\n\n<a href=\"/question/44724640/answer/117339055\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-08-17\" target=\"_blank\" href=\"/question/44724640/answer/117339055\">编辑于 2016-08-17</a></p>\n\n",
    "link": "https://zhihu.com/question/44724640/answer/117339055"
  },
  {
    "question": "\n如何评价 Visual Studio Code？\n",
    "author": "黄玄",
    "content": "\n\n<textarea hidden class=\"content\">VS 团队拨了一小点人出来虐狗了…&lt;br&gt;&lt;br&gt;&lt;b&gt;“让你们看看什么叫专业的。” &lt;/b&gt;看着 Sublime Atom Brackets 此起彼伏得折腾了几年就叫喧着不要 IDE 只要 Editor ，VS 摸摸 VSC 的头如是说。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nVS 团队拨了一小点人出来虐狗了… <b>“让你们看看什么叫专业的。” </b>看着 Sublime Atom Brackets 此起彼伏得折腾了几年就叫喧着不要 IDE 只要 Editor ，VS 摸摸 VSC 的头如是说。\n\n<a href=\"/question/29984607/answer/46323044\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-04-30\" target=\"_blank\" href=\"/question/29984607/answer/46323044\">编辑于 2015-04-30</a></p>\n\n",
    "link": "https://zhihu.com/question/29984607/answer/46323044"
  },
  {
    "question": "\n21岁，大专应届生，web前端培训出来却发现要简历造假才有面试机会，而我不想，怎么样才能找到一份工作？\n",
    "author": "小爝",
    "content": "\n\n<textarea hidden class=\"content\">写简历是一门学问 尤其是技术岗位 投简历也是一门学门 尤其是技术岗位。&lt;br&gt;&lt;br&gt;先不说出身培训与否，学历如何，毕竟我也是低学历从业者。单说简历的形式和如何投递，我分享一下。&lt;br&gt;&lt;br&gt;我个人的简历我说过是放到googledoc上了，有些公司hr确实看不到，会自动过滤一些单位。&lt;br&gt;&lt;br&gt;再然后在线简历的投递我会偏向使用gmail的，因为至少我知道他会翻墙，能查阅资料，自学能力也不差。&lt;br&gt;&lt;br&gt;有twitter和github优先，我会去看他的twitter账户和github代码（这种简历我就没收到过几个）&lt;br&gt;&lt;br&gt;github上如果没有代码就别贴了，会减分。&lt;br&gt;&lt;br&gt;描述自己的时候用一段程序或者json的会加分。&lt;br&gt;&lt;br&gt;简历格式工整，用pdf和md双版本，双语的加分。&lt;br&gt;&lt;br&gt;不列举技术名词，而关注为什么使用这些技术和项目中如何使用框架的加分&lt;br&gt;&lt;br&gt;会主动说出框架优缺点，自己如何取舍的加分。&lt;br&gt;&lt;br&gt;没有大公司背景没有好项目做背书，就多说一些技术细节（自己的看法）&lt;br&gt;&lt;br&gt;列举一些正在看的书和电影爱好。&lt;br&gt;&lt;br&gt;说明自己的ide和开发环境系统。&lt;br&gt;&lt;br&gt;介绍一下自己的最有成就感的项目或者开发经历。&lt;br&gt;&lt;br&gt;如果我看到这样一份简历，我觉得我如果是一名hr我也会约你。因为你足够认真和有趣且态度专业。&lt;br&gt;&lt;br&gt;哪怕是专科刚毕业的你，培训刚结束的你。&lt;br&gt;&lt;br&gt;最后，我司现在缺1个高级前端，俩初中级前端。待遇13-30，坐标北京三元桥，国美互联网生态科技公司，如果觉得自己符合，欢迎留言勾搭。&lt;br&gt;&lt;br&gt;项目和视频，活动运营cms开发，app混合式开发有经验的优先。&lt;br&gt;&lt;br&gt;希望遇到足够自信的你！designsor#&lt;a href=&quot;//link.zhihu.com/?target=http%3A//gmail.com&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;gmail.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n写简历是一门学问 尤其是技术岗位 投简历也是一门学门 尤其是技术岗位。 先不说出身培训与否，学历如何，毕竟我也是低学历从业者。单说简历的形式和如何投递，我分享一下。 我个人的简历我说过是放到googledoc上了，有些公司hr确实看不到，会自动过滤一些单…\n\n<a href=\"/question/52939806/answer/133052928\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-11-26\" target=\"_blank\" href=\"/question/52939806/answer/133052928\">编辑于 2016-11-26</a></p>\n\n",
    "link": "https://zhihu.com/question/52939806/answer/133052928"
  },
  {
    "question": "\n如何看待《HTML5 定稿：手机 App 三年内将彻底消失？》\n",
    "author": "剑指斜阳",
    "content": "\n\n<textarea hidden class=\"content\">HTML5不会取代native app，但地位会逐步发展至与native APP相等甚至大于APP的地位。&lt;br&gt;&lt;br&gt;&lt;br&gt;互联网的极致是任何信息之间都是互联的（此处单说信息），web的特性使得信息与信息之间的链接畅通无阻。而PC上的客户端也好，手机上的APP也好，本质上是将部分信息封闭，阻断了链接。只要HTML5技术发展到体验能让用户满意，由于其在很多方面成本更低的优势，一定会有越来越多的服务提供者将阵地转到HTML5。&lt;br&gt;&lt;br&gt;PC端当年也是这个进化历程，从很乱很烂的网站排版体验，到后来大家慢慢的觉得web体验已经很好不输于同样的服务部署成客户端，再到后来性能和体验能支撑页游火爆发展。大家可以看看自己现在电脑上，除了生产工具和游戏视频等对专业性或者性能依赖很高的软件，还会下载多少其他软件呢？假如知乎推出PC客户端，你会下载使用吗？再进一步，在手机上，假如银行客户端、外卖、医院、快递查询等都有服务良好的微信公众号，你还会在手机上保留那些可能一个月才用一次的app吗？没错，后面说的这个应该很熟悉，因为就在发生。手机上沉默的app越来越多，大多数人常用8-10个app已经慢慢成为大家的共识，已经有创业者们趋于理性，并不是非要做出个app才算是一家像样的公司。越来越多的服务商或个人选择开微信公众号提供服务或创业已经是这个发展趋势的很好例子。&lt;br&gt;&lt;br&gt;&lt;br&gt;脑洞再开大，假设穿戴式设备，如glass watch之类成为下一个大入口，在如此小的屏幕上，你能想象把眼睛眨来眨去，或者手指滑动拨动滚轮来选择APP再进入服务门槛有多高吗？在手机和手表这种对即时性和精准性要求极高的场景，最大入口必然是Siri或微信之类的，所有的服务和信息都是高度整合一体化的，以纯信息流的方式展现。那个时候，肯定是一个泛HTML的标准做为主流，native application作为补充。比如一个场景：你说饿了，穿戴式设备一定是按照你的喜好直接给你推荐餐馆，确认后直接订餐导航，如果不满意直接帮你看外卖等。而不会是现在手机上这样，要你先打开大众点评选，然后跳到支付宝付个款，最后发现大众点评导航不好用，切到百度或高德导航，甚至大众点评没想要的，你又切到饿了么。。。看着刚出的Apple watch那么小屏幕上的众多APP已经够难受了，如果大家还是在上面抢着做APP，体验绝对是灾难性的。我觉得最后发展趋势，一定是大多数服务和信息会以依附于操作系统或者超级APP的形式存在。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;任何一个行业从野蛮发展跑马圈地到成熟细分，肯定都是一个标准逐渐统一的过程。之所以现在native app地位远高于HTML5，1是因为现在web技术确实离native app性能和体验差距太大，2是因为现在跑马圈地还处于尾声，虽然大局已定，但很多垂直和细分领域仍充满变数，很多人依然存着做入口的心，发着做平台的梦，3是因为整个创业投资收购的游戏规则核心就是dau，你的商业模式不那么靠谱都没关系，只要能把用户做起来，投资者或者接盘侠都会买单。&lt;br&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;我想等上面三个条件不满足后，创业和投资者更趋于理性，HTML5的地位一定会逐步提升的。而随着HTML5的定稿和移动格局（特指手机）逐步明朗，这个三个条件两三年内可能就会失效，再经过一段时间的市场发展，HTML5应该会在大部分创业者和企业的战略地位越来越高而且高过native APP。&lt;br&gt;&lt;b&gt;但这些都谈不上取代或者消亡，是一个此消彼长的过程，而我，看好HTML5。&lt;/b&gt;&lt;br&gt;&lt;br&gt;以下插一些我个人的吐槽：&lt;br&gt;我相信互联网从业者，尤其是开发、产品、运营、数据等，对于native app这种服务提供方式应该会有很多共同的抱怨：&lt;br&gt;1.native app 开发成本高：ios和android工程师成本要高于web开发。&lt;br&gt;2.维护成本和迭代成本高：线上代码有问题，web只需要修改上线即可，但APP改完，ios送苹果审核至少一周，黄花菜都凉了，上架后还得重新攒评论冲榜，android要快些，不过你不花钱人家不给你上好位置；另外，随着app的版本迭代，尤其是有重大框架调整时，你还需要花很大精力去维护以前老版本。&lt;br&gt;3.app的推广也要花大笔的钱，当然web站照样要花钱，但是导流选择更多，议价能力也要好些。&lt;br&gt;4.数据监测、统计：因为我是做数据的，对此深有感触。APP里统计的埋点或者SDK开发，尤其是不同的版本框架发生变化，统计规则发生调整时，都会带来大量额外的工作，而且如果某个版本有疏漏，直接很长一段时间数据不准确无法使用，这对于要快速从数据中洞察而言，简直是大大的障碍。另外从大数据的概念、角度来说，封闭的app生态，也不利于数据整合。&lt;br&gt;站在企业的角度，如果HTML或泛HTML技术达到在大多数情况下足够让用户满意的程度，我们何不去拥抱呢？</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nHTML5不会取代native app，但地位会逐步发展至与native APP相等甚至大于APP的地位。 互联网的极致是任何信息之间都是互联的（此处单说信息），web的特性使得信息与信息之间的链接畅通无阻。而PC上的客户端也好，手机上的APP也好，本质上是将部分信息封闭，…\n\n<a href=\"/question/28672128/answer/41743194\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-03-11\" target=\"_blank\" href=\"/question/28672128/answer/41743194\">编辑于 2015-03-14</a></p>\n\n",
    "link": "https://zhihu.com/question/28672128/answer/41743194"
  },
  {
    "question": "\n24 岁女生转行做 Web 前端晚吗？\n",
    "author": "Jasin Yip",
    "content": "\n\n<textarea hidden class=\"content\">谢邀。&lt;br&gt;&lt;br&gt;既然已经有了方向，那就比较好办。&lt;br&gt;&lt;br&gt;首先把 C 语言放下，别去学。&lt;br&gt;&lt;br&gt;HTML 和 CSS 可以边做小项目边查，比如你可以模仿百度首页做一个小页面（只做 Logo 、搜索框以及「百度一下」的按钮），只要求把样子做出来，不要求做功能。&lt;br&gt;&lt;br&gt;然后 Javascript 那块，先把语法学一下，然后还是边做小项目边查，你可以先尝试着去写一些简单的 DOM 操作，比如可以试着用 Javascript 去修改文字的颜色、修改一些元素的宽高等。&lt;br&gt;&lt;br&gt;接着，可以入手 jQuery 了，jQuery 封装了很多简单的函数，而且兼容性良好，初学者可以先用 jQuery 来写一些简单的东西，比如做一个从左向右移动的正方形的动画。&lt;br&gt;&lt;br&gt;这个时候，应该去学习一下后端语言，比如你举例的 PHP，简单易用，我当时学的时候是看 PHP100 的经典教程，感觉都是讲得挺简单易懂的，还把顺便教你怎么去配置 WAMP（Windows、Apache、MySQL、PHP）环境，这个很重要。&lt;br&gt;&lt;br&gt;这些都大概每个都学那么一周（HTML 和 CSS 一起学），大约一个月，你就可以写一个稍为有意思一点的项目了，比如写一个留言板啥的……&lt;br&gt;&lt;br&gt;然后去学 Bootstrap，开始接触响应式布局，并利用它里面的组件做一个漂亮的界面。&lt;br&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;以上是前端入门的大概路线，对于你问题里问的其它问题，比如选哪种语言好，这个其实没所谓的，PHP 有 PHP 的好处，Node.js 有 Node.js 的好处，但个人认为 PHP 是最容易入门的。&lt;br&gt;&lt;br&gt;女生学完是很好找工作的，学完之后你也可以来找我内推，我们做的是在线编程教育产品（&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jisuanke.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;计蒜客&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;），也收实习生，尤其是前端目前比较缺人。&lt;br&gt;&lt;br&gt;工资高不高只与技术有关，与性别的关系不大。&lt;br&gt;&lt;br&gt;实习工资也不一定是低的，比如我们公司就很高嘿嘿（逃</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n谢邀。 既然已经有了方向，那就比较好办。 首先把 C 语言放下，别去学。 HTML 和 CSS 可以边做小项目边查，比如你可以模仿百度首页做一个小页面（只做 Logo 、搜索框以及「百度一下」的按钮），只要求把样子做出来，不要求做功能。 然后 Javascript 那块，…\n\n<a href=\"/question/28008276/answer/39355617\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-02-10\" target=\"_blank\" href=\"/question/28008276/answer/39355617\">编辑于 2015-02-10</a></p>\n\n",
    "link": "https://zhihu.com/question/28008276/answer/39355617"
  },
  {
    "question": "\n如何练习前端技术？\n",
    "author": "Jobs Long",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;&lt;b&gt;最近还是碰到蛮多学生，或者其他行业的同学想转行来做前端工程师的，也在有没有更好的方式大家可以一起学习，讨论交流。&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;个人觉得作为一个完全对编程领域完全小白的外行来说，来当前端工程师还是比较有难度，前端目前并不是一个简单的工作，你需要有下面三方面的能力才能做得比较出色：&lt;/b&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;计算机知识背景（基本的编程能力）&lt;/li&gt;&lt;li&gt;良好的设计素养&lt;/li&gt;&lt;li&gt;前端的工程能力&lt;/li&gt;&lt;/ul&gt;像我的朋友就是做得很不错的一位前端工程师：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//taixiaoyu.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Portfolio - Xiaoyu Tai&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;所以鉴于跟一个知乎朋友的私信，我建立了一个 Teambition 协作项目「自学工程师（前端）」，完全免费，我会每周的任务的形式发布一些前端任务给大家（会规划成一个课程），大家也可以在上面规划自己的前端学习任务，这样大家也能更好的交流一些学习经验，当然这是一个长期项目（1~2年），之后也会邀请一些很优秀的前端工程师加入帮助大家，以及发布一些实战项目给大家处理，希望大家享受这段路途，成为更优秀的自己！&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-857465bea0540519f2784662600193c7_b.png&quot; data-rawwidth=&quot;1022&quot; data-rawheight=&quot;490&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1022&quot; data-original=&quot;https://pic4.zhimg.com/v2-857465bea0540519f2784662600193c7_r.png&quot;&gt;&lt;br&gt;&lt;p&gt;请发邮件把自己的邮箱或者联系方式通过「私信」或者邮件发给我：jobslong@estgroupe.com, 之后会邀请大家加入 ：）&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;抱歉因为 Teambition 项目团队人数的限制, 免费项目暂时 10 人，所在暂时停止邀请其他人的加入，不过可以查看信息；&lt;/p&gt;&lt;br&gt;&lt;p&gt;项目链接：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.teambition.com/project/58451cfbf2c4c49c4c4a8b05&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;teambition.com/project/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;58451cfbf2c4c49c4c4a8b05&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;大家称呼我为晓文就好啦~~&lt;/p&gt;&lt;br&gt;&lt;p&gt;更新于 2016 年 12 月 5 日 &lt;/p&gt;&lt;p&gt;***&lt;/p&gt;&lt;p&gt;&lt;b&gt;野狗网的一篇文章写的蛮有用的，前后端分离的应用越来越多之后，作为前端工程师，也需要一套技术体系来整理思路，我把文章的内容整理成了一个列表，可以看一下：&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;前端技术体系：&lt;br&gt;&lt;ul&gt;&lt;li&gt;业务逻辑体系（关注服务的完整性和可复用性）&lt;ul&gt;&lt;li&gt;鉴权系统&lt;ul&gt;&lt;li&gt;集中处理登陆、支付等需要风险控制较高的公共业务&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;配置系统（集中管理配置项）&lt;ul&gt;&lt;li&gt;功能开关&lt;/li&gt;&lt;li&gt;链接地址&lt;/li&gt;&lt;li&gt;AB测试控制等等&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;消息系统&lt;ul&gt;&lt;li&gt;推送通知&lt;/li&gt;&lt;li&gt;消息推送&lt;/li&gt;&lt;li&gt;客户等即时通信场景&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;业务系统&lt;ul&gt;&lt;li&gt;Business Components（具体跟业务领域有关的组件单元）&lt;/li&gt;&lt;li&gt;公共/全局的样式库和功能库&lt;ul&gt;&lt;li&gt;在各业务线之间保持用户体验的一致性&lt;/li&gt;&lt;li&gt;业务组件在公共的样式库和功能库基础之上开发可复用的组件，提高开发效率&lt;/li&gt;&lt;li&gt;公共的功能库包括登录、支付、数据统计等常用的功能，这一部分可以增加测试覆盖率来保障质量&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;第三方库&lt;ul&gt;&lt;li&gt;样式框架：Bootstrap, Material Design, Semantic UI, etc.&lt;/li&gt;&lt;li&gt;JavaScript Framework: React, Vue, Angular, etc.&lt;/li&gt;&lt;li&gt;功能库：Fetch Modernizr Sentry GA&lt;/li&gt;&lt;li&gt;基础库：jQuery Zetpo Underscore Lodash&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;基础设施体系（关注系统稳定性）&lt;ul&gt;&lt;li&gt;资源管理系统&lt;ul&gt;&lt;li&gt;CDN &lt;/li&gt;&lt;li&gt;图片管理&lt;/li&gt;&lt;li&gt;发布工具 &lt;/li&gt;&lt;li&gt;离线包管理&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;数据持久化系统&lt;ul&gt;&lt;li&gt;存储上层系统的非核心业务数据，比如错误数据或者用户行为数&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;运维系统&lt;ul&gt;&lt;li&gt;版本控制&lt;/li&gt;&lt;li&gt;发布脚本&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;保障体系（关注质量和可用性）&lt;ul&gt;&lt;li&gt;测试系统&lt;ul&gt;&lt;li&gt;&lt;p&gt;静态检查 - Eslint JSCS&lt;/p&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Unit Test - Karma Jasmine Mocha&lt;/p&gt;&lt;/li&gt;&lt;li&gt;End to End Test - Protracker Nightwatch Selenium （关注主流程和回归测试）&lt;br&gt;&lt;/li&gt;&lt;li&gt;持续集成 - TravisCI CircleCI&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;监控系统（从用户的角度判断系统的可用性）&lt;ul&gt;&lt;li&gt;&lt;p&gt;可用性监控 - 页面访问成功率 接口成功率&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;错误监控 - 收集并汇总应用系统抛出的错误信息&lt;/p&gt;&lt;/li&gt;&lt;li&gt;业务指标监控 - 实时订单量 事件触发量&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;统计系统（统计系统和监控系统的区别在于，监控关注的是实时数据，统计关注的是全量数据，监控是为了提高团队的故障响应能力，统计是为产品与业务分析提供基础。）&lt;ul&gt;&lt;li&gt;&lt;p&gt;性能统计&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;访问量统计&lt;/p&gt;&lt;/li&gt;&lt;li&gt;用户行为统计&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;开发 &amp;amp; 部署工具集&lt;ul&gt;&lt;li&gt;&lt;p&gt;代码管理 - Git Stash&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;包管理 - NPM Bower Yarn&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;构建工具 - Webpack&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;任务管理工具 - Gulp Grunt&lt;/p&gt;&lt;/li&gt;&lt;li&gt;脚手架 - Yeoman&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;通用组件系统（集中管理可复用的开发资源）&lt;/li&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;组件的质量标准&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;组件的测试用例&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;组件的复用机制&lt;/p&gt;&lt;/li&gt;&lt;li&gt;Demo与Gallery&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br&gt;原文链接：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzI0ODA2ODU2NQ%3D%3D%26mid%3D2651130879%26idx%3D1%26sn%3De76f68dc6fb90713b9971408f1a38c17%26chksm%3Df257cb45c5204253ca272990c7e262dff832cae3abc6adfab86e2856c00486ad9c11a0b49a21%26mpshare%3D1%26scene%3D1%26srcid%3D1103OF2zISTdHASFyGpjgmKg%23rd&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端技术体系大局观&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;更新于 2016-11-07  11：10&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;-----------------------------------&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;自己搭一小论坛，写一点编程相关的东西：&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//suip.cc/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Suip 碎片论坛&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;更新于 2016-10-01 11：18；&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;-----------------------------------&lt;/b&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;如果你还没有称手的编辑器，前端更推荐使用 Sublime Text 或者 Atom.&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//laravel-china.org/topics/2825&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;从这篇教程开始, 成为 Sublime Text 大师_Laravel China 社区&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;更新于 2016-9-18 18:36&lt;/p&gt;&lt;p&gt;&lt;b&gt;-----------------------------------&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;如果你对 HTML &amp;amp; CSS 不是熟练的话，可以尝试一下这个站点，让自己的基础功更扎实 :)&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//learn.shayhowe.com/html-css/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Learn to Code HTML &amp;amp; CSS&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;更新于 2016-3-16 01:28&lt;/p&gt;&lt;p&gt;&lt;b&gt;-----------------------------------&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt; 修改了一些错别字，推荐一个前端基础的文章，写的更全面，大家可以对前端这个职业也有一个更理性和全面的认知：&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/fouber/blog/issues/10%23issuecomment-163077809&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;前端工程——基础篇 · Issue #10 · fouber/blog · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/1c3ace33c70ebacbf2403c8b24c29742_b.png&quot; data-rawwidth=&quot;1018&quot; data-rawheight=&quot;754&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1018&quot; data-original=&quot;https://pic3.zhimg.com/1c3ace33c70ebacbf2403c8b24c29742_r.png&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;我给我弟写的---------》》》 如何成为一个前端工程师？&lt;/b&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;一个垂直招聘网站：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.nashangban.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哪上班 - 互联网好工作近在咫尺&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ， 可以随时上去看看公司的招聘要求，及时更新自己的技术和简历。（没打算做广告 这个只是建议！！）&lt;/p&gt;&lt;br&gt;&lt;p&gt;我大约搜集了20几个公司的招聘信息，其他的大致浏览了一下；信息看一下附件(Excel);&lt;/p&gt;&lt;p&gt;======================================================================&lt;/p&gt;&lt;br&gt;&lt;p&gt;前端薪酬（北京）：6K-20K&lt;/p&gt;&lt;p&gt;工作经验要求：1-3年以上&lt;/p&gt;&lt;p&gt;学历要求：大多数都不会要求，一部分要求本科计算机相关专业；&lt;/p&gt;&lt;p&gt;前端的主要工作内容：&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t1. PC端和移动端的Web页面设计、开发、架构、技术研究；&lt;/p&gt;&lt;p&gt;\t2. 与后端沟通，完成产品需求；&lt;/p&gt;&lt;p&gt;\t3. 兼容性解决、页面和性能优化；&lt;/p&gt;&lt;p&gt;\t4. UI设计、交互设计、UX、文档工作&lt;/p&gt;&lt;br&gt;&lt;p&gt;前端需要掌握的技术：&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t1. HTML/CSS/XHTML/XML/DOM/JSON/Ajax&lt;/p&gt;&lt;p&gt;\t2. HTML5/CSS3&lt;/p&gt;&lt;p&gt;\t3. Javascript 以及JS框架：&lt;/p&gt;&lt;p&gt;\t\tBootstrap 、jQuery、Ext、Dojo、Prototype、Node.js&lt;/p&gt;&lt;p&gt;\t\tAngularJS、Backbone、Ember.js&lt;/p&gt;&lt;p&gt;\t4. 移动端框架：&lt;/p&gt;&lt;p&gt;\t\tjQuery Mobile、zepto、Sencha Touch&lt;/p&gt;&lt;p&gt;\t5. 新的技术语言：Less、Sass、Haml、&lt;/p&gt;&lt;p&gt;\t6. WEB标准、兼容性解决、WEB语义化、页面架构、REST&lt;/p&gt;&lt;p&gt;\t7. 网络协议、WebSocket、Spdy、&lt;/p&gt;&lt;p&gt;\t8. 性能优化、安全性、可用性、SEO、服务器端基本知识&lt;/p&gt;&lt;p&gt;\t9. 工具：linux、bower、git、sublime、grunt&lt;/p&gt;&lt;br&gt;&lt;p&gt;性格要求：&lt;/p&gt;&lt;p&gt;\t主动学习&lt;/p&gt;&lt;p&gt;\t求知欲&lt;/p&gt;&lt;p&gt;\t责任感&lt;/p&gt;&lt;p&gt;\t沟通、逻辑理解能力&lt;/p&gt;&lt;p&gt;\t书面表达&lt;/p&gt;&lt;p&gt;\t进取心&lt;/p&gt;&lt;br&gt;&lt;p&gt;加分项：&lt;/p&gt;&lt;p&gt;\t1. 熟悉后端技术(PHP+Java+Python+C+CPP)&lt;/p&gt;&lt;p&gt;\t2. 熟悉设计师工作：Photoshop、Flash、&lt;/p&gt;&lt;p&gt;\t3. 动画制作经验、游戏开发经验&lt;/p&gt;&lt;p&gt;\t4. 熟悉版本控制系统Git 以及Linux开发环境&lt;/p&gt;&lt;p&gt;\t5. 移动端Web开发项目&lt;/p&gt;&lt;p&gt;\t6. 项目经验，参与开源项目贡献过代码（Github）&lt;/p&gt;&lt;p&gt;\t7. 书面表达能力强，有自己的博客&lt;/p&gt;&lt;br&gt;&lt;p&gt;学习指导：&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t学习指导有个人的经验在里面，可以作为参考，如果你有自己喜欢和认同的学习方式，就去自己学习，殊途同归，别忘记目标就ok。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/756389e30296c3b3efe58e3197bbfe6a_b.jpg&quot; data-rawwidth=&quot;694&quot; data-rawheight=&quot;208&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;694&quot; data-original=&quot;https://pic3.zhimg.com/756389e30296c3b3efe58e3197bbfe6a_r.jpg&quot;&gt;&lt;br&gt;&lt;p&gt;在技术线的同时开始阅读一些关于下面知识的书籍和博客，积累知识和经验：&lt;/p&gt;&lt;br&gt;&lt;p&gt;Web标准、网络协议基础知识、服务器端的基本配置基础知识&lt;/p&gt;&lt;p&gt;安全性和可用性&lt;/p&gt;&lt;p&gt;Web 性能优化&lt;/p&gt;&lt;p&gt;前端技术发展&lt;/p&gt;&lt;br&gt;&lt;p&gt;在学习的过程中能够掌握常用的工具的使用：&lt;/p&gt;&lt;br&gt;&lt;p&gt;1. 各种浏览器上的Web开发者测试工具:&lt;/p&gt;&lt;p&gt;Firebug: &lt;a href=&quot;//link.zhihu.com/?target=http%3A//getfirebug.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Firebug&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Web Developer: &lt;a href=&quot;//link.zhihu.com/?target=http%3A//chrispederick.com/work/web-developer/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Web Developer&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Chrome、Firfox、IE浏览器都有Web控制台工具，熟悉一下；&lt;/p&gt;&lt;br&gt;&lt;p&gt;2. Linux 和 Git 版本控制系统 ：&lt;/p&gt;&lt;p&gt;\t关于Linux我没有什么好推荐的，我觉得一个是自己兴趣，对命令行比较喜欢，肯花时间，我学Linux也差不多也有一年多了，感觉还要很多东西需要去看，网上有很多教程和书籍，如果需要我推荐的话告诉我，如果不需要就自己摸索吧。开发环境必须熟悉；&lt;/p&gt;&lt;br&gt;&lt;p&gt;\tGit 对你的项目文件的源码进行版本控制，非常赞的一个东西，也是开发Linux的Linus Torvalds 开发的一个产品，这个需要掌握；&lt;/p&gt;&lt;br&gt;&lt;p&gt;\tPro Git（中文版）: &lt;a href=&quot;//link.zhihu.com/?target=http%3A//git.oschina.net/progit/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Pro Git（中文版）&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;\t注册一个Github账号吧 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GitHub 路 Build software better, together.&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，里面有很多开源的项目，参考，使用之类的都很方便；&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t我的账号是：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/jobslong&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JobsLong 路 GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;3. Sublime 是我现在用得文本编辑器，现在也主要拿它写代码，很不错的一个开发工具：&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.sublimetext.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Sublime Text: The text editor you'll fall in love with&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;4. 其他的工具你会慢慢有需求，然后慢慢学习就ok。（ps 我也在学习之中）&lt;/p&gt;&lt;br&gt;&lt;p&gt;给你的资源可能都是英文的，如果觉得困难，自己在网上 搜索一些中文教程，就ok，有问题给我发邮件；&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;mailto:josblongbj@gmail.com&quot;&gt;jobslong@estgroupe.com&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;希望你经过一年的学习，能够有一两年工作经验的水平；&lt;/p&gt;&lt;br&gt;&lt;p&gt;学习资源的推荐：&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t你或许可以这样开始学习：&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t1. 从网上w3c开始学习基础前端开发的内容：&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t英文：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3schools.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;W3Schools Online Web Tutorials&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;\t中文：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3school.com.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;w3school 在线教程&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/068b377c54fb7174e98de373a5da200c_b.jpg&quot; data-rawwidth=&quot;323&quot; data-rawheight=&quot;150&quot; class=&quot;content_image&quot; width=&quot;323&quot;&gt;&lt;br&gt;&lt;p&gt;\t这些都是基础，不要觉得简单，花一个月的时间把这个网站上得案例自己写一下，这样以后熟悉后面的知识更熟练一点，碰到任何问题给我email，或者google；&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t还有这些概念也需要理解：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/8161faf8fb3d3dcf985b73814d6e9d6b_b.jpg&quot; data-rawwidth=&quot;345&quot; data-rawheight=&quot;179&quot; class=&quot;content_image&quot; width=&quot;345&quot;&gt;&lt;br&gt;&lt;p&gt;\t把这两块的基础知识过一遍，我相信你写简单的静态页面应该没问题，但是也可能会很难看，设计这个东西需要你自己多领悟，多去看看别人的作品，好的网站设计，慢慢培养感觉；&lt;/p&gt;&lt;br&gt;&lt;p&gt;\t现在需要你稍微明确一下自己的方向，如果你感觉你CSS理解的很深刻，就去找一本讲CSS和CSS3的经典书，深入的学习一下，接受一些简单的实际项目，不论赚钱不赚钱；另一边也一样，如果你觉得服务器端的 JS代码和jQuery脚本写的很上手，就找相关的书籍深入学习，接手一些网站；&lt;/p&gt;&lt;br&gt;&lt;p&gt;在同时，需要你学习两个东西：&lt;/p&gt;&lt;br&gt;&lt;p&gt;Bootstrap&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//getbootstrap.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Bootstrap&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.bootcss.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Bootstrap中文网&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;进阶：深入理解Bootstrap&lt;/p&gt;&lt;br&gt;&lt;p&gt;Node.js&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//nodejs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;node.js&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//cnodejs.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CNode：Node.js专业中文社区&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;进阶书籍： Node.js 实战&lt;/p&gt;&lt;br&gt;&lt;p&gt;去官网文档，学习示例，书籍，教程，应该会有一个快速提升的阶段；&lt;/p&gt;&lt;br&gt;&lt;p&gt;这些学完，你应该步入新手阶段，对前端和一些技术也会有一些自己的看法，但是记住不要固执和谩骂；&lt;/p&gt;&lt;br&gt;&lt;p&gt;我有学习一个非常棒的课程，哈佛大学的公开课，如果你在学习基础的时候有时间，可以看看这个课程的视频，网易有翻译的公开课：&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//v.163.com/special/opencourse/buildingdynamicwebsites.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;哈佛大学公开课：构建动态网站&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;我非常喜欢这个教授，有机会去美国一定去拜访 David Malan&lt;/p&gt;&lt;br&gt;&lt;p&gt;不过网易上翻译的是2010年的了，但是非常棒，没有过时，也算做Web开发的入门课程；&lt;/p&gt;&lt;br&gt;&lt;p&gt;可以去课程官网看看今年的课程，里面有很好的知识点和好玩的东西，也有课程作业和项目文件：&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//www.cs75.net/Main_Page&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;cs75.net/Main_Page&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//cs75.tv/2012/summer/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CS75.tv&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;你很聪明，但是很多事情要坚持和乐观，一起努力&lt;/p&gt;&lt;br&gt;&lt;p&gt;等你看完这些指导，我的后端工程师指导应该也会写好了，再发给你。&lt;/p&gt;&lt;br&gt;&lt;p&gt;如果需要任何资源和帮助(英文方面也可以)， email 我。&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/v2-857465bea0540519f2784662600193c7_200x112.png\" data-rawwidth=\"1022\" data-rawheight=\"490\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/v2-857465bea0540519f2784662600193c7_r.png\">\n<b>最近还是碰到蛮多学生，或者其他行业的同学想转行来做前端工程师的，也在有没有更好的方式大家可以一起学习，讨论交流。</b> <b>个人觉得作为一个完全对编程领域完全小白的外行来说，来当前端工程师还是比较有难度，前端目前并不是一个简单的工作，你需要有下面三…</b>\n\n<a href=\"/question/24543125/answer/28771021\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-08-04\" target=\"_blank\" href=\"/question/24543125/answer/28771021\">编辑于 2016-12-06</a></p>\n\n",
    "link": "https://zhihu.com/question/24543125/answer/28771021"
  },
  {
    "question": "\nIframe 有什么好处，有什么坏处？国内还有哪些知名网站仍用Iframe，为什么？有哪些原来用的现在抛弃了？又是为什么？\n",
    "author": "张云龙",
    "content": "\n\n<textarea hidden class=\"content\">iframe原本的用法在现在看来是不合时宜的，问题太多了，不一一列举，但是它的其他功能却是不错的黑魔法，这里列举一些，想到了再更新：&lt;br&gt;&lt;ol&gt;&lt;li&gt;用来实现长连接，在websocket不可用的时候作为一种替代，最开始由google发明。&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ibm.com/developerworks/cn/web/wa-lo-comet/%23N10101&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Comet：基于 HTTP 长连接的“服务器推”技术&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;跨域通信。&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/rainman/archive/2011/02/20/1959325.html%23m3&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;JavaScript跨域总结与解决办法&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ，类似的还有浏览器多页面通信，比如音乐播放器，用户如果打开了多个tab页，应该只有一个在播放。&lt;/li&gt;&lt;li&gt;历史记录管理，解决ajax化网站响应浏览器前进后退按钮的方案，在html5的history api不可用时作为一种替代。&lt;/li&gt;&lt;li&gt;纯前端的utf8和gbk编码互转。比如在utf8页面需要生成一个gbk的encodeURIComponent字符串，可以通过页面加载一个gbk的iframe，然后主页面与子页面通信的方式实现转换，这样就不用在页面上插入一个非常巨大的编码映射表文件了，其中子页面内容：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gbk&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;\n      &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;//利用a元素的href属性来encode&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/?q=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//这里读取的时候会自动编码&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/?q=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;把这个iframe部署到父页面的同源服务上，就能在父页面直接调用iframe中的encoding接口了。&lt;/li&gt;&lt;li&gt;评论里有提到，用iframe实现无刷新文件上传，在FormData不可用时作为替代方案&lt;/li&gt;&lt;li&gt;在移动端用于从网页调起客户端应用（&lt;b&gt;&lt;u&gt;此方法在iphone上并不安全，慎用！&lt;/u&gt;&lt;/b&gt;具体风险看这里  &lt;a href=&quot;//link.zhihu.com/?target=http%3A//drops.wooyun.org/papers/5309&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;iOS URL Scheme 劫持&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ）。比如想在网页中调起支付宝，我们可以创建一个iframe，src为：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;alipayqr://platformapi/startapp?saId=10000007&amp;amp;clientVersion=3.7.0.0718&amp;amp;qrcode={支付二维码扫描的url}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;浏览器接收到这个url请求发现未知协议，会交给系统处理，系统就能调起支付宝客户端了。我们还能趁机检查一下用户是否安装客户端：给iframe设置一个3-5秒的css3的transition过渡动画，然后监听动画完成事件，如果用户安装了客户端，那么系统会调起，并将浏览器转入后台运行，进入后台的浏览器一般不会再执行css动画，这样，我们就能通过判断css动画执行的时长是否超过预设来判断用户是否安装某个客户端了：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;\n&lt;span class=&quot;cm&quot;&gt; * 调起客户端&lt;/span&gt;\n&lt;span class=&quot;cm&quot;&gt; * @param url {String}&lt;/span&gt;\n&lt;span class=&quot;cm&quot;&gt; * @param onSuccess {Function}&lt;/span&gt;\n&lt;span class=&quot;cm&quot;&gt; * @param onFail {Function}&lt;/span&gt;\n&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;\n&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSuccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onFail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 记录起始时间&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 创建一个iframe&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IFRAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 飘出屏幕外&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;position&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'absolute'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-1000px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-1000px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 设置一个4秒的动画用于检查客户端是否被调起&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitTransition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'all 4s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 监听动画完成时间&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'webkitTransitionEnd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n            &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n                &lt;span class=&quot;c1&quot;&gt;// 如果动画执行时间在预设范围内，就认为没有调起客户端&lt;/span&gt;\n                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onFail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'function'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n                    &lt;span class=&quot;nx&quot;&gt;onFail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSuccess&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'function'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n                &lt;span class=&quot;c1&quot;&gt;// 动画执行超过预设范围，认为调起成功&lt;/span&gt;\n                &lt;span class=&quot;nx&quot;&gt;onSuccess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 启动动画&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;ifr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-10px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;li&gt;创建一个全新的独立的宿主环境。经 &lt;a data-hash=&quot;8802ca35d2693691abf7993ecc0be034&quot; href=&quot;//www.zhihu.com/people/8802ca35d2693691abf7993ecc0be034&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@EtherDream&quot; data-hovercard=&quot;p$b$8802ca35d2693691abf7993ecc0be034&quot;&gt;@EtherDream&lt;/a&gt; 大神提醒，iframe还可以用于创建新的宿主环境，用于隔离或者访问原始接口及对象，比如有些前端安全的防范会覆盖一些原生的方法防止恶意调用，那我们就能通过创建一个iframe，然后从iframe中取回原始对象和方法来破解这种防范。类似的还有  &lt;a data-hash=&quot;3ec3b166992a5a90a1083945d2490d38&quot; href=&quot;//www.zhihu.com/people/3ec3b166992a5a90a1083945d2490d38&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@贺师俊&quot; data-hovercard=&quot;p$b$3ec3b166992a5a90a1083945d2490d38&quot;&gt;@贺师俊&lt;/a&gt; 曾经提到的javascript裸对象创建中的一种方法：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//hax.iteye.com/blog/1663476&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;如何创建一个JavaScript裸对象&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ，一般所见即所得编辑器也是由iframe创建的， &lt;a data-hash=&quot;1a91c7a549250fafb1f18e8103398105&quot; href=&quot;//www.zhihu.com/people/1a91c7a549250fafb1f18e8103398105&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@Dion&quot; data-hovercard=&quot;p$b$1a91c7a549250fafb1f18e8103398105&quot;&gt;@Dion&lt;/a&gt; 的回答有提到&lt;/li&gt;&lt;li&gt;IE6下用于遮罩select。经 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//weibo.com/u/1689516781&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;@yaniv&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 提醒想起来的。曾经在ie6时代，想搞一个模态窗口，如果窗口叠加在select元素上面，是遮不住select的，为了解决这个问题，可以通过在模态窗口元素下面垫一个iframe来实现遮罩，好坑爹的ie6，还我青春韶华~~&lt;br&gt;&lt;/li&gt;&lt;li&gt;to be continued ...&lt;/li&gt;&lt;/ol&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\niframe原本的用法在现在看来是不合时宜的，问题太多了，不一一列举，但是它的其他功能却是不错的黑魔法，这里列举一些，想到了再更新： 用来实现长连接，在websocket不可用的时候作为一种替代，最开始由google发明。<a href=\"//link.zhihu.com/?target=http%3A//www.ibm.com/developerworks/cn/web/wa-lo-comet/%23N10101\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Comet：基于 HTTP 长连接的“服务器推”…<i class=\"icon-external\"></i></a>\n\n<a href=\"/question/20653055/answer/35387821\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-12-18\" target=\"_blank\" href=\"/question/20653055/answer/35387821\">编辑于 2015-03-25</a></p>\n\n",
    "link": "https://zhihu.com/question/20653055/answer/35387821"
  },
  {
    "question": "\n你们的2016年前端学习计划是什么？\n",
    "author": "Jerret",
    "content": "\n\n<textarea hidden class=\"content\">没必要追新。基础很重要：&lt;br&gt;1、css,html，js（ES5，ES2015，ES2016）遵循标准来学习&lt;br&gt;2、http，socket等网络协议。&lt;br&gt;3、数据结构和算法&lt;br&gt;4、设计模式，这里不建议为了设计而学习，多了解，项目多思考。&lt;br&gt;5、项目抽象，建模，分层的能力。&lt;br&gt;&lt;br&gt;总之，代码尽可能不重复，易读易维护易扩展。&lt;br&gt;&lt;br&gt;软能力：&lt;br&gt;1、沟通能力&lt;br&gt;2、推动项目可执行，有反馈&lt;br&gt;3、提高英语能力&lt;br&gt;4、提炼出自己的学习方法</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n没必要追新。基础很重要： 1、css,html，js（ES5，ES2015，ES2016）遵循标准来学习 2、http，socket等网络协议。 3、数据结构和算法 4、设计模式，这里不建议为了设计而学习，多了解，项目多思考。 5、项目抽象，建模，分层的能力。 总之，代码尽可能不重复…\n\n<a href=\"/question/39208186/answer/87328472\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-02-21\" target=\"_blank\" href=\"/question/39208186/answer/87328472\">编辑于 2016-02-21</a></p>\n\n",
    "link": "https://zhihu.com/question/39208186/answer/87328472"
  },
  {
    "question": "\n关于「真阿当」对目前流行前端技术的批判，大家有什么看法？\n",
    "author": "尤雨溪",
    "content": "\n\n<textarea hidden class=\"content\">首先 Angular/React 的流行，肯定和 Google/FB 的牌子有关系，跟风的也肯定大有人在，善意地点醒这些人，无可厚非。但是直接一棒子打死说这些东西是『旁门左道』、『伪前端』、『不接地气假高大上』、『解决的都是非核心痛点』（都是原话哦），这就更多是非理性的抵触。&lt;br&gt;&lt;br&gt;我是真心怀疑阿当老师是不是因为自己的心理抵触所以根本没有好好深入研究过这些『新』技术。（火不过两年？Angular 在国外已经火了不止两年了...）这里摘录阿当老师的一些看法：&lt;br&gt;&lt;br&gt;- 『坚信基于widget和OO的组件化编程才是正确的套路，而不是mvc或者是变种的mvvm之流，后者解决不了无数据通信的单页应用代码该如何组织的问题』&lt;br&gt;- 『不和服务端通信的复杂交互的业务才是前端真正的痛点』&lt;br&gt;&lt;br&gt;换言之，阿当老师觉得现在流行的新框架没有一个解决了这些问题。我相信如果对于 React、Angular 2、甚至是 Vue 的组件系统有哪怕是基础的了解，是不会说出这样的话的。现在这些新框架的核心思想其实是共通的，那就是 UI 应该是状态的声明式映射，理想情况下路由也是状态的一部分，一切复杂的交互逻辑，最终都抽象为状态的变化。在此基础上以组件为单位对复杂度进行切分，具体的 API 实现有差别，但其实解决的痛点恰恰就是阿当所说的。至于组件的 OO，其实在实践中早就发现在前端过度的 OO 抽象徒增复杂度，同时引入了继承不灵活的缺点，所以更普遍的看法是 prefer composition over inheritance，通过 mixin 或是 higher order components （高阶组件）来实现组合复用。这些东西人家生态圈里都有考虑过好吗？&lt;br&gt;&lt;br&gt;然而阿当在批评这些框架的时候，谈的却是『不该围绕 mvc/mvvm 组织代码』、『前端路由不该围绕 url 实现』，『不该把后端的东西生搬硬套到前端』，我心里的感受就是：纳尼？我们谈的真的是同样的概念吗？这话拿来批评 Backbone 还说得过去，但是拿来批评 Angular/React... 完全鸡同鸭讲啊！你真的理解你批评的这些东西了吗？你该不会是看到 MV* 就没看下去了吧？&lt;br&gt;&lt;br&gt;总结一下，就是我觉得阿当老师对于 Angular 和 React 的理解是有偏差的，他觉得这两个东西『方向不对』，问题是人家的方向并不是他所理解的那个方向... 他目前的批评，我没看到有在点子上的，他提出的『问题』，倒是在现有生态中都有对应的解决方案，只是他似乎并不了解（或者，因为『方向不对』而不屑去了解）。&lt;br&gt;&lt;br&gt;我觉得阿当老师对于 SPA 肯定是有自己的深厚经验的，但可能也正是因为这种经验导致的自负所累，使得他对所谓的『新玩具』有着相当情绪化的抵触。我觉得不论是作为技术选型的决策者，还是自己造轮子的人，有自己的判断固然是很重要，但这种判断得建立在一种开放的心态和充足的信息量上。前端确实新东西层出不穷，但我还真不相信多到了连看都没时间看的地步。经验丰富的人大部分东西几分钟就可以判断值不值得进一步了解，如果仅仅因为新东西太多懒得筛选就选择自己造轮子，我觉得并不是明智的选择。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n首先 Angular/React 的流行，肯定和 Google/FB 的牌子有关系，跟风的也肯定大有人在，善意地点醒这些人，无可厚非。但是直接一棒子打死说这些东西是『旁门左道』、『伪前端』、『不接地气假高大上』、『解决的都是非核心痛点』（都是原话哦），这就更多是非…\n\n<a href=\"/question/38924821/answer/78861138\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-12-28\" target=\"_blank\" href=\"/question/38924821/answer/78861138\">编辑于 2015-12-29</a></p>\n\n",
    "link": "https://zhihu.com/question/38924821/answer/78861138"
  },
  {
    "question": "\n如何衡量一个人的 AngularJS 水平？\n",
    "author": "徐飞",
    "content": "\n\n<textarea hidden class=\"content\">这个问题邀请我回答就对了。我提供一些面试时候问过的问题：&lt;br&gt;&lt;br&gt;1. angular的数据绑定采用什么机制？详述原理&lt;br&gt;2. 两个平级界面块a和b，如果a中触发一个事件，有哪些方式能让b知道，详述原理&lt;br&gt;3. 一个angular应用应当如何良好地分层？&lt;br&gt;4. angular应用常用哪些路由库，各自的区别是什么？&lt;br&gt;5. 如果通过angular的directive规划一套全组件化体系，可能遇到哪些挑战？&lt;br&gt;6. 分属不同团队进行开发的angular应用，如果要做整合，可能会遇到哪些问题，如何解决？&lt;br&gt;7. angular的缺点有哪些？&lt;br&gt;8. 如何看待angular 1.2中引入的controller as 语法？&lt;br&gt;9. 详述angular的“依赖注入”&lt;br&gt;10.  如何看待angular 2……&lt;br&gt;&lt;br&gt;上面是需要长篇大论的问题，再来一些小问题：&lt;br&gt;&lt;br&gt;1. ng-if跟ng-show/hide的区别有哪些？&lt;br&gt;2. ng-repeat迭代数组的时候，如果数组中有相同值，会有什么问题，如何解决？&lt;br&gt;3. ng-click中写的表达式，能使用JS原生对象上的方法，比如Math.max之类的吗？为什么？&lt;br&gt;4. {{now | 'yyyy-MM-dd'}}这种表达式里面，竖线和后面的参数通过什么方式可以自定义？&lt;br&gt;5. factory和service，provider是什么关系？&lt;br&gt;&lt;br&gt;能全部答出来的人，应该大家都能认识了……</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n这个问题邀请我回答就对了。我提供一些面试时候问过的问题： 1. angular的数据绑定采用什么机制？详述原理 2. 两个平级界面块a和b，如果a中触发一个事件，有哪些方式能让b知道，详述原理 3. 一个angular应用应当如何良好地分层？ 4. angular应用常用哪些路…\n\n<a href=\"/question/36040694/answer/65624196\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-09-29\" target=\"_blank\" href=\"/question/36040694/answer/65624196\">编辑于 2015-09-29</a></p>\n\n",
    "link": "https://zhihu.com/question/36040694/answer/65624196"
  },
  {
    "question": "\n互联网产品经理需要懂得哪些技术？\n",
    "author": "九爷",
    "content": "\n\n<textarea hidden class=\"content\">&lt;img data-rawwidth=&quot;1242&quot; data-rawheight=&quot;2208&quot; src=&quot;https://pic4.zhimg.com/v2-491b3c7f1cb8b2b3288cb2ac8b471d53_b.png&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1242&quot; data-original=&quot;https://pic4.zhimg.com/v2-491b3c7f1cb8b2b3288cb2ac8b471d53_r.png&quot;&gt;&lt;br&gt;有些人真是我跟你讲历史你跟我讲意义，我跟你讲意义你跟我讲发展，我跟你讲发展你跟我讲历史。&lt;br&gt;什么都是你有理。&lt;br&gt;&lt;br&gt;移动 APP：&lt;br&gt;&lt;br&gt;iOS：&lt;br&gt;1. 了解 Objective-C 是一种什么性质的语言（动态静态语言的区别）。&lt;br&gt;2. 了解什么叫 SDK、封装。&lt;br&gt;3. 了解什么是 MVC 结构模型。&lt;br&gt;4. 了解在纯技术上前端和后端如何区分。&lt;br&gt;5. 了解什么是 API。&lt;br&gt;6. 了解后端常用的语言及其优缺点（Java、NodeJS、PHP等）&lt;br&gt;7. 了解常用的数据库类型及其优缺点（MySQL、MongoDB、SQLite 等）&lt;br&gt;8. 看得懂每年的 WWDC。&lt;br&gt;9. 知道如何通过翻阅 iOS Developer Guides 来确定自己想实现的功能在 iOS 上是否有基础技术支持。&lt;br&gt;10. 会用英语关键词通过 Google、Github、StackOverflow 来查找遇到 bug 或想实现功能的可行性，甚至直接找到对应库。&lt;br&gt;11. 与开发合作两个版本后可以根据他的开发效率预估工程量和排期。&lt;br&gt;&lt;br&gt;Android：&lt;br&gt;与 iOS 类似。&lt;br&gt;&lt;br&gt;&lt;br&gt;网站：&lt;br&gt;1. 了解 HTML、CSS、JS 都是干啥的。&lt;br&gt;2. 了解基本的 Box 模型概念。&lt;br&gt;3. 了解 DOM 概念。&lt;br&gt;4. 了解同步/异步的概念。&lt;br&gt;5. 了解前端常用的框架和库，比如 Bootstrap、Angular、Backbone、jQuery、Vue.js，并知道它们各自的优缺点和适用环境。&lt;br&gt;6. 了解移动环境和 PC 环境的区别对前端开发的影响。&lt;br&gt;7. 了解 HTML5 相对于 HTML4.01 多出来的特性分别是什么，并试图想象应用场景。&lt;br&gt;&lt;br&gt;&lt;br&gt;项目：&lt;br&gt;1. 了解什么叫「构建」、「集成」。&lt;br&gt;2. 知道 SVN 和 Git 的使用是为了解决什么问题。&lt;br&gt;3. 试着通过实践学会使用 git，甚至了解 git-flow。&lt;br&gt;4. 了解常见的持续集成工具。&lt;br&gt;5.  了解发布流程。&lt;br&gt;&lt;br&gt;&lt;br&gt;差不多先这些。&lt;br&gt;&lt;br&gt;这么说吧，上面这些内容我平时跟程序员聊天时候经常讨论，但他们不相信我（毕业后）没写过代码。&lt;br&gt;&lt;br&gt;&lt;a data-hash=&quot;d543539f941b684fa551b127173b7624&quot; href=&quot;//www.zhihu.com/people/d543539f941b684fa551b127173b7624&quot; class=&quot;member_mention&quot; data-hovercard=&quot;p$b$d543539f941b684fa551b127173b7624&quot;&gt;@四海飘渺&lt;/a&gt; 的评论让我看到电脑前一个泪流满面的程序员哈哈哈哈哈哈哈，正好借机会说一下吧：&lt;br&gt;&lt;br&gt;程序员都是很实诚、很讲逻辑的人，所以你的逻辑思维能力一定要够强，这样你就完全没必要了解技术细节了。所谓逻辑思维能力够强举几个例子：&lt;br&gt;1. 不光做产品，你一定要自己画交互图，我是指流程性的交互图，这样可以验证你自己画的页面和流程是不是走得通、有缺失。这是结构上的逻辑思维能力。&lt;br&gt;2. 涉及到每一个「数据」和「操作」，一定要想清楚各种边界条件。比如一个购物车界面，画完一个一堆商品的购物车界面就完了？你得想全面没有商品的时候什么模样？购物车有没有商品数量上限？没网络拉不出来数据怎么提示？等等等这些都要想全面，这是细节上的逻辑思维能力。&lt;br&gt;&lt;br&gt;其他的先不说了。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img data-rawwidth=\"1242\" data-rawheight=\"2208\" src=\"https://pic4.zhimg.com/v2-491b3c7f1cb8b2b3288cb2ac8b471d53_200x112.png\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/v2-491b3c7f1cb8b2b3288cb2ac8b471d53_r.png\">\n有些人真是我跟你讲历史你跟我讲意义，我跟你讲意义你跟我讲发展，我跟你讲发展你跟我讲历史。 什么都是你有理。 移动 APP： iOS： 1. 了解 Objective-C 是一种什么性质的语言（动态静态语言的区别）。 2. 了解什么叫 SDK、封装。 3. 了解什么是 MVC 结构模…\n\n<a href=\"/question/21339628/answer/130246025\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-11-07\" target=\"_blank\" href=\"/question/21339628/answer/130246025\">编辑于 2016-11-09</a></p>\n\n",
    "link": "https://zhihu.com/question/21339628/answer/130246025"
  },
  {
    "question": "\n如何看待阿里无线前端发布的Weex?\n",
    "author": "尤雨溪",
    "content": "\n\n<textarea hidden class=\"content\">其实就叫 Vue-Native 我也不介意的...&lt;br&gt;&lt;br&gt; 快点开源啦！&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;有人说不能水，其实技术上的大家都懂，就是个看法而已。我个人而言，很高兴看到 Vue 的 API 设计被大家认可采用，不过阿里这次直到发布之前我也是完全不知道，还是略有一种吃了苍蝇的感觉（事后勾股跟我沟通过了，所以也还好）&lt;br&gt;&lt;br&gt;确实如一些同学指出的那样，我们会担心阿里对于这个项目的长线支持如何，以及对于开源的 commitment 有多少。针对自家业务定制无可厚非，但是既然宣布要开源，希望阿里能有有足够的诚意给出一套大家都能用的方案。做好国际化，做好文档，做好开发者体验的各种细节，不要让它沦为 KPI 驱动的牺牲品。如果想和 Vue 做官方的合作，可以找我聊聊。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n其实就叫 Vue-Native 我也不介意的... 快点开源啦！ --- 有人说不能水，其实技术上的大家都懂，就是个看法而已。我个人而言，很高兴看到 Vue 的 API 设计被大家认可采用，不过阿里这次直到发布之前我也是完全不知道，还是略有一种吃了苍蝇的感觉（事后勾股…\n\n<a href=\"/question/37636296/answer/72881168\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-11-19\" target=\"_blank\" href=\"/question/37636296/answer/72881168\">编辑于 2015-11-20</a></p>\n\n",
    "link": "https://zhihu.com/question/37636296/answer/72881168"
  },
  {
    "question": "\n怎么提高javascript编程能力?\n",
    "author": "豪情",
    "content": "\n\n<textarea hidden class=\"content\">首先要树立个目标，然后量化他。&lt;br&gt;比如：初级程序员，中级程序员，高级程序员，前端架构师。分别有哪些具体的要求，然后向这个目标无限的接近，具体的可以找找网上流传阿里的等级图。算了，我还是贴上来：&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/1a17f8254c509503b0013374f4ecf315_b.jpg&quot; data-rawwidth=&quot;1680&quot; data-rawheight=&quot;984&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1680&quot; data-original=&quot;https://pic2.zhimg.com/1a17f8254c509503b0013374f4ecf315_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;其次，要树立个计划，然后执行他。&lt;br&gt;&lt;br&gt;最后，权找个hr，时常测量自己，顺便掌握最新市场动态或技术走向。&lt;br&gt;&lt;br&gt;最快最笨最直接的方法就是：多写，写不出来先看，看不懂先查，查不了，就换个关键字再查。&lt;br&gt;代码的问题最终还是需要代码来解决他，积累你对代码的看法，积累代码对世界的影响。&lt;br&gt;&lt;br&gt;经过前辈们的总结或本人的实践经历，自学的同学建议是这样，找本js入门的书和妙味视频结合看。一个主攻面试，一个主攻实践。&lt;br&gt;看书的目的主要是掌握理论知识，梳理js的知识结构，最主要的一点是为了应付面试。面试的主要环节是为了表达自己的想法，只凭简单的理解，是不能完全的表达出一个问题的广度或深度，只有结合了行业中的术语约定或一些习惯叫法，表达出来的意思才更专业。如果不是这样，表达出来的意思别说面试官听不懂，连自己都感觉要么表达不出来，要么表达的不是想要的。但书着重于对理论知识的阐述，缺少实际例子的支持，很难快速的消化。这时候视频可以弥补这个缺陷，而且妙味视频用简单的代码实现一些常见的效果，学习兴趣很快就能被吸引。但是对js的高级特性，个人感觉视频没有达到那个深度。而且js的一些基础的问题，或一个知识的扩充，限于各种条件的限制，可能无法完全表达出来。所以要结合书来补充。&lt;br&gt;一般学习的心态是：不急不躁，不快不慢。持之以恒，相信自己。&lt;br&gt;&lt;br&gt;学习主要技巧是动手及主动思考，视频在欣赏的同时记得跟敲代码不低于三遍，直到隔一天隔一周能重复敲出代码或回忆起思路为止。而且边敲边做笔记，以做复习时快速的查阅之用。学习的技巧是动手，学习的灵魂是坚持，学习的快乐就是分享。只要坚持，其实每天都在成长，只是感觉不明显而已。但这个月与前几月相比，已经有量的变化，量变引起质变。&lt;br&gt;另外一个建议：QQ群不是学习的主战场，群只是学习的辅助手段，要是想安心学习就是关QQ，短网，靠自己。&lt;br&gt;学习的态度需要务实，生活是残酷的，战场是血腥的，一份耕耘，一份收获，务实的学习好基础才能走的更远。&lt;br&gt;&lt;br&gt; 敲出来的代码，思路不清晰时，可以在firebug,chrome里边打个断点跟一下，理理思路，理解代码的逻辑，这样影响才会深刻。初学者没办法都是这样，也只能这样。但是初期可能稍为慢一点，但一直不会这么慢，也不会想象的那么长，因为随着基本概念的掌握，编码技巧的熟悉，开发工具的熟练，消化视频的速度会越来越快。&lt;br&gt;&lt;br&gt;&lt;br&gt;其它的学习方法在这：&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3600308.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;1. web前端开发分享-css,js入门篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3601666.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2. web前端开发分享-css,js进阶篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3604459.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;3. web前端开发分享-css,js提高篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3607133.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;4. web前端开发分享-css,js工具篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3611394.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;5. web前端开发分享-css,js深化篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3632392.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;6. web前端开发分享-css,js移动篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;其它的加这个群吧：389875212，真正的业界良心群，禁止闲聊，专业学习群。&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic2.zhimg.com/1a17f8254c509503b0013374f4ecf315_200x112.jpg\" data-rawwidth=\"1680\" data-rawheight=\"984\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic2.zhimg.com/1a17f8254c509503b0013374f4ecf315_r.jpg\">\n首先要树立个目标，然后量化他。 比如：初级程序员，中级程序员，高级程序员，前端架构师。分别有哪些具体的要求，然后向这个目标无限的接近，具体的可以找找网上流传阿里的等级图。算了，我还是贴上来： 其次，要树立个计划，然后执行他。 最后，权找个hr…\n\n<a href=\"/question/29933334/answer/46175391\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-04-28\" target=\"_blank\" href=\"/question/29933334/answer/46175391\">编辑于 2015-04-28</a></p>\n\n",
    "link": "https://zhihu.com/question/29933334/answer/46175391"
  }
]