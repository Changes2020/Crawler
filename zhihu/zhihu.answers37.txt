[
  {
    "question": "\n实现单行文字两端对齐时，使用 &amp;nbsp; 当作空格和使用 white-space: pre 的原生空格有什么区别？哪个更好一些？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">首先提问者并没有把他的意图描述清楚。如果意图都未描述清楚，自然就难以进行“哪种更好一些”的比较，因为比较的基准就不存在。而描述原始意图的补充说明现在已经被删掉了，得查看日志才看得到。这里我照录一下：   &lt;br&gt;&lt;blockquote&gt;最近有一个项目页面中制作的时候，ui大致是这样的（这是一个发表评论的页面）：  &lt;br&gt;优 点：XXXXX  &lt;br&gt;缺 点：XXXX  &lt;br&gt;使用心得：XXXX  &lt;br&gt;为了保证对齐，所以我在写html的时候，在“优”和“点”之间用了4个&amp;amp;nbsp当空格。但是leader在检验的时候说这里不能用&amp;amp;nbsp，要用空格，然后在css里面加white-space:pre。然后说现在基本没有网站用&amp;amp;nbsp当空格了。  &lt;br&gt;因为为了保证项目进度（事实上我们最近很缺人~），我也没有太多的去和leader讨论这个，就按照他说的进行了修改。  &lt;br&gt;但是我还是很想弄清楚这样有什么不好的……因为我记得刚刚开始学xhtml的时候，里面貌似有规定空格和大于小于什么的都需要转义，所以空格一般都是用&amp;amp;nbsp  &lt;br&gt;虽然只是小问题，但是还是想请教一下，非常感谢……  &lt;br&gt;另外，这种情况下，大家做页面会用空格吗？因为我目前没有发现有什么css属性可以比较好的控制文字的两边对齐显示……&lt;/blockquote&gt;&lt;br&gt; 可见提问者的意图是文字排版对齐。&lt;b&gt;理论上说&lt;/b&gt;，所有排版样式需求都应该以CSS达成。所以无论是用NBSP还是一般SP+white-space:pre&lt;b&gt;都是不正确&lt;/b&gt;的。原理@梁海已经说过了，不重复。   &lt;br&gt;&lt;br&gt; 正确的做法是@米粽 说的text-align:justify。但是还需要加上CSS3草案的text-justify:distribute 。   &lt;br&gt;&lt;br&gt; “正确的做法”存在的问题是：&lt;b&gt;除了IE之外，尚无浏览器实现text-justify:distribute。&lt;/b&gt;且IE必须还加上text-align-last:justify。   &lt;br&gt;&lt;br&gt; 是的，尽管IE常为我们所不齿，但是在文字排版和国际化方面，IE是做的最好的。仅就两端分布对齐这个特例而言，IE领先了其他浏览器10年以上。   &lt;br&gt;&lt;br&gt; @梁海 提到的CJK的justify问题也确实存在。直到最近WebKit引擎才实现CJK的text-align:justify（即相当于text-justify:inter-ideograph）。不过即使很早就已经实现CJK两端对齐的Gecko，由于没有实现text-align-last，所以无法实现最后一行或单行的两端分布对齐。而本例的本质恰好是单行的两端分布对齐。   &lt;br&gt;&lt;br&gt; @梁海 和其他人提到的workaround包括：全角空格和letter-spacing。从效果上说是可行的。但是&lt;b&gt;letter-spacing是一个糟糕的方案&lt;/b&gt;，因为你必须手动计算letter-spacing，而且对于字数不同的label，letter-spacing也是不同的。这就造成了内容和格式的强耦合，完全违背了内容与样式分离的要求。这很好理解，因为letter-spacing并没有表达出真正的设计意图（两端分布对齐）。这是我在博客、论坛、问答等中始终强调的，CSS是一门针对排版和设计的DSL，其可维护性来自于准确的表达设计意图。   &lt;br&gt;&lt;br&gt; 下面说一下我个人推荐的解决方案：   &lt;br&gt;&lt;br&gt; 一、实用主义方案：使用全角空格。解说如下：   &lt;br&gt;&lt;br&gt; 全角空格从某种程度上说可以是一种workaround。但是这个世界上并没有绝对的事情。比如，对于作品名，有&amp;lt;cite&amp;gt;标签，但是有多少中文前端开发者使用？几乎没有。这是因为在西方，书名要用斜体，因此通过&amp;lt;cite&amp;gt;标签附加上样式是顺理成章的。但是在中文里习惯用书名号，而不是斜体，所以尽管&amp;lt;cite&amp;gt;可以提供额外的语义，但是也没有人去用。我们可以思考一个问题：书名号是内容呢还是样式呢？   &lt;br&gt;&lt;br&gt; 在轻率的给出答案之前，可以再思考一下&amp;lt;q&amp;gt;的例子。应该用引号，还是应该用&amp;lt;q&amp;gt;标签？这个问题倒是中西共通的。   &lt;br&gt;&lt;br&gt; 经过仔细思考，我想大家会发现，结构和语义细化到何种程度实际上是有弹性的。固然用&amp;lt;q&amp;gt;标签提供了更精细的语义，但是在许多场合未必有用。回到书名号的例子，从一般感觉来说，标点符号会被作为内容，但是如果考虑到书名号在横排时用《》，而在竖排时用浪线，就会发现书名号也有作为样式的一面。   &lt;br&gt;&lt;br&gt; 就提问者的用例而言，恰好也是一个方块字排版才会出现的样式需求。（阿拉伯文、泰文等或许也会有类似的需求，这超出我的知识范围，请懂这些文字排版的同志补充了。）在西文里是没有这样的样式的。而在传统中文排版中，如@梁海 所说，恰恰就是以空格来控制的。因此我们可以将全角空格理解为类似标点符号的作用。这样我们就不用为没有用CSS达成效果而耿耿于怀了。   &lt;br&gt;&lt;br&gt; 二、理想主义方案：   &lt;br&gt;&lt;br&gt; label {  &lt;br&gt;   text-align: justify;  &lt;br&gt;&lt;br&gt;   text-align: end; /* 对于除了IE之外的浏览器用尾对齐覆盖之前的两端对齐方式 */ &lt;br&gt;&lt;br&gt;   text-align-last: justify;  &lt;br&gt;   text-justify: distribute;  &lt;br&gt; }  &lt;br&gt;&lt;br&gt; 这里的理念是：   &lt;br&gt;&lt;br&gt; 不同浏览器的表现不一样是可接受的。   &lt;br&gt;&lt;br&gt; 在IE和将来正确实现CSS3-text模块的浏览器中将两端分布对齐。【注：因为手头没有IE9和IE10无法测试，有可能需要增加额外的hack。】   &lt;br&gt;&lt;br&gt; 在当前除IE以外的主流浏览器中将右对齐。这是一种常见的label对齐设计，这里假设以此作为fallback是能为设计师所接受的。  &lt;br&gt;&lt;br&gt; 以上。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n首先提问者并没有把他的意图描述清楚。如果意图都未描述清楚，自然就难以进行“哪种更好一些”的比较，因为比较的基准就不存在。而描述原始意图的补充说明现在已经被删掉了，得查看日志才看得到。这里我照录一下： 最近有一个项目页面中制作的时候，ui大致…\n\n<a href=\"/question/19895400/answer/13383826\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/19895400/answer/13383826\">发布于 2011-11-24</a></p>\n\n",
    "link": "https://zhihu.com/question/19895400/answer/13383826"
  },
  {
    "question": "\n如何看待民工叔因为 Teambition 是 React 技术栈而离职？\n",
    "author": "黄之昊",
    "content": "\n\n<textarea hidden class=\"content\">徐飞的这个事情，我想了一段时间，很多问题徐飞自己也提到了。我个性也是喜欢不争的，但从做上leader几年来几乎每天都在争，会有点累，会有点郁闷，但该争的还是要争。前段时间面试了一个还不错的同学，他的一个case跟大家分享一下：&lt;blockquote&gt;他的团队有12个人，一个月两个迭代：一个大迭代一个bugfix迭代，但每个人的代码他都会review。我问他12个人至少2-3周的代码量这么大全部都review不累么？他很坦然的说这是他的职责，他就该干这样的事。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;架构师在一艘船上是领航员的角色，船长决定了目的地，而航线的规划是领航员的职责，他需要根据未来的天气变化，燃料、淡水的余量，补给点的情况给出合理的路线并规避风险。徐飞的case里，几个水手跳起来说领航员的规划有问题应该按他们的规划走，这时候船长不作为，领航员自己不争，撂挑子不干，最终受害的是一船人。这其实不是什么技术架构之争了，是职业性不足的问题。&lt;br&gt;&lt;br&gt;高晓松在节目里提到过，在大航海的早期海上定位技术还很差的时候，海军船上是有这个规矩的，任何人对船航行的方向提出质疑就把他仍下海。因为谁都说不准，谁都有可能对，但放着不管就会出乱子，在无数的可能性中犹豫不前，不如选定一个方向义无反顾的走下去。随着海上定位技术越来越精确了，这个规矩也就废除了。&lt;br&gt;&lt;br&gt;说完职业性的问题后回到技术架构上来，现在真有人能讨论出react、vue、ng2这堆东西的绝对优劣么？不可能有，那就意味着想从纯技术的角度去让一方说服另一方是不现实的，那这个时候团队当前的技术栈，人员的能力，前后端协作方式，未来可能遇到的挑战反而是架构师需要更多考虑的，手上是好牌也好烂牌也好，都得想出一个资源最大化的策略来。&lt;br&gt;&lt;br&gt;我不清楚tb现在面临的挑战是什么，招聘是否困难，但对于大多数创业团队而言，用流行的成熟的技术是好事，意味着你能用较低的成本从市场上找到很多有基础的人。追新的成本是很高的，你需要不断填坑，能吃透了并熟练运用的人非常难招，勉强招来一些只懂皮毛的人，结果就是他带着老思想在新架构下瞎搞，过不了多久就要重构。而一个靠谱的leader手上用练兵的心态长远培养人的话，追新是有大回报的，但前提条件不少，能满足这些条件的往往是大公司。&lt;br&gt;&lt;br&gt;回到tb的场景下，从徐飞的自白中看得出来react是多数派，但react只是组件层的东西，徐飞要争的不是这一层而是后面对数据模型层的封装，现在的团队想用react+redux来干，是可能勉强了一点，但从长远看，团队有这样的群众基础，架构师又有足够的研发能力，redux不满足的部分可以靠团队的力量慢慢补全的，或者结合自身的业务特点做出一个比redux更优秀的方案来都是有可能的，事实上也看到后面团队有在这个方向上努力。 &lt;br&gt;&lt;br&gt;徐飞的离开是他遵循自己内心的选择，但不是一个优秀架构师该有的表现。&lt;br&gt;&lt;br&gt;============&lt;br&gt;&lt;br&gt;虽然有些作死，还是写下了这篇。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n徐飞的这个事情，我想了一段时间，很多问题徐飞自己也提到了。我个性也是喜欢不争的，但从做上leader几年来几乎每天都在争，会有点累，会有点郁闷，但该争的还是要争。前段时间面试了一个还不错的同学，他的一个case跟大家分享一下：他的团队有12个人，一个…\n\n<a href=\"/question/53022579/answer/133489606\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/53022579/answer/133489606\">发布于 2016-11-29</a></p>\n\n",
    "link": "https://zhihu.com/question/53022579/answer/133489606"
  },
  {
    "question": "\n如何评价 minggeJS ？\n",
    "author": "廖祜秋",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;关于这个问题，昨天我写了一个文章在微信公众号上，现在贴过来。&lt;/p&gt;&lt;br&gt;&lt;p&gt;原文：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzI1MjA5NDY0Nw%3D%3D%26mid%3D401307451%26idx%3D1%26sn%3D3129ec6a9ad69cd61ce4cf58d99672d0%26scene%3D1%26srcid%3D12155zzqOaUhqf9i9LUB1TCa%26from%3Dgroupmessage%26isappinstalled%3D0%23wechat_redirect&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;我为什么旗帜鲜明地反对 MingGeJS&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;---&lt;/p&gt;&lt;br&gt;&lt;p&gt;    大概一个月之前，@耀源 同学发布的 YYText 项目(&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/ibireme/YYText&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;ibireme/YYText · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;) 大家应该还记得吧，那真是一个很棒的项目。&lt;/p&gt;&lt;br&gt;&lt;p&gt;   而 MingGeJS 项目 READEME 『文风大胆』：&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;为什么我要开发一个山寨JQUERY？老实说我从来没用过JQUERY，正因为我反感JQUERY。 为什么我反感，因为我完全有开发JQUERY的能力，JQUERY的底层我都了如指掌。 &lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;本人文化程度不高，初中毕业！半句英文都不会，但是我相信只要肯努力一样可以实现自己的梦想。MingGeJS的梦想有点大胆，就是在全球范围内，占据JQUERY百分之50以上的用户份额。MingGeJs已在GIT开源，欢迎各路前端高手对MingGeJs类库进行评测！&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;我是mingge 请支持国产minggeJS类库，因为我们都是中国人。&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;    昨晚有人发我项目链接，我一看，挺好玩的：作者性格桀骜不驯，卓尔不群，好样的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;    但我仔细看了代码，又看了大部分的 Issue 以及 Pull Request 中的讨论。都是因为针对作者 README 引起的各种对骂，一片乌烟瘴气。于是今天早上，我提交了一个 Pull Request，删除了所有的文件， Pull Request 说明中写着：&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;『东拼西凑，弄了一个类库，代码一塌糊涂，把无知当作个性。乌烟瘴气的社区氛围，就是因为有这样的人存在！有人居然还用图灵和他对比，呵呵。』&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;p&gt;    这个估计是我本年度第二次用『呵呵』这个词。当然，这个 Pull Request 作者肯定是不会接受的，就好像 Vim 和 Emacs 那样。随后，作者在 Pull Request 的给出了评论和回复:&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;东拼西凑的意思是不是说我抄袭别人代码，CTRL+V呢，老子告诉你，99.9%都是我原创敲写，代码一塌糊涂，是什么意思呢，你什么水平，敢较量吗，我呸&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;嘴巴像吃了屎一样烂，点开他的头像，长得丑也算，最恐怖就是长得丑嘴巴又臭！DELPHI C 要挑战的来找我&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;p&gt;   中午的时候，@代码家 的『干货集中营』提到：&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;『假设：一个国外的开发者用英语写了说，我做了个比 JQuery 速度更快的库，那么国内很多人都会抱着崇拜心理去看。……每一次嘲讽，可能都是在抹杀中国开源的发展。没准给 minggeJS 一些鼓励，大家齐心协力，没准哪一天真就比 JQuery 快了。』&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;p&gt;   我认同 @代码家 同学的宽厚。&lt;/p&gt;&lt;br&gt;&lt;p&gt;    而实际上，我们对于在正道上努力的人同学和朋友，我们从不吝惜我们的赞赏，如果需要，我们总是愿尽我们所能提供帮助。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;    我所不认同的，是他那不求真务实的态度。作者项目 README 提到的那些，基于目前的项目中的代码实现，已经不是所谓的狂妄了，有些甚至是完全不尊重事实依据的睁眼说瞎话了。&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;    评论区中， @GinRyan 的言论，最为客观和中肯：&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;ReadMe写的狂气十足。技术社区里一般不会在语言上占上风打败别人（以及他人作品），这实属情商低的表现。我所见的README都是介绍自己的库解决什么问题或者难题，为别人开发过程提供什么方便，增加什么效率，以及编译、引用和使用方法等。至少我个人认为只要是纯技术性的物件不能带有民族主义意识，至少从README上看，就已经让很多人不想继续看下去了。README并没有循循善诱告诉来者本库是什么库，怎么使用等，而且连开源版权许可证说明都没有。好事者一定像Oracle会找出Android中抄袭代码一样，也来找你代码中抄袭别的库的代码。我个人立场认为还是在README中减少出现“挑战”，“别人的真心差”的字眼。在技术社区里，请保持谦卑的态度和姿态，强者自然会从你的代码里或者使用过程中看到你的长处，弱者自然会对你的优秀代码仰视的。&lt;/p&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;    而我更不认同的就是，这样的做事态度和做事方法，这绝对不是什么『中国开源的发展』，这是是堕落！是沉沦！&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;    大家看过  @耀源 同学的 YYText (&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/ibireme/YYText&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;ibireme/YYText · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;) 或者他的其他项目吗？&lt;strong&gt;这是我们学习的榜样，如果真要谈中国开源发展的将来，我认为：这才是！&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;    大概两个月前，天猫有一个 ReactNative 的使用总结，有很多人夸赞。根据我的了解，那是一个较为夸大失真的。纵使再多人夸赞，我仍旧在微博上公开批评。（&lt;a href=&quot;//link.zhihu.com/?target=http%3A//weibo.com/1503535883/CFtNIe12S%3Ftype%3Dcomment&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;挂羊头卖狗肉，明明只用了 iOS，这个已经很... 来自廖祜秋liaohuqiu_秋百万&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）&lt;/p&gt;&lt;br&gt;&lt;p&gt;    今天，微信移动客户端开发团队官号，WeMobileDev，又出了一篇好文：《Android 内存优化杂谈》。看完之后，我深深佩服。&lt;/p&gt;&lt;br&gt;&lt;p&gt;   这个是一个绝好的时代，百家争鸣：有些人严肃，有些人浮夸；有人谦逊，有人狂傲。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;    Time will tell.&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n关于这个问题，昨天我写了一个文章在微信公众号上，现在贴过来。 原文：<a href=\"//link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzI1MjA5NDY0Nw%3D%3D%26mid%3D401307451%26idx%3D1%26sn%3D3129ec6a9ad69cd61ce4cf58d99672d0%26scene%3D1%26srcid%3D12155zzqOaUhqf9i9LUB1TCa%26from%3Dgroupmessage%26isappinstalled%3D0%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">我为什么旗帜鲜明地反对 MingGeJS<i class=\"icon-external\"></i></a> --- 大概一个月之前，@耀源 同学发布的 YYText 项目(<a href=\"//link.zhihu.com/?target=https%3A//github.com/ibireme/YYText\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ibireme/YYText · GitHub<i class=\"icon-external\"></i></a>) 大家应该还记得吧，那真是一个很棒的项目。 而 MingGeJS 项目 READEM…\n\n<a href=\"/question/38537088/answer/76983256\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-12-16\" target=\"_blank\" href=\"/question/38537088/answer/76983256\">编辑于 2015-12-16</a></p>\n\n",
    "link": "https://zhihu.com/question/38537088/answer/76983256"
  },
  {
    "question": "\n写一个自己的开源框架需要有哪些能力和基础?\n",
    "author": "vczh",
    "content": "\n\n<textarea hidden class=\"content\">首先你得多写程序。如果你的几个程序互相之间有关联，那么他们就需要共享代码。共享的部分越抽象，就越像一个库。等你习惯了这种做法之后，以后写框架、API、类库就像写业务逻辑一样简单。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n首先你得多写程序。如果你的几个程序互相之间有关联，那么他们就需要共享代码。共享的部分越抽象，就越像一个库。等你习惯了这种做法之后，以后写框架、API、类库就像写业务逻辑一样简单。\n\n<a href=\"/question/36937467/answer/74197936\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/36937467/answer/74197936\">发布于 2015-11-27</a></p>\n\n",
    "link": "https://zhihu.com/question/36937467/answer/74197936"
  },
  {
    "question": "\n如何评论浏览器最新的 WebAssembly 字节码技术？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">占坑。&lt;br&gt;&lt;br&gt;简单说就是 —— 非常值得期待。&lt;br&gt;&lt;br&gt;&lt;br&gt;抖个机灵，你啥时候看到谷歌、苹果、微软等公司一起干同一件事情？（是真的一起干，我刚去看过&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/WebAssembly/design/graphs/contributors&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Contributors to WebAssembly/design · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，前四个1个谷歌、2个Moz、1个微软。）那真的说明这个事情很重要，且是共赢之局。&lt;br&gt;&lt;br&gt;&lt;br&gt;更新：&lt;br&gt;&lt;br&gt;太棒了，轮子又自己送上脸来了。&lt;br&gt;&lt;blockquote&gt;前端工程师再一次发明了Silverlight&lt;br&gt;&lt;/blockquote&gt;第一，做WebAssembly的不是前端工程师，而是浏览器厂商。（哦，坑爹的C++工程师们！）最多勉强把写WebAssembly的polyfill的同志算前端吧。（只要你秉持“所有写JS的就可以叫前端”这么乱来的定义。）&lt;br&gt;&lt;br&gt;PS. 轮子已经不是第一次为前端代言但闹出笑话了。参见：&lt;a href=&quot;http://www.zhihu.com/question/29552822/answer/44759258&quot; class=&quot;internal&quot;&gt;HTML可能会逐步被XML所取代吗？（来自《css权威指南》） - 贺师俊的回答&lt;/a&gt;&lt;br&gt;&lt;br&gt;第二，为什么要说Silverlight而不是Flash？帮助微软在RIA开发平台领域刷存在感？我就不说把一个二进制格式跟开发平台比是多么神奇，不过注意我们前面说了主语不是前端工程师而是浏览器厂商，所以这句话要修正为“微软再一次发明了Silverlight”，哦，也就是微软自己爆自己菊？好吧，准确的说是“谷歌、苹果、谋智、微软一起再一次发明了Silverlight”，这下听上去就爆有面子了……嗯？总觉得哪里有点奇（4）怪（P）耶！</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n占坑。 简单说就是 —— 非常值得期待。 抖个机灵，你啥时候看到谷歌、苹果、微软等公司一起干同一件事情？（是真的一起干，我刚去看过<a href=\"//link.zhihu.com/?target=https%3A//github.com/WebAssembly/design/graphs/contributors\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Contributors to WebAssembly/design · GitHub<i class=\"icon-external\"></i></a>，前四个1个谷歌、2个Moz、1个微软。）那真的说明这个事情很重要，且是共…\n\n<a href=\"/question/31415286/answer/51875237\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-06-19\" target=\"_blank\" href=\"/question/31415286/answer/51875237\">编辑于 2015-06-19</a></p>\n\n",
    "link": "https://zhihu.com/question/31415286/answer/51875237"
  },
  {
    "question": "\nJavascript 初学者如何思考才可以把脑中的东西转换成代码写出来？\n",
    "author": "Jasin Yip",
    "content": "\n\n<textarea hidden class=\"content\">既然是个妹子，那我就来教教你（逃&lt;br&gt;&lt;br&gt;这是游戏截图：&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/1fe9d09444ed221fc32162f47bcd1e28_b.jpg&quot; data-rawwidth=&quot;371&quot; data-rawheight=&quot;511&quot; class=&quot;content_image&quot; width=&quot;371&quot;&gt;&lt;br&gt;为简化，胜利我直接用 alert 提示了。&lt;br&gt;&lt;br&gt;首先是妹子你比较熟悉的 HTML、CSS：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;zh-cn&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://cdn.bootcss.com/meyer-reset/2.0/reset.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n    \n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;340px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;320px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ccc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n        &lt;span class=&quot;nc&quot;&gt;.cells&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;80px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;80px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;solid&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ccc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;#777&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;text-decoration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;60px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;line-height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;80px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;\n    \n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-0-0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-0-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-0-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-1-0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-1-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-1-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-2-0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-2-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;javascript:;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cells&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-2-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;\n\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;js/game.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;既然你比较熟悉，我就不解释了。&lt;br&gt;&lt;br&gt;接下来是关键的 Javascript 部分：&lt;br&gt;&lt;br&gt;第一步，我们要初始化一些变量：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TICK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'√'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Χ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 用于存放数据模型，0 表示未点击，1 表示打叉，2 表示打勾&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 用于存放 DOM 中的 a 标签&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 用于表示轮到谁了&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// 初始化二维数组&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;同时，我们每次开始新游戏都需要清空 a 标签中显示的字符，以及重置数据模型 model，所以我将它做成一个函数 newGame()：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newGame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n            &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n &lt;span class=&quot;c1&quot;&gt;// 1 表示以 '√' 开始，若为 0 则表示以 'Χ' 开始&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;然后，每次修改数据模型后，我们都要刷新视图：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;var freshView = function(){\n    var i, j;\n\n    for (i=0; i&amp;lt;3; i++)\n        for (j=0; j&amp;lt;3; j++)\n            if (model[i][j] == 1)\n                cells[i][j].text = CROSS;\n            else if (model[i][j] == 2)\n                cells[i][j].text = TICK;\n}\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;当然，我们还需要一个判断胜利的函数：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkWin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 检查 X 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 检查 Y 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 如果在 \\ 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 检查 \\ 方向&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 如果在 / 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; \n        &lt;span class=&quot;c1&quot;&gt;// 检查 / 方向&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;还有，我们需要向每个 a 标签绑定一个函数，用来修改数据模型：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt; for (i=0; i&amp;lt;3; i++)\n        for (j=0; j&amp;lt;3; j++){\n            cells[j][i] = document.getElementById('cell-' + i + '-' + j);\n\n            (function(j, i){\n                cells[i][j].onclick = function(){\n                    model[i][j] = flag + 1;\n\n                    if (flag)\n                        flag = 0;\n                    else\n                        flag = 1;\n\n                    freshView();\n\n                    if (checkWin(i, j)){\n                        if (flag)\n                            alert(&quot;用 &quot; + CROSS + &quot; 的选手胜利！&quot;);\n                        else\n                            alert(&quot;用 &quot; + TICK + &quot; 的选手胜利！&quot;);\n                        newGame();\n                    }\n                    \n                }\n            })(i, j);\n\n        }\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;这里我为了写得优雅一点，我使用了闭包，以便于批量绑定 onclick 事件。&lt;br&gt;&lt;br&gt;所有 js 写起来就是这样：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TICK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'√'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Χ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 用于表示轮到谁了&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newGame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n            &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;freshView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n                &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CROSS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n                &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TICK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkWin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 检查 X 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 检查 Y 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 如果在 \\ 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;// 检查 \\ 方向&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 如果在 / 方向&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; \n        &lt;span class=&quot;c1&quot;&gt;// 检查 / 方向&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;\n            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n\n\n&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n    \n    &lt;span class=&quot;c1&quot;&gt;// 初始化二维数组&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;\n        &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;\n    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n            &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cell-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n            &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;\n                &lt;span class=&quot;nx&quot;&gt;cells&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;\n                    &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n                        &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n                    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;\n                        &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n                    &lt;span class=&quot;nx&quot;&gt;freshView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checkWin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;\n                        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n                            &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;用 &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CROSS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; 的选手胜利！&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n                        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;\n                            &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;用 &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TICK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; 的选手胜利！&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n                        &lt;span class=&quot;nx&quot;&gt;newGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n                    \n                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n            &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n\n    &lt;span class=&quot;nx&quot;&gt;newGame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;这个游戏我没有写机器人，因为写那个又会复杂很多，建议妹子先把这些理解掉，再研究写机器人吧！&lt;br&gt;&lt;br&gt;可能闭包那里对于你现在的水平来说有点超纲，你可以用一些比如 with 之类（自己Google 一下咯）的方法来做批量绑定，当然了，你也可以傻傻地复制粘贴……&lt;br&gt;&lt;br&gt;最后总结一下，其实你选择做一个游戏来锻炼自己的 Javascript 能力这点是非常正确的，不过可能你有些逻辑关系没有理清楚，下次如果觉得大脑一片空白，不如试着画一下流程图吧~</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic1.zhimg.com/1fe9d09444ed221fc32162f47bcd1e28_200x112.jpg\" data-rawwidth=\"371\" data-rawheight=\"511\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic1.zhimg.com/1fe9d09444ed221fc32162f47bcd1e28_r.jpg\">\n既然是个妹子，那我就来教教你（逃 这是游戏截图： 为简化，胜利我直接用 alert 提示了。 首先是妹子你比较熟悉的 HTML、CSS： &lt;!DOCTYPE html&gt;\n&lt;html lang=\"zh-cn\"&gt;\n&lt;head&gt;\n &lt;meta charset=\"UTF-8\"&gt;\n &lt;title&gt;Document&lt;/title&gt;\n &lt;link rel=\"stylesheet\" hre…\n\n<a href=\"/question/27580342/answer/37209539\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-01-14\" target=\"_blank\" href=\"/question/27580342/answer/37209539\">编辑于 2015-03-18</a></p>\n\n",
    "link": "https://zhihu.com/question/27580342/answer/37209539"
  },
  {
    "question": "\n怎样有效地学习 Node.js？\n",
    "author": "马隆博",
    "content": "\n\n<textarea hidden class=\"content\">首先，清楚Node.js究竟是什么？&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ibm.com/developerworks/cn/opensource/os-nodejs/index.html%3Fca%3Ddrs%23ibm-pcon&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Node.js 究竟是什么？&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;官方文档和github上面的代码无疑是最好的学习资料。&lt;br&gt;再推荐几个不错的文档：&lt;br&gt;1.这个是中文版的经典入门教程：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.nodebeginner.org/index-zh-cn.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Node入门&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;2. &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.csser.com/board/4f77e6f996ca600f78000936&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Express.js 中文入门指引手册&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;3.&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.csser.com/board/4f4e92dbeb0defac5700011e&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt; Mongoose 基本功能使用&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，对于mongoose的学习，官网的文档和入门指引很好。&lt;br&gt;再然后就是自己动手做一些东西，慢慢摸索，可以参考这个，&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.csser.com/question/4f87e4a6f2e76010470012e0&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;如何合理部署nodejs文件&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;，也可以跟据自己的经验去部署。&lt;br&gt;对了，还有这个&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.nodecloud.org/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;NodeCloud - Node.js resources&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;br&gt;最后强烈建议多阅读github上跟Node.js相关的模块的源码。&lt;br&gt;&lt;br&gt;1-31更新：&lt;br&gt;这里有个不错的专栏： &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.infoq.com/cn/master-nodejs&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;深入浅出Node.js相关的内容&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;2-26更新：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ibm.com/developerworks/cn/training/kp/j-kp-node/index.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;全面认识 Node.js&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; ，这个不错，里面资料挺多。&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ibm.com/developerworks/cn/cloud/library/cl-nodejscloud/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;使用 Node.js 作为完整的云环境开发堆栈&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;5-29更新：&lt;br&gt;补充一个还不错的系列教程：  &lt;br&gt;&lt;a class=&quot; wrap external&quot; href=&quot;//link.zhihu.com/?target=http%3A//blog.fens.me/series-nodejs/&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;从零开始nodejs系列文章&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;国内关于nodejs的书籍，推荐看朴灵大大的《深入浅出NodeJs》和赵坤的《NodeJs实战》(建议有一些基础再看)，完事再看看《用AngularJs开发下一代Web应用》就更好了。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n首先，清楚Node.js究竟是什么？<a href=\"//link.zhihu.com/?target=http%3A//www.ibm.com/developerworks/cn/opensource/os-nodejs/index.html%3Fca%3Ddrs%23ibm-pcon\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Node.js 究竟是什么？<i class=\"icon-external\"></i></a> 官方文档和github上面的代码无疑是最好的学习资料。 再推荐几个不错的文档： 1.这个是中文版的经典入门教程：<a href=\"//link.zhihu.com/?target=http%3A//www.nodebeginner.org/index-zh-cn.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Node入门<i class=\"icon-external\"></i></a> 2. <a href=\"//link.zhihu.com/?target=http%3A//www.csser.com/board/4f77e6f996ca600f78000936\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Express.js 中文入门指引手册<i class=\"icon-external\"></i></a> 3.<a href=\"//link.zhihu.com/?target=http%3A//www.csser.com/board/4f4e92dbeb0defac5700011e\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"> Mongoose 基本功能使用<i class=\"icon-external\"></i></a>，对于mongoose的学习，…\n\n<a href=\"/question/19793473/answer/15952853\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2013-01-15\" target=\"_blank\" href=\"/question/19793473/answer/15952853\">编辑于 2014-05-29</a></p>\n\n",
    "link": "https://zhihu.com/question/19793473/answer/15952853"
  },
  {
    "question": "\n如何看待微软 12 月 5 日宣布准备开源其 JavaScript 引擎 Chakra 的核心部分？\n",
    "author": "鲁小夫",
    "content": "\n\n<textarea hidden class=\"content\">微软早在今年初就有另立 Node.js 中央的想法了，而且不是 io.js 那种请客吃饭，而是用它这个 Chakra 来替换掉 v8，同时尽可能复用 Node.js 社区的很多东西，具体做法就是程序员们喜闻乐见的 wrapper 了。&lt;br&gt;&lt;br&gt;这对 Node.js 来说也是好事一桩，在 JS引擎上挑起性能战争，对整个行业更是有推动作用。&lt;br&gt;&lt;br&gt;另外微软对这个东西的野心还不止这点，据他们自己说，Chakra 驱动的 Node.js 是可以跟 VS 紧密结合的，还可以用来写 UWP 程序。&lt;br&gt;&lt;br&gt;脑洞一下吧同志们，新的IDE、新的平台、各种 Windows API，没准还能跟 .net、XAML，乃至于 DirectX 啥的搞搞基。&lt;br&gt;&lt;br&gt;软爹画的大饼如此诱人，对比一下现在 Node.js 社区里面可悲的开发环境、有限的部署能力、各种简陋的框架，我作为一个软黑谷粉，这回还真的得管微软叫爸爸了。&lt;br&gt;&lt;br&gt;Google 自身在 JS 上的战略还是 Web，在 Node.js 上也就贡献了一个 v8，其余啥也没有了，Android 也不让 JS程序员沾一下光，只能用 Webview 将就混一口饭吃，native UI 都碰不到一星半点。&lt;br&gt;&lt;br&gt;一说起 HTML5 hybrid APP，很多人第一反应是运行卡加载慢，妈蛋代码写不好怪程序员， Webview 自身的性能问题也怪程序员？Google 当然是一个好爹，但是 Android Webview 早期性能低下，这锅还得 Google 来背。&lt;br&gt;&lt;br&gt;直到 Facebook 发布了 react native，再加上各种 JS 游戏 runtime 兴起，JS 程序员才在这移动互联网的世界里扬眉吐气了一把。&lt;br&gt;&lt;br&gt;而微软作为一个老牌软厂，这次进来搅搅局，整合上它的各种技术积累，没准真能让 JS 的世界更宽广。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n微软早在今年初就有另立 Node.js 中央的想法了，而且不是 io.js 那种请客吃饭，而是用它这个 Chakra 来替换掉 v8，同时尽可能复用 Node.js 社区的很多东西，具体做法就是程序员们喜闻乐见的 wrapper 了。 这对 Node.js 来说也是好事一桩，在 JS引擎上挑起性…\n\n<a href=\"/question/38238351/answer/75572719\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-12-07\" target=\"_blank\" href=\"/question/38238351/answer/75572719\">编辑于 2015-12-07</a></p>\n\n",
    "link": "https://zhihu.com/question/38238351/answer/75572719"
  },
  {
    "question": "\njson 指的是字符串还是对象？\n",
    "author": "Milo Yip",
    "content": "\n\n<textarea hidden class=\"content\">根据 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ecma-international.org/publications/standards/Ecma-404.htm&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;ECMA-404&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 标准：&lt;br&gt;&lt;blockquote&gt;JSON is a text format that facilitates structured data interchange between all programming languages. &lt;/blockquote&gt;JSON 是文本格式，能用于在不同编程语言中交换结构化数据。&lt;br&gt;&lt;br&gt;而「字符串」是大部分编程语言中存储文本数据的数据类型，在这些编程语言中你可以把 JSON （文本）存储在字符串内。&lt;br&gt;&lt;br&gt;JavaScript 中的 JSON.parse() API 是用于把存储了 JSON 文本格式的字符串解析为 JavaScript 中的数据结构，JSON.stringify() 是做相反的转换。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n根据 <a href=\"//link.zhihu.com/?target=http%3A//www.ecma-international.org/publications/standards/Ecma-404.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ECMA-404<i class=\"icon-external\"></i></a> 标准： JSON is a text format that facilitates structured data interchange between all programming languages. JSON 是文本格式，能用于在不同编程语言中交换结构化数据。 而「字符串」是大部分编程语言中存储文本数据的数据类型，在这…\n\n<a href=\"/question/34468150/answer/100502044\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/34468150/answer/100502044\">发布于 2016-05-12</a></p>\n\n",
    "link": "https://zhihu.com/question/34468150/answer/100502044"
  },
  {
    "question": "\n有哪些不用编写代码就能轻松制作生成HTML5页面的工具？\n",
    "author": "Holych浩男",
    "content": "\n\n<textarea hidden class=\"content\">我觉得我可以来回答一下这个问题。&lt;br&gt;&lt;br&gt;作为移动互联网公司入职不到一年的产品新人，我最近用过一些制作H5的工具。不敢说是每个工具的深度使用者，起码平时可以利用起来，在不用代码的情况下，使用这些工具确实达到了省时省力的效果。&lt;br&gt;&lt;br&gt;&lt;b&gt;【开始答楼主】&lt;/b&gt; ——————————————————&lt;br&gt;&lt;br&gt;HTML5页面制作工具，大体分为两类：基于HTML5的网站工具和手机APP工具（当然还有一些其他的，例如基于微信公众号的等，下面也会介绍）。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;先总的说一下个人感受&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;1.基于HTML5的工具网站：功能较强大，单页面的操作性较强，可完成各种页面交互效果；但是某些时候会有操作“失灵”的现象，如上传图片失败，点击保存失败，生成失败等。原因你懂得~&lt;br&gt;2.手机工具APP：相比起工具网站来讲，显得比较顺手，有大量模板套用，制作简单快捷；但是拘泥于现有的模板，使得单页面不会有较大的可操作空间，从而无法实现DIY交互效果。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt; 下面展开说下每个使用过的工具吧&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;基于HTML5的工具网站：&lt;br&gt;&lt;br&gt;【兔展】&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.rabbitpre.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.rabbitpre.com/&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;优点：页面DIY程度较高，动效实现起来也简易方便，可制作比较任性的H5页面。&lt;br&gt;缺点：屏幕界面大小不可调节，上传的图会比例失调；生成后到各尺寸屏上页面会存在拉伸现象。&lt;br&gt;&lt;img src=&quot;https://pic3.zhimg.com/6c24d485b77808eedac0f5b95ae8b60e_b.jpg&quot; data-rawwidth=&quot;360&quot; data-rawheight=&quot;258&quot; class=&quot;content_image&quot; width=&quot;360&quot;&gt;（此图意在说明上传的图片的尺寸都是网站自己默认的一个尺寸，不是图片本身的尺寸，不利于使用者调整）&lt;br&gt;&lt;br&gt;【&lt;a href=&quot;//link.zhihu.com/?target=http%3A//MAKA.im&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;MAKA.im&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;】 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.maka.im/home/index.html&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;maka.im/home/index.html&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;优点：与兔展类似，更像制作PPT一样。每一页的具体效果可以具体编辑，单页操作性较高，有新手（有模板）和高阶（无模板）两种编辑模式；翻页效果比兔展多，模板也更强大一些。&lt;br&gt;&lt;br&gt;【居高互动刊】&lt;a href=&quot;//link.zhihu.com/?target=http%3A//hdk.jugocn.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;hdk.jugocn.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;优点：最简单易上手的工具之一，根据提示一步一步的添加，共4步，最后生成微杂志。相比其他在线工具，较稳定。&lt;br&gt;缺点：目前没试通制作单页上的交互效果，没找到开启pro功能的入口。&lt;br&gt;&lt;br&gt;【ANIMATRON】&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.animatron.com/&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;animatron.com/&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;优点：像flash的在线版，功能强大，可以创建HTML5动画。适合有动画基础的人做演示制作。&lt;br&gt;缺点：需要动画制作基础；工作界面响应时间长；貌似只能分享到twitter、Facebook、google+、tumblr？&lt;br&gt;&lt;br&gt;【iSpring 7】&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.ispringsolutions.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://www.ispringsolutions.com/&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;噱头是PPT转HTML5工具，完美与PPT兼容，可制作Html5移动课件。&lt;br&gt;不过，目前我只能连着VPN再用Safari才能打开网站链接。&lt;br&gt;&lt;br&gt;【秀制作】&lt;a href=&quot;//link.zhihu.com/?target=http%3A//xiumi.us&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;http://xiumi.us/&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;优点：版式轻松，制作快捷，宽带稳定。&lt;br&gt;缺点：对图片和文字在各种屏幕上的显示没有做很好的适配；不能对模板中文字的编辑调整位置。&lt;br&gt;&lt;br&gt;手机工具APP：&lt;br&gt;&lt;br&gt;【初页】&lt;br&gt;优点：模板质量高，套用模板编辑时效率高，操作简单快捷，效果和体验在制作H5页面的APP工具里面算是出类拔萃。&lt;br&gt;缺点：单页面可操作性较低，仅支持套用模板。&lt;br&gt;&lt;br&gt;【快邀约】快速制作邀请函&lt;br&gt;优点：易上手，省时高效，便于统计。&lt;br&gt;缺点：页面简陋，只能选择固有模板创建文字和添加图片。&lt;br&gt;&lt;br&gt;【易企秀】中小微企业的移动场景营销管家&lt;br&gt;优点：套用模板，创建快捷，用来做企业介绍、产品推荐。拥有强大的推广统计、客户管理功能。嗯，这里应该赞一个。&lt;br&gt;缺点：只能用模板，DIY程度低；统计数据是否准确需要进一步确认，目前看来可能有遗漏数据的现象（在小范围测试中，统计到的数量小于应有的数量）。&lt;br&gt;&lt;br&gt;【微贴】：通过微信公众号创建H5页面&lt;br&gt;优点：手机公众号内直接创建简单页面，根据提示创建即可，无脑方便快捷。&lt;br&gt;缺点：只是单页面展示，承载不了交互效果等特效和更多内容。&lt;br&gt;&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;总结&lt;/b&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;工具网站做的H5页面，多注重单独页面的自定义交互方案，DIY程度高，相对来说用时较长，又受制于带宽因素，故影响操作；&lt;br&gt;工具APP做的H5页面，多注重效率，目前都是套用模板，因而对单页面的DIY程度较低，交互效果受限。&lt;br&gt;&lt;br&gt;作为我个人而言，移动互联的新任PM，我平时常用到的是【MAKA】和【兔展】，这两个相对来说更适合半天时间来完成；如想快速制作展示页面就用【初页】，这个在功能效率与设计感方面更突出一些；组织活动、制作邀请函、分发活动通知等用【快邀约】；平时推广新产品、联络客户和招聘新人用【易企秀】。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;【回答完毕】&lt;/b&gt; ——————————————————&lt;br&gt;&lt;br&gt;以上是近期以来对HTML5制作工具的一些浅显认知，希望对楼主有所帮助，也欢迎大家多多交流与指正。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic3.zhimg.com/6c24d485b77808eedac0f5b95ae8b60e_200x112.jpg\" data-rawwidth=\"360\" data-rawheight=\"258\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic3.zhimg.com/6c24d485b77808eedac0f5b95ae8b60e_r.jpg\">\n我觉得我可以来回答一下这个问题。 作为移动互联网公司入职不到一年的产品新人，我最近用过一些制作H5的工具。不敢说是每个工具的深度使用者，起码平时可以利用起来，在不用代码的情况下，使用这些工具确实达到了省时省力的效果。 <b>【开始答楼主】</b> ————…\n\n<a href=\"/question/27853578/answer/38358171\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/27853578/answer/38358171\">发布于 2015-01-29</a></p>\n\n",
    "link": "https://zhihu.com/question/27853578/answer/38358171"
  },
  {
    "question": "\nWeb 前端开发前景如何？\n",
    "author": "贺师俊",
    "content": "\n\n<textarea hidden class=\"content\">我在另一个答案里提到过我认为Web前端的职业前景不容乐观。这里暂时没有时间展开。先说个有趣的事情，国内Web前端的标杆人物克军（豆瓣）和玉伯（阿里）写了个“对联”如下：前端研究，研究个屁；前端设计，设计个鸟。就算是调侃吧，但也可见业内顶尖人士对此职业在纵深上的担忧。&lt;br&gt;&lt;br&gt;另外说待遇的话，当然也有非常高的，玉伯在其他答案里提到过有超50万年薪甚至近百万的。不过我个人对这些高薪同学在公司的实际角色有所保留。总的来说，一般理解上的前端工程师在各互联网公司的职级相比其他技术岗位或者UED其他岗位我认为不够高。造成这样情况的有不少是历史原因。&lt;br&gt;&lt;br&gt;先说这些，有空再来补充。&lt;br&gt;&lt;br&gt;［2014年5月2日补充］&lt;br&gt;&lt;br&gt;原答案是1年多前写的，今天稍做补充。&lt;br&gt;&lt;br&gt;最近2个季度我公司一直在招前端，但非常难招到合适的senior前端。原因可能有很多，比如大量前端都被BAT招去了。但是如果对比后端职位，senior前端之难招有点不同寻常。这个市场上，初级前端其实不少，至少不比初级后端少，但是招senior前端却明显难于招senior后端。乐观的人认为这说明这个职业有需求，但是对于要选择这个职业的人来说，你要考虑一个问题：你能成为senior的吗？&lt;br&gt;&lt;br&gt;前端这行虽然新（从2005年算起吧），但也好歹有近10年了，所以从现在的情况看，或许可大略的有个观察：前端的成才率要显著低于后端。但是前端的薪资并不高于后端（以前其实低，现在估计和同等级的差不多，但是最top level的情况不好说，我认为仍然是偏低）。&lt;br&gt;&lt;br&gt;这正为什么我依旧认为Web前端的职业前景不容乐观。&lt;br&gt;&lt;br&gt;为什么前端成材率低？&lt;br&gt;&lt;br&gt;根据这些年的观察，估计至少有这些原因：&lt;br&gt;&lt;br&gt;1. 生源差。常见有人诟病文科生不如理科生（科学素养、智商等），虽然这本身就极有争议，但我还是比较认同一个定性的解释，就是问题不在于文科、理科本身，而在于人。由于各种原因，本国大多优秀高中生都优先选择理科，导致文科生生源就差一些（不幸本人也是一例）。前端、后端也有这样的问题。前端入门门槛比后端低是不争的事实。计算机基本能力不过关，后端面试候选人都知道不好意思，但是不少前端候选人就理直气壮，或至少不认为这是问题，甚至就是因为自己不懂算法和数据结构，所以只好做前端了。招实习生的时候，那些选择前端的同学问他们为什么选前端，一个常见理由是这东西更直观，更快有反馈……不幸的是，许多时候，这其实说明他们更“浮”，更倾向于只达成效果，更“实用主义”。这些问题在前端职业生涯的初期可能影响不大，但是对于进入senior的时候，就可能成为巨大的阻碍。&lt;br&gt;&lt;br&gt;（要吃晚饭了，先写到这里）</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n我在另一个答案里提到过我认为Web前端的职业前景不容乐观。这里暂时没有时间展开。先说个有趣的事情，国内Web前端的标杆人物克军（豆瓣）和玉伯（阿里）写了个“对联”如下：前端研究，研究个屁；前端设计，设计个鸟。就算是调侃吧，但也可见业内顶尖人士对…\n\n<a href=\"/question/20287740/answer/16618002\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2013-04-07\" target=\"_blank\" href=\"/question/20287740/answer/16618002\">编辑于 2014-05-02</a></p>\n\n",
    "link": "https://zhihu.com/question/20287740/answer/16618002"
  },
  {
    "question": "\n2014 年末有哪些比较火的 Web 开发技术？\n",
    "author": "张克军",
    "content": "\n\n<textarea hidden class=\"content\">&lt;a data-hash=&quot;c5198d4e9c0145aee04dd53cc6590edd&quot; href=&quot;//www.zhihu.com/people/c5198d4e9c0145aee04dd53cc6590edd&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@徐飞&quot; data-tip=&quot;p$b$c5198d4e9c0145aee04dd53cc6590edd&quot; data-hovercard=&quot;p$b$c5198d4e9c0145aee04dd53cc6590edd&quot;&gt;@徐飞&lt;/a&gt; 评论React的观点总结一下就是：React最大的亮点是虚拟DOM，它是上层的，它有多高效对于大规模应用开发宏观上的不是最重要的。&lt;br&gt;&lt;br&gt;这个我同意，对于一个大规模应用的架构设计来说，解决DOM操作这个窄的问题当然不是最重要的。但是怎么能说“喜欢React的人常常用它的虚拟DOM、精确更新来打击其他框架”就太主观了。虚拟DOM只是React的一个特点，React是声明式的，同时绑定状态，UI更新时自然要设计一套高效的算法。&lt;br&gt;&lt;br&gt;在谈到Angular时提到的那些优点：UI和业务逻辑的隔离、模块间的依赖关系、易测试、易复用，React同样做的很好（或许更好）那些不是Angular的特别优势，应该说是所有基于组件思维架构的优势。&lt;br&gt;&lt;br&gt;React和Angular作为新一代的前端开发框架颠覆的是上一代以Backbone为代表的以传统MVC实现开发应用的方式。或许React引入JSX太刺眼了，让人总觉得是在JS里拼HTML模板，这明显是认识上的误区，那些只是组件的组合用法。传统字符串形式的Javascript模板已经过时了，H5标准里的template也不是字符串，这些都是被新事物扬弃的。&lt;br&gt;&lt;br&gt;在开发中，我觉得React的可预测性的特点对代码维护帮助很大。扩展上也充分体现了组件的灵活性。我最近正在做一套复杂的管理后台，各种复杂表单，需求也改来改去，应对起来还是很从容的。原来分享过一张图，用React很自然的使项目形成一种扁平化的组织形式：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//pan.baidu.com/s/1bn0AQrP&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;report.png_免费高速下载&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;。这是一个好的框架应该有的效果，不是越来越臃肿。&lt;br&gt;&lt;br&gt;接下来值得探求的是组件之间的通讯、数据流的控制。之前微博上分享过一张图，想表达的是当所有组件产生的数据汇总到最上面的逻辑层时，感觉好极了。再接下来我其实对CSP感兴趣。&lt;br&gt;&lt;br&gt;最后要说，还是要用一用。开始用React可能有点不顺，慢慢会越来越喜欢它;P</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n<a data-hash=\"c5198d4e9c0145aee04dd53cc6590edd\" href=\"//www.zhihu.com/people/c5198d4e9c0145aee04dd53cc6590edd\" class=\"member_mention\" data-editable=\"true\" data-title=\"@徐飞\" data-tip=\"p$b$c5198d4e9c0145aee04dd53cc6590edd\" data-hovercard=\"p$b$c5198d4e9c0145aee04dd53cc6590edd\">@徐飞</a> 评论React的观点总结一下就是：React最大的亮点是虚拟DOM，它是上层的，它有多高效对于大规模应用开发宏观上的不是最重要的。 这个我同意，对于一个大规模应用的架构设计来说，解决DOM操作这个窄的问题当然不是最重要的。但是怎么能说“喜欢React的人…\n\n<a href=\"/question/26644904/answer/35353767\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-12-17\" target=\"_blank\" href=\"/question/26644904/answer/35353767\">编辑于 2014-12-17</a></p>\n\n",
    "link": "https://zhihu.com/question/26644904/answer/35353767"
  },
  {
    "question": "\n《Web前端黑客技术揭秘》《白帽子讲Web安全》好难，怎么读？\n",
    "author": "tombkeeper",
    "content": "\n\n<textarea hidden class=\"content\">用搜索引擎搜索每一个看不懂的术语。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n用搜索引擎搜索每一个看不懂的术语。\n\n<a href=\"/question/23250979/answer/24058758\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-04-03\" target=\"_blank\" href=\"/question/23250979/answer/24058758\">编辑于 2014-04-03</a></p>\n\n",
    "link": "https://zhihu.com/question/23250979/answer/24058758"
  },
  {
    "question": "\n有哪些不错的css命名的规则？你是如何管理css框架命名规范的？\n",
    "author": "泡泡",
    "content": "\n\n<textarea hidden class=\"content\">泻药。&lt;br&gt;&lt;br&gt;css命名这块，13年还在腾讯的时候，和组内的几个同学一起研究出来的一套命名方法：&lt;b&gt;姓氏命名法&lt;/b&gt; 。这套命名法目前京东的小伙伴们&lt;a href=&quot;//link.zhihu.com/?target=https%3A//aotu.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Aotu.io&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;还在使用。可以看看京东首页的css命名。&lt;br&gt;&lt;br&gt;该方式相比于BEM命名法来说，更简单易懂。该命名方法的核心是，&lt;b&gt;只要保证最外层模块名不重复，模块内部可以任意命名。&lt;/b&gt;&lt;br&gt;&lt;br&gt;好了，言归正传，以下内容整理自我的博客。&lt;br&gt;&lt;br&gt;=================华丽的分割线==============&lt;br&gt;&lt;br&gt;&lt;h2&gt;&lt;b&gt;背景：&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;由历史原因及个人习惯引起的DOM结构、命名不统一，导致不同成员在维护同一页面时，无从下手，效率低下，迭代、维护成本极高。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;命名原则：&lt;/b&gt;&lt;/h2&gt;&lt;h3&gt;1.概述&lt;/h3&gt;&lt;h3&gt;1.1基于姓氏命名法（继承+外来），如下图：&lt;/h3&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e5bb65c574616bad94ed8a7db8ba1663_b.png&quot; data-rawwidth=&quot;491&quot; data-rawheight=&quot;341&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;491&quot; data-original=&quot;https://pic4.zhimg.com/v2-e5bb65c574616bad94ed8a7db8ba1663_r.png&quot;&gt;&lt;h3&gt;1.2说明：&lt;/h3&gt;&lt;p&gt;(1).简单模块：在子孙模块&lt;b&gt;数量可预测&lt;/b&gt;的情况下，&lt;b&gt;继承祖先&lt;/b&gt;模块的命名前缀&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0327eb5b0ae6d32bb9297c0df28e88f9_b.png&quot; data-rawwidth=&quot;1862&quot; data-rawheight=&quot;698&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1862&quot; data-original=&quot;https://pic2.zhimg.com/v2-0327eb5b0ae6d32bb9297c0df28e88f9_r.png&quot;&gt;&lt;br&gt;&lt;p&gt;如上图的焦点图轮播模块，模块整体结构比较简单，子元素的内容相对较少，这种情况下，假设将模块命名为 ： slider，那么其后续的所有子元素，均需要继承这个类名。&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;slider\n├── slider-list\n|    |\n|    └── ....\n└── slider-nav\n|    |\n|    └── ....\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;(2).复杂模块：当子孙模块&lt;b&gt;数量较多&lt;/b&gt;，且无法预估时，可以选择采用&lt;b&gt;继承“祖先+父”&lt;/b&gt;模块的命名前缀，以保证模块之间的独立性&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0b53c11b7a2c538d5a428a129ba6bd15_b.png&quot; data-rawwidth=&quot;1750&quot; data-rawheight=&quot;636&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1750&quot; data-original=&quot;https://pic2.zhimg.com/v2-0b53c11b7a2c538d5a428a129ba6bd15_r.png&quot;&gt;&lt;br&gt;&lt;p&gt;在上图的模块中，一个大楼层里面包含一个子模块：tab切换。在这种结构复杂的模块中，为了保证模块类名使用简单（css起名也是一个体力活）和结构看起来更清晰，可以使用&lt;b&gt;继承“祖先+父”&lt;/b&gt;模块的命名前缀的方式。&lt;/p&gt;&lt;p&gt;在这个楼层模块中，楼层的名字叫：floor ，里面的tab切换单个内容块名字叫 item，那么 tab切换内部的子元素命名规则为 ： floor-item-xxx&lt;/p&gt;&lt;p&gt;如：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;floor\n├── floor-hd\n&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;    ├── floor-tit\n&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;\n├── floor-item\n&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;    ├── floor-item-tit\n&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;    └── floor-item-desc\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面代码中使用了2次 tit 来表示标题，也就是说如果你自己有一组&lt;b&gt;命名包，&lt;/b&gt;你就可以很轻松的进行命名了，比如描述相关：desc、info、extra等等。&lt;/p&gt;&lt;br&gt;&lt;p&gt;(3).复合模块：子模块中，可以&lt;b&gt;嵌套其他模块&lt;/b&gt;，可理解为“娶媳妇”&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-66baf418c04d09ef454bf84b09bdfb05_b.png&quot; data-rawwidth=&quot;1756&quot; data-rawheight=&quot;730&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1756&quot; data-original=&quot;https://pic2.zhimg.com/v2-66baf418c04d09ef454bf84b09bdfb05_r.png&quot;&gt;&lt;br&gt;模块间本身会有嵌套情况，如上面的结构，在今日特惠这个模块中嵌套了一个公共组件。可以理解为娶媳妇。（媳妇一般是外姓的）。&lt;/p&gt;&lt;p&gt;如：&lt;/p&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;hotsales\n├── hotsales_li\n| |\n| └── mod_goods\n| |\n| ├── mod_goods_price\n| └── mod_goods_tit\n| └── mod_goods_promo\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当然，其实第二点也可以用第三点的方式来实现，那么这里就涉及到一个问题？&lt;b&gt;什么时候用第三点提到的方法。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;比较推荐的建议是，如果嵌套的模块是一个比较通用的组件，那么可以用第三点，将子模块抽出成一个独立的组件，而其他情况下建议使用第二点的方式。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;基于以上的方式，可以完成基本的命名规则，但是无法区分模块的类型。（模块是否可复用？复用范围？）&lt;/p&gt;&lt;p&gt;于是我们在模块的命名规则上遵循以下原则：&lt;/p&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt; 全站公共模块以”mod-”开头&lt;br&gt;&lt;/li&gt;&lt;li&gt;页面公共模块以”xx-mod-”开头（xx为页面名称缩写）&lt;br&gt;&lt;/li&gt;&lt;li&gt;独立模块，命名为一个简短的单词，如”hot、floor、banner” 等 &lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;基于以下2点来区分全站公共模块及页面模块。&lt;br&gt;&lt;ol&gt;&lt;li&gt; 同一个页面出现2次及以上同一个类名&lt;br&gt;&lt;/li&gt;&lt;li&gt;2个以上页面出现同一个类名 &lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;在这种规则下，可能会出现这个模块原先是独立模块的，然后发现可以复用了，然后就修改类名变成公共模块。这种变更成本比较低，可接受。（因为独立模块在页面上只有一处，修改类名不会影响到其他样式）&lt;br&gt;&lt;br&gt;基于这个css姓氏命名法，我们的类名是长命名的方式了，只要保证了最外层模块的唯一性，那么里面的子模块类名是不可能会出现重复的。&lt;br&gt;于是，我们要求&lt;b&gt;，&lt;/b&gt;&lt;b&gt;CSS以单层命名为主，嵌套一般不能操过3层。&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;这样在修改样式与html结构时，相互之间是耦合的，css不依赖于html的结构。（我知道很多同学写less或scss喜欢像html那样一层一层嵌套）&lt;br&gt;&lt;br&gt;最后附上以前feeling写的代码给大家参考：&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4bf89d86c97cb07e794cc7fd2b08104c_b.jpg&quot; data-rawwidth=&quot;1758&quot; data-rawheight=&quot;620&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1758&quot; data-original=&quot;https://pic1.zhimg.com/v2-4bf89d86c97cb07e794cc7fd2b08104c_r.jpg&quot;&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/v2-e5bb65c574616bad94ed8a7db8ba1663_200x112.png\" data-rawwidth=\"491\" data-rawheight=\"341\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/v2-e5bb65c574616bad94ed8a7db8ba1663_r.png\">\n泻药。 css命名这块，13年还在腾讯的时候，和组内的几个同学一起研究出来的一套命名方法：<b>姓氏命名法</b> 。这套命名法目前京东的小伙伴们<a href=\"//link.zhihu.com/?target=https%3A//aotu.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Aotu.io<i class=\"icon-external\"></i></a>还在使用。可以看看京东首页的css命名。 该方式相比于BEM命名法来说，更简单易懂。该命名方法的核心是，<b>只要保证…</b>\n\n<a href=\"/question/54962942/answer/142062359\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/54962942/answer/142062359\">发布于 2017-01-21</a></p>\n\n",
    "link": "https://zhihu.com/question/54962942/answer/142062359"
  },
  {
    "question": "\n自学前端四个月怎么样才能找到一个实习？\n",
    "author": "余博伦",
    "content": "\n\n<textarea hidden class=\"content\">谢邀！&lt;br&gt;&lt;br&gt;没有打击你的意思，但我要实话实说了。&lt;br&gt;&lt;br&gt;你提供的这些信息和项目中没有一项是可以给你加分的。&lt;br&gt;&lt;br&gt;首先说明一下Github的使用，Github是一个开源社区，如果仅仅是注册个账户把代码挂在上面，和你注册个百度网盘账号存文件没有任何本质上的区别。&lt;br&gt;&lt;br&gt;你还是初学者，并不要求你有多少star或者给开源项目提了多少pr。但至少你分享的项目要有README/LICENSE，贡献不了代码也可以在issue下面参与一下讨论。至少让别人知道你懂的参与开源社区的最基本要求。&lt;br&gt;&lt;br&gt;另外再聊一下你的三个项目。&lt;br&gt;&lt;br&gt;首先，面试时候最忌讳的就是提供仿站类的项目，仿京东，仿淘宝什么的。所有的初学者都可以做仿站，这样的项目只适合学习的时候练手，并不适合拿出来给人秀。&lt;br&gt;&lt;br&gt;其次，canvas时钟这样的项目也太过简单，而且看样子就好像你是跟着一个相关的视频教程写出来的一样。同样也证明不了你的水平。&lt;br&gt;&lt;br&gt;最后一个不明所以的项目，在手机上打开直接是一团乱，可见你并不了解什么是响应式，什么是移动端适配，而现在做前端，基本是百分之百要做移动端的需求的。&lt;br&gt;&lt;br&gt;还要忍不住吐槽一下你的代码&lt;br&gt;&lt;img data-rawwidth=&quot;1242&quot; data-rawheight=&quot;214&quot; src=&quot;https://pic4.zhimg.com/v2-ed8463de8097ce4d04be2782a5769107_b.jpg&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1242&quot; data-original=&quot;https://pic4.zhimg.com/v2-ed8463de8097ce4d04be2782a5769107_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;比如这类英文单词拼写错误。&lt;br&gt;&lt;img data-rawwidth=&quot;1241&quot; data-rawheight=&quot;1653&quot; src=&quot;https://pic3.zhimg.com/v2-15c3a57e51bcf201ec0c3f54a1d23efe_b.jpg&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1241&quot; data-original=&quot;https://pic3.zhimg.com/v2-15c3a57e51bcf201ec0c3f54a1d23efe_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;css一会儿换行一会儿不换行，还有缩进不一致的，中文名字体之类的…&lt;br&gt;&lt;br&gt;综上所述，你提供的信息并不能证明你熟练掌握了HTML/CSS/JS&lt;br&gt;&lt;br&gt;别的答主有建议你学学框架什么的，但我想你最好在学习框架之前，再踏实一下基础知识的掌握吧，多看看系统讲解的书，少看视频。&lt;br&gt;&lt;br&gt;目的不是为了打击你，只希望你放下一颗浮躁的心，好好学习天天向上。&lt;br&gt;&lt;br&gt;还有一些答主上来就直接把我批判了一番，想要和别人辩论先理解清楚别人的意思难道不是最基本的修养么？介于这个问题现在关注人数已经很多，需要帮助的人不止题主一个，我就再补充一下，具体到底要怎么好好学习呢：&lt;br&gt;&lt;br&gt;首先最基本的写代码一定要规范，Google/Airbnb或者是国内一些大厂都有自己的代码标准规范，网上很容易就能搜到，我个人认为在初学的时候就养成良好的编码习惯是非常重要的。&lt;br&gt;&lt;br&gt;然后要做几个像那么回事的小项目出来，比如用JS写一个迷宫小游戏，做一个待办事项Web应用，微型问卷调查平台，书籍交换分享平台什么的，百度IFE学院的最后几个大项目那样的就好。听起来比较复杂而已，上手做投入几个星期怎么着也能做出来。&lt;br&gt;&lt;br&gt;之后就是好好写一份简历，或者专门用前端的知识自己制作一个线上的网页简历，主要内容还是你的这些实践项目，一定要讲清楚自己用了什么技术，通过什么方法，解决了什么样的困难和需求。&lt;br&gt;&lt;br&gt;还有参与开源真的很难么？你可以从最简单的awesome list开始，只是给维护者提交一个相关的网页链接而已，就相当于大家共用的一个网页收藏夹；或者也有一些框架和库会有showcase的收集，你可以把自己做的小demo提交上去，如果被收录肯定也是会给你加分的，另外最简单的，比如你不会用github上面的某个库，直接去issue里提问都可以，从你和维护者的交流也能看到你开源的参与度。这样的事情真的很难么？这就算吓唬小萌新么？&lt;br&gt;&lt;br&gt;还有非常重要的一点，一定要多看书，少看视频，少看质量良莠不齐的在线教程，看书是系统地获取知识，其他的方式不是被动学习就是碎片化的知识。我知道看书肯定没看视频轻松，可学习哪有总是轻松的。这一点非常重要。&lt;br&gt;&lt;br&gt;另外我之前其实已经回答过非常多类似的问题了，我也专门为前端萌新开了专栏，发了很多干货。&lt;br&gt;&lt;br&gt;假如我真的只是为了装X的话，至于装的这么累么？&lt;br&gt;&lt;br&gt;心塞。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img data-rawwidth=\"1242\" data-rawheight=\"214\" src=\"https://pic4.zhimg.com/v2-ed8463de8097ce4d04be2782a5769107_200x112.jpg\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/v2-ed8463de8097ce4d04be2782a5769107_r.jpg\">\n谢邀！ 没有打击你的意思，但我要实话实说了。 你提供的这些信息和项目中没有一项是可以给你加分的。 首先说明一下Github的使用，Github是一个开源社区，如果仅仅是注册个账户把代码挂在上面，和你注册个百度网盘账号存文件没有任何本质上的区别。 你还是初…\n\n<a href=\"/question/52739452/answer/135720155\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-12-13\" target=\"_blank\" href=\"/question/52739452/answer/135720155\">编辑于 2016-12-16</a></p>\n\n",
    "link": "https://zhihu.com/question/52739452/answer/135720155"
  },
  {
    "question": "\n前端工程师懂设计对工作是否有用？\n",
    "author": "sofish",
    "content": "\n\n<textarea hidden class=\"content\">作为一个开发者，一个程序员，一个前端，懂（界面）设计对工作有没有好处？我们举个例子。&lt;br&gt;&lt;br&gt;昨天买了一只口红送给老婆，她说这只口红买的「有品味」。我跟她说，从某种程度上来说对于一个商品要达到「有品味」很简单，只要做到两点：一是选择包装好看的；一是选择贵的。好看是主观的好看，而贵基本上是市场选择的结果。&lt;br&gt;&lt;br&gt;为什么会举这个例子？因为虽然我第一次买，而且没有买妹妹常用的 YSL，同事介绍的 Chanel 或者 Dior，但评价却不错。如果美的欣赏达到一定水平，主观选择会带来很大的加分，比如我选择这个口红很大程度是因为它用真皮小羊皮，设计很不错，同样价格的像娇兰就没有这么好看。&lt;br&gt;&lt;br&gt;关注「好看」对我的生活&lt;u&gt;&lt;b&gt;看起来&lt;/b&gt;&lt;/u&gt;并没有直接的影响，就像懂设计&lt;b&gt;&lt;u&gt;看起来&lt;/u&gt;&lt;/b&gt;对前端开发并没有直接的影响。但事实却影响着日常生活的各种决定。比如 Macbook、比如洗衣机、又比如书房的装修对家具的选择。这里不一一举例。拿 UI ( User Interface ) 设计来说，对于前端工程师来说，通常有两方面特别需要关注：好看、好用。好看因人而异，甚至有时候需要有独特口味的人做专制的选择，比如你上游是 Design Team，那么如果说服不了他们，最好是相信他们，而如果上游没有，那么一个 UI 好不好看完全在于你（像开源软件，一般我会选择好看的），不懂设计的人很难做出很好的对 UI 有要求的开源软件；而好用也很重要，而且必须懂，比如要知道如何「更快」「更流畅」「用户少做一步」等，容易量化，所以容易改进。&lt;br&gt;&lt;br&gt;如果不懂设计，在前端这个行业，很有可能发生的事是：来一个需求做一个需求，并且觉得没完没了；没有参与感，没有话语权，并不觉得在改变点什么；作品一成不变，很难有触动和改变；随时可被替换；一旦有机会负责一个完整的面向用户的项目，会做的非常糟糕；等等。对于一个非常希望帮助用户「生活的更简单」的工程师来说，这是非常恐怖的，或者说这应该是开发一个无思想的机器人来做的。&lt;br&gt;&lt;br&gt;所以怎么说呢？抱着「懂设计无用」思想的同学，也许... 这是适合你的吧。反正我觉得懂设计，挺好的，不止对于工作，对于日常生活也是。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n作为一个开发者，一个程序员，一个前端，懂（界面）设计对工作有没有好处？我们举个例子。 昨天买了一只口红送给老婆，她说这只口红买的「有品味」。我跟她说，从某种程度上来说对于一个商品要达到「有品味」很简单，只要做到两点：一是选择包装好看的；一…\n\n<a href=\"/question/47408508/answer/106269994\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/47408508/answer/106269994\">发布于 2016-06-16</a></p>\n\n",
    "link": "https://zhihu.com/question/47408508/answer/106269994"
  },
  {
    "question": "\n什么是 Twitter Bootstrap？\n",
    "author": "简叔",
    "content": "\n\n<textarea hidden class=\"content\">&lt;b&gt;为什么要用 Bootstrap&lt;/b&gt;&lt;br&gt;&lt;br&gt;Bootstrap 是由两个 twitter 员工开发并开源的前端框架，目前已经到了 2.0.4 的版本，在 Github 上面有 32517个 watch，和 6608个 fork。非常火爆，而如此火爆自然有它的道理，在我们团队的所有项目中正全面推行使用 Bootstrap，我想根据自己的实际使用体验来说明一下为什么要用 Bootsrap。&lt;br&gt;&lt;br&gt;&lt;b&gt;twitter 出品&lt;/b&gt;&lt;br&gt;&lt;br&gt;首先，Bootstrap 出自 twitter，大厂出品，并且开源，自然久经考验，减少了测试的工作量。站在巨人的肩膀上，不重复造轮子。&lt;br&gt;同时，Bootstrap 的代码有着非常良好的代码规范，从中也可以学习到很多，在 Bootstrap 的基础之上创建项目，日后代码的维护也变得异常简单清晰。&lt;br&gt;&lt;br&gt;&lt;b&gt;基于 Less、丰富的 Mixin&lt;/b&gt;&lt;br&gt;&lt;br&gt;如果你不知道 Sass 或者 Less 这样的 CSS 预处理技术，我只能说你实在太落伍了，建议你先去了解之。&lt;br&gt;Bootstrap 的一大优势就是它是基于 Less 打造的，并且也有 Sass版本。正因为如此，它一推出就包含了一个非常实用的 Mixin 库任你调用。&lt;br&gt;举个很简单的例子，当你平时要用到一些 css3 属性的时候，你要写不同的浏览器写不同的 -prefix-，比如圆角 border-radius ：&lt;br&gt;&lt;br&gt;-webkit-border-radius: 10px;&lt;br&gt; -moz-border-radius:10px;&lt;br&gt; -border-radius:10px; &lt;br&gt;&lt;br&gt;但是通过 Bootstrap 给你预设好的 mixin，你直接写成这样就可以了：&lt;br&gt;&lt;br&gt;@include border-radius (10px); &lt;br&gt;&lt;br&gt;是不是轻松愉快？基本常用的 CSS3 mixin 都帮你整理好了，你都直接调用就可以了，在此不一一举例。 Bootstrap 是目前最好的基于 Less(Sass) 的前端框架，丰富而实用的 Mixin 应该是其最好的地方。&lt;br&gt;&lt;br&gt;&lt;b&gt;可以 Responsive 的栅格系统&lt;/b&gt;&lt;br&gt;&lt;br&gt;Bootstrap 的 栅格 (Grid) 系统也很先进，整个 Grid 系统是可以 Responsive 的！如果你还不知道 Responsive Design，那么你太落伍了，建议你了解之。&lt;br&gt;Bootstrap 已经帮你搭好了实现 Responsive Design 的基础框架，并且非常容易修改。如果你是一个新手，Bootstrap 可以帮助你在非常短的时间内上手 Responsive Design。&lt;br&gt;&lt;br&gt;&lt;b&gt;丰富的组件&lt;/b&gt;&lt;br&gt;&lt;br&gt;Bootstrap 的HTML组件 和 Js组件 非常丰富，并且代码简洁，非常易于修改，你完全可以在其基础之上修改成自己想要的任何样子。这是工作效率的极大提升。&lt;br&gt;&lt;br&gt;&lt;b&gt;插件&lt;/b&gt;&lt;br&gt;&lt;br&gt;另外、由于 Bootstrap 的火爆，又出现了不少围绕 Bootstrap 而开发的插件。其中最实用的莫过于 Font Awesome 了。它是一套 icon font，提供了丰富的 icon 给你选择，新的 2.0 版又根据网友的意见增加了70个新的 icon。&lt;br&gt;&lt;br&gt;在现在一股有 Apple 带领的 Retina 潮流下，对图片的视网膜屏下的解决方案已经变得越来越有必要了，而在 icon 这个东西上，icon font 是完美的解决方案，不用担心分辨率的问题，因为它实际上是字体。&lt;br&gt;&lt;br&gt;&lt;b&gt;以上&lt;/b&gt;&lt;br&gt;这些就是为什么要用 Bootstrap 的原因，目前市面上没有任何其他框架可以和它相媲美，但是它就虽然是一匹好马，你还是需要花费一些时间去学习它、适应它，它在日后给你带来的便利性是无可比拟的，你会后悔自己为什么没有早点接触它。&lt;br&gt;&lt;br&gt;&lt;b&gt;一些题外话&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;我不喜欢用框架，我喜欢原生的写法&lt;/b&gt;&lt;br&gt;&lt;br&gt;这是我在给别人推荐 Bootstrap 的时候最常听到的话，我只能说，Bootstrap 并不能帮你完成所有事情，它只是一个的框架，在这个框架上面你依旧可以任意的发挥，并且发挥得更好，但是前提是你要驾驭得了它。&lt;br&gt;如果你不够熟悉它，你确实是有时候会被它有所牵绊，但是你熟悉了之后发现了其实它没有对你进行任何限制，这需要一个过程。&lt;br&gt;&lt;br&gt;&lt;b&gt;是给无设计师的团队或者程序员用的&lt;/b&gt;&lt;br&gt;&lt;br&gt;对此我真的是无力吐槽，Bootstrap 的开发者就在他的博客上抱怨过，为什么出来那么一堆完全照搬 Bootstrap 样式的网站。&lt;br&gt;记住、完全用 Bootstrap 的样式只会让人心生厌烦。&lt;br&gt;&lt;br&gt;简书用的就是 Bootstrap ：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//jianshu.io&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;jianshu.io&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n<b>为什么要用 Bootstrap</b> Bootstrap 是由两个 twitter 员工开发并开源的前端框架，目前已经到了 2.0.4 的版本，在 Github 上面有 32517个 watch，和 6608个 fork。非常火爆，而如此火爆自然有它的道理，在我们团队的所有项目中正全面推行使用 Bootstrap，我想…\n\n<a href=\"/question/19821825/answer/14075709\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-03-20\" target=\"_blank\" href=\"/question/19821825/answer/14075709\">编辑于 2014-04-09</a></p>\n\n",
    "link": "https://zhihu.com/question/19821825/answer/14075709"
  },
  {
    "question": "\nJavaScript中(function(){…})(); 与 (function(){…}()); 这两种写法在意义上有什么区别？\n",
    "author": "张立理",
    "content": "\n\n<textarea hidden class=\"content\">这个问题可以从不同的角度来看，但从结果上来说，个人的意见是：&lt;b&gt;他们是一样的&lt;/b&gt;。&lt;br&gt;&lt;br&gt;首先，如果从AST（抽象语法树）的角度来看，这边我使用了uglify-js（&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/mishoo/UglifyJS&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;github.com/mishoo/Uglif&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;yJS&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）来进行AST的生成，这个库应该在生成javascript的AST中算是比较流行的了，其结果如下：&lt;br&gt;&lt;blockquote&gt;代码：(function() {}());&lt;br&gt;结果：&lt;br&gt;[&lt;br&gt;  &quot;toplevel&quot;,&lt;br&gt;  [&lt;br&gt;    [&lt;br&gt;      &quot;stat&quot;,&lt;br&gt;      [&lt;br&gt;        &quot;call&quot;,&lt;br&gt;        [&lt;br&gt;          &quot;function&quot;,&lt;br&gt;          null,&lt;br&gt;          [],&lt;br&gt;          []&lt;br&gt;        ],&lt;br&gt;        []&lt;br&gt;      ]&lt;br&gt;    ]&lt;br&gt;  ]&lt;br&gt;]&lt;br&gt;&lt;br&gt;&lt;br&gt;代码：(function() {})();&lt;br&gt;结果：&lt;br&gt;[&lt;br&gt;  &quot;toplevel&quot;,&lt;br&gt;  [&lt;br&gt;    [&lt;br&gt;      &quot;stat&quot;,&lt;br&gt;      [&lt;br&gt;        &quot;call&quot;,&lt;br&gt;        [&lt;br&gt;          &quot;function&quot;,&lt;br&gt;          null,&lt;br&gt;          [],&lt;br&gt;          []&lt;br&gt;        ],&lt;br&gt;        []&lt;br&gt;      ]&lt;br&gt;    ]&lt;br&gt;  ]&lt;br&gt;]&lt;/blockquote&gt;从结果而言，两者的AST是一模一样的，最终结果都是一次&lt;b&gt;函数调用&lt;/b&gt;。因此，就解析器产生的结果论而言，两者是没有区别的。&lt;br&gt;&lt;br&gt;其次 ，从作用上看，前文已经说了，两者的作用都是创建一个函数并调用之。&lt;br&gt;那么为什么要创建一个函数并立即调用呢，我想大多数是因为javascript的代码默认在&lt;b&gt;全局环境&lt;/b&gt;下执行，在此声明的所有变量都会变成&lt;b&gt;全局变量&lt;/b&gt;，这很容易导致全局对象的污染。因此我们不得不找一个办法来隔离这些变量，而函数正好会创建属于自己的作用域，因此创建一个匿名函数并立即调用（有称此为IIFE-Immediately Invoked Function Exprssion-立即调用的函数表达式）成为了一种几乎公认的方案。&lt;br&gt;随后，又为什么要这么写呢？原因自然是在javascript中有2个语法都与function关键字有关，分别是：&lt;br&gt;函数定义：function FunctionName(FormalParameterList) { FunctionBody }&lt;br&gt;函数表达式：function [FunctionName](FormalParameterList) { FunctionBody }&lt;br&gt;从语法的定义上看，这两者几乎是一模一样的（唯一的区别是函数表达式可以省略函数名称），那么就解释器而言，当遇到这个结构的语句时，判定为函数表达式还是函数定义呢？&lt;br&gt;就javascript的语法而言，如果一条语句是以function关键字开始，那么这段会被判定为&lt;b&gt;函数定义&lt;/b&gt;。而函数定义是不能被立即执行的，这无疑会导致语法的错误（SyntaxError），因此就必须有一个办法，使解析器可以将之识别为函数表达式。&lt;br&gt;前面已经说到，解析器识别函数定义的条件是&lt;b&gt;以function关键字开始&lt;/b&gt;，那么自然，只要在function关键字的前面有&lt;b&gt;任何其他的元素&lt;/b&gt;，就会从函数定义转变为函数表达式，以下方法都是可以的，这个大家都知道：&lt;br&gt;~function() {}();&lt;br&gt;!function() {}();&lt;br&gt;void function() {}();&lt;br&gt;&lt;br&gt;但是这几个方法都有一个特点，就是看起来很别扭，所以现在为止，以括号包裹成了比较公认的方案。&lt;br&gt;回到正题，括号包裹同样有2个方式：(function() {})();和(function(){}());&lt;br&gt;他们的共通点是：都有括号。而括号在javascript中有2种作用：确立运算优先级，以及分组运算符（&lt;a href=&quot;//link.zhihu.com/?target=http%3A//es5.github.com/%23x11.1.6&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;es5.github.com/#&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;x11.1.6&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;），从代码上看，显然没有进行数学或逻辑运算，因此我认为这里的括号属于&lt;b&gt;分组运算符&lt;/b&gt;。&lt;br&gt;根据标准，分组运算符的作用是：&lt;blockquote&gt;Return the result of evaluating &lt;i&gt;Expression&lt;/i&gt;. This may be of type Reference. &lt;br&gt;&lt;br&gt;返回评估括号中的表达式的结果。结果可能是Reference类型。&lt;/blockquote&gt;抛开像Reference类型这种词汇，这里的一个关键词应当是“ 评估 ”（对evaluate的翻译一直把握不好，姑且这么叫吧），但是关于分组运算符，又有一个很重要的下文：&lt;blockquote&gt;This algorithm does not apply GetValue to the result of evaluating Expression.&lt;br&gt;&lt;br&gt;这个算法不会对估算的结果使用GetValue。&lt;/blockquote&gt;有很多专用的名词，看起来确实复杂，简而言之，使用括号运算符本身不会让括号中的代码立即执行，只有当括号包含的这个“分组”参与其他运算时，才会执行。因此，(function(){})()这个语句，其实是首先用分组运算符评估了一个&lt;b&gt;函数表达式&lt;/b&gt;，随后参与“函数调用”。而(function(){}())这个语句，则是用分组运算符评估了一个&lt;b&gt;函数调用&lt;/b&gt;，随后由于语句的结束而被执行。从语句上来说有细微的差距，当然就结果而言是&lt;b&gt;一样&lt;/b&gt;的，最初的AST分析也可以证实这点，分组运算符在AST中完全没有体现出来。&lt;br&gt;&lt;br&gt;补充一点，分组运算符在AST中是完全被忽略的，例如以下结果：&lt;blockquote&gt;代码：var type = (typeof 2);&lt;br&gt;语法树：&lt;br&gt;[&lt;br&gt;  &quot;toplevel&quot;,&lt;br&gt;  [&lt;br&gt;    [&lt;br&gt;      &quot;var&quot;,&lt;br&gt;      [&lt;br&gt;        [&lt;br&gt;          &quot;type&quot;,&lt;br&gt;          [&lt;br&gt;            &quot;unary-prefix&quot;,&lt;br&gt;            &quot;typeof&quot;,&lt;br&gt;            [&lt;br&gt;              &quot;num&quot;,&lt;br&gt;              2&lt;br&gt;            ]&lt;br&gt;          ]&lt;br&gt;        ]&lt;br&gt;      ]&lt;br&gt;    ]&lt;br&gt;  ]&lt;br&gt;]&lt;/blockquote&gt;可以看到依旧没有括号的位置，和var type = typeof 2;产生的AST是一模一样的。&lt;br&gt;&lt;br&gt;&lt;b&gt;再次强调下结论：两者是一模一样的，不需要纠结这个。&lt;/b&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n这个问题可以从不同的角度来看，但从结果上来说，个人的意见是：<b>他们是一样的</b>。 首先，如果从AST（抽象语法树）的角度来看，这边我使用了uglify-js（<a href=\"//link.zhihu.com/?target=https%3A//github.com/mishoo/UglifyJS\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">github.com/mishoo/Uglif</span><span class=\"invisible\">yJS</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>）来进行AST的生成，这个库应该在生成javascript的AST中算是比较流行的了，其结果如…\n\n<a href=\"/question/20292224/answer/14660182\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-06-15\" target=\"_blank\" href=\"/question/20292224/answer/14660182\">编辑于 2012-06-15</a></p>\n\n",
    "link": "https://zhihu.com/question/20292224/answer/14660182"
  },
  {
    "question": "\nCDN是什么？使用CDN有什么优势？\n",
    "author": "流年",
    "content": "\n\n<textarea hidden class=\"content\">这个问题的解答，需要分五步。&lt;br&gt;&lt;br&gt;第一步，HTML的文件引用：&lt;br&gt;HTML的文件头（也有文件中，文件尾）那边常有其他文件引用，比如CSS以及JS的引用。&lt;br&gt;&lt;br&gt;就以bootstrap常用的引用来举个栗子&lt;br&gt;你常见的引用可能会是这样的：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Mushroom&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IE=edge,Chrome=1&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IE=9&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 引入 Bootstrap --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- jQuery (Bootstrap 的 JavaScript 插件需要引入 jQuery) --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/js/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 包括所有已编译的插件 --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/js/bootstrap.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;这之中，&amp;lt;script src=&quot;/js/bootstrap.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; 这段就是外部脚本文件的一个链接，当前的这种链接是相对URL，指向站点内的文件，即你本项目里对应路径下面放置的文件。可以在 &lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3school.com.cn/tags/att_script_src.asp&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML &amp;lt;script&amp;gt; 标签的 src 属性&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 查看这个标签的具体属性。&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;属性值\n值 描述 \nURL 外部脚本的 URL。可能的值有：\n\n•绝对 URL - 指向其他站点（比如 src=&quot;www.example.com/example.js&quot;）\n•相对 URL - 指向站点内的文件（比如 src=&quot;/scripts/example.js&quot;）\n \n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;通过查看可以得知，URL的引用有两种方式，绝对和相对，绝对的方式就是直接引用其他站点的js地址，比如我把上方的引用改为 &lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://apps.bdimg.com/libs/bootstrap/3.3.0/js/bootstrap.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;这样即是引用其他站点的js。&lt;br&gt;CSS文件的引用与此类似：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.w3school.com.cn/tags/att_link_href.asp&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;HTML &amp;lt;link&amp;gt; 标签的 href 属性&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;图片以及其他文件的引用也类似，不赘述。&lt;br&gt;&lt;br&gt;第二步，系统的资源引用&lt;br&gt;在一个网站项目中，页面里经常会有许多js以及css的引用，接触过开发项目的一般都会了解，大部分界面里的脚本引用并不是像第一步里的那么精简，如果是直接引用项目内文件的话，他们可能是这样的：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;SCRIPT src=&quot;/iforums/templates/default/js/common.js&quot; type=text/javascript&amp;gt;&amp;lt;/SCRIPT&amp;gt;\n&amp;lt;SCRIPT src=&quot;/iforums/templates/default/js/ajax.js&quot; type=text/javascript&amp;gt;&amp;lt;/SCRIPT&amp;gt;\n&amp;lt;SCRIPT type=text/javascript src=&quot;/iforums/ueditor/third-party/jquery-1.10.2.min.js&quot;&amp;gt;&amp;lt;/SCRIPT&amp;gt;\n&amp;lt;SCRIPT type=text/javascript src=&quot;/iforums/ueditor/ueditor.config.js&quot;&amp;gt;&amp;lt;/SCRIPT&amp;gt;\n&amp;lt;SCRIPT type=text/javascript src=&quot;/iforums/ueditor/ueditor.parse.js&quot;&amp;gt;&amp;lt;/SCRIPT&amp;gt;\n&amp;lt;SCRIPT type=text/javascript src=&quot;/iforums/ueditor/ueditor.all.js&quot;&amp;gt;&amp;lt;/SCRIPT&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;可能甚至引用的更多，这样将资源文件与业务代码一锅炖的方式适用于小型的，应用服务器压力并不是太大的系统（并发、带宽、存储空间、资源等等）。这种方式的优点是开发省力，发布省力，对服务器要求小，省钱，没有具体公网接入需求。许多小型，内部使用型的网站系统往往采取这种形式放置资源文件。&lt;br&gt;&lt;br&gt;第三步，系统访问量变高了，速度变慢了怎么办&lt;br&gt;怎么办？优化系统部署呗。&lt;br&gt;怎么优化？优化方式有很多，读写分离，负载均衡，这方面的东西可以讲上三天三夜。具体到本问题的范畴内，那就是资源服务器与应用服务器的分离。粗暴的理解方式就是，就是应用安在应用服务器（一台或者是集群），资源部署在资源服务器（单台或者是集群），这时候，js以及css的引用就需要更改为绝对URL，指向对应的资源服务器。&lt;br&gt;比如知乎的引用：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apple-touch-icon-precomposed&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/img/ios/zhihu(57px).png&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apple-touch-icon-precomposed&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/img/ios/zhihu(72px).png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sizes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;72x72&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apple-touch-icon-precomposed&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/img/ios/zhihu(76px).png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sizes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;76x76&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apple-touch-icon-precomposed&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/img/ios/zhihu(114px).png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sizes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;114x114&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apple-touch-icon-precomposed&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/img/ios/zhihu(120px).png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sizes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;120x120&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;apple-touch-icon-precomposed&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/img/ios/zhihu(152px).png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;sizes=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;152x152&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;\n\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/revved/js/-/vendor.min.5a2082ff.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/revved/js/-/closure/app_core.fb4023ac.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/revved/js/-/closure/sign.e0ca7b10.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/revved/js/-/closure/app.9eaaec15.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://static.zhihu.com/static/revved/js/-/closure/rich_text_editor.3a07c473.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;有兴趣的话，你可以打开这个链接看看是什么页面：&lt;a href=&quot;http://static.zhihu.com&quot; class=&quot;internal&quot;&gt;http://static.zhihu.com/&lt;/a&gt;&lt;br&gt;也可以打开这个看看：&lt;a href=&quot;http://static.zhihu.com/static&quot; class=&quot;internal&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;static.zhihu.com/static&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;第四步，网络方面的优化&lt;br&gt;网站的访问速度，只基于一点，那就是页面包含的内容传输到用户电脑的速度，服务器搭的再好再完美，如果用户到服务器的链路之间有一段比较缓慢的话，整体速度也会被拉的十分差劲。&lt;br&gt;想象一下，你给公司做了个运行于公司内网的网站，一切运行良好，分布式部署也已搭建完毕，一切都很完美。&lt;br&gt;后来，你公司运营良好，开了一个十分遥远的分公司（不要问为什么遥远，再问自绝经脉），你们的内网也同时连了过去（对，就是那种很直接的搭了几条网线就把两个局域网连成一个局域网的黑科技）。但是因为太远了线节点太多了，分公司访问公司的系统十分缓慢，这时候你就愁啊，这可咋办？那不行就在分公司那边部署一套内容缓存好了，内容进行同步，这样至少分公司的网页访问速度能提升很多，你也可以立功升职加薪了。&lt;br&gt;紧接着，因为你的出色表现，你们公司扩展十分厉害，在全国各地都建立了分公司，你又开始愁了，这不能每个分公司都搭一套啊，累得慌啊。思来想去，那就华东一套华北一套华南一套东北一套这样分吧，然后搭一些分发服务器，接入访问地址，然后跳转到就近的内容缓存服务器进行内容读取，OK，又到了升职加薪的时刻了~&lt;br&gt;对，到这里，你已经完成了一套简易CDN的建设。&lt;br&gt;&lt;br&gt;第五步，CDN是什么？&lt;br&gt;你的搭建只是基于你公司的大型局域网，而现行的流行CDN则是基于地球搭建的超大型局域网--因特网。它的好处是什么呢？&lt;br&gt;比如你这么写：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 引入 Bootstrap --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://apps.bdimg.com/libs/bootstrap/3.3.0/css/bootstrap.min.css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;c&quot;&gt;&amp;lt;!--[if lt IE 9]&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;c&quot;&gt;    &amp;lt;script src=&quot;http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;c&quot;&gt;    &amp;lt;script src=&quot;http://apps.bdimg.com/libs/respond.js/1.4.2/respond.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;span class=&quot;c&quot;&gt;    &amp;lt;![endif]--&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- jQuery (Bootstrap 的 JavaScript 插件需要引入 jQuery) --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 包括所有已编译的插件 --&amp;gt;&lt;/span&gt;\n    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://apps.bdimg.com/libs/bootstrap/3.3.0/js/bootstrap.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;上面的地址是百度CDN的链接地址。&lt;br&gt;那么用户在读取网页内容的时候，就会去百度的就近服务器上掏这些js和css，而不是在你的服务器里捞。&lt;br&gt;好处呢，第一，一般来说，访问速度有保障，稳定性也有保障；第二，你可以省下资源服务器的一部分资源负担，节省空间节省流量，艰苦创业，能省则省啊。&lt;br&gt;&lt;br&gt;这时候你会问了，为什么只有js和css呢？其他的图片啊html内容啊不能放进CDN吗？&lt;br&gt;能啊为啥不能，CDN服务就靠这赚钱呢为啥不能，非广告非广告非广告，你看：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//bce.baidu.com/product/cdn.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;CDN-Content Delivery Network-百度开放云&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;同类产品还有阿里云等等等等。。&lt;br&gt;&lt;br&gt;你看的文章中的CDN，一般都是指js和css文件的CDN存储，而对于你的两个问题，遗憾的告诉你，不是，不能。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n这个问题的解答，需要分五步。 第一步，HTML的文件引用： HTML的文件头（也有文件中，文件尾）那边常有其他文件引用，比如CSS以及JS的引用。 就以bootstrap常用的引用来举个栗子 你常见的引用可能会是这样的： &lt;head&gt;\n &lt;title&gt;Mushroom&lt;/title&gt;\n &lt;meta name…\n\n<a href=\"/question/36514327/answer/68143522\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-10-17\" target=\"_blank\" href=\"/question/36514327/answer/68143522\">编辑于 2015-10-17</a></p>\n\n",
    "link": "https://zhihu.com/question/36514327/answer/68143522"
  },
  {
    "question": "\n国内有哪些前端开发牛人？\n",
    "author": "匿名用户",
    "content": "\n\n<textarea hidden class=\"content\"> 各有各的牛气，说说我知道的：&lt;br&gt;&lt;br&gt;JavaScript 语言：周爱民、老赵、玉伯、hax, 月影、CatChen, winter, 白露飞 等等&lt;br&gt;DOM 和浏览器兼容性：winter, 司徒正美、屈超、怿飞 等等&lt;br&gt;HTML 和 CSS：彪叔、aoao, 怿飞、macji 等等&lt;br&gt;类库框架：玉伯、JK, cnberg, yiminghe, 元彦 等等&lt;br&gt;前端布道士：克军、玉伯、怿飞、秦歌、小马 等等&lt;br&gt;不知分到哪一类的：hujinpu, 李牧、winter, dexteryy, 李超、老鱼、太伯、陈成 等等一堆人&lt;br&gt;&lt;br&gt;还有游戏领域，Flash 达人等等，肯定漏了 n 多牛人，欢迎补充。 </textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n各有各的牛气，说说我知道的： JavaScript 语言：周爱民、老赵、玉伯、hax, 月影、CatChen, winter, 白露飞 等等 DOM 和浏览器兼容性：winter, 司徒正美、屈超、怿飞 等等 HTML 和 CSS：彪叔、aoao, 怿飞、macji 等等 类库框架：玉伯、JK, cnberg, yiminghe…\n\n<a href=\"/question/19701162/answer/12708633\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/19701162/answer/12708633\">发布于 2011-06-09</a></p>\n\n",
    "link": "https://zhihu.com/question/19701162/answer/12708633"
  }
]