[
  {
    "question": "\n在开发过程中如何应用mvvm思想（非现有的框架）？\n",
    "author": "徐飞",
    "content": "\n\n<textarea hidden class=\"content\">谢邀。。。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;我们写界面的时候，经常会碰到一些功能，比如，从某些数据动态生成界面，然后从输入控件采集数据，经过变换，更新另外的界面。&lt;br&gt;&lt;br&gt;整个这个过程，其实归纳来看，就两件事：&lt;br&gt;&lt;br&gt;- 根据数据的变动，生成或者变更界面&lt;br&gt;- 根据界面的操作，变更数据&lt;br&gt;&lt;br&gt;所有的界面相关操作流程，都可以化为若干这两种操作的组合。写多了之后，我们就可以总结出，两者又都是包含一些模式的，比如说，数据的变动，它包含：&lt;br&gt;&lt;br&gt;- 简单类型的创建赋值&lt;br&gt;- 引用类型的创建和赋值&lt;br&gt;- 数组元素的添加，移除，交换、赋值&lt;br&gt;- 对象属性的添加、删除、赋值&lt;br&gt;&lt;br&gt;界面的变更，包含：&lt;br&gt;&lt;br&gt;- 元素的创建、交换、移位、移除&lt;br&gt;- 属性的创建、赋值、移除&lt;br&gt;&lt;br&gt;再总结下去，就会发现，数据和界面的变更之间，一般都是存在对应关系的。&lt;br&gt;&lt;br&gt;比如说，一个数组跟界面一个列表对应，两者始终是同步的，一个变了，另外一个也要跟着变。一个变量或者对象的键值，对应到一个元素的属性上，一个变了，另外一个也要跟着变。&lt;br&gt;&lt;br&gt;既然这样，如果我们能够引入一种绑定关系，经过一系列的配置过程，使得以后每次数据发生变更，界面都会自动跟着作对应变动；界面上的操作，也会自动更新到数据，那开发过程就会非常省事了，绝大部分此类操作都会转化为配置，供绑定框架用来建立数据和界面之间的关联关系。&lt;br&gt;&lt;br&gt;所以，数据绑定是一个非常广泛而迫切的需求，任何一个现代界面开发体系，如果不提供某种数据绑定机制，其开发过程就必定是低效的。&lt;br&gt;&lt;br&gt;那么，界面，很好理解，肯定是View，数据，如果说是Model，那ViewModel又是什么？&lt;br&gt;&lt;br&gt;以购物车结算页面为例，包含的内容有：&lt;br&gt;&lt;br&gt;- 已选商品列表（每种商品可以添加或者移除数量，并且有每种商品的总价）&lt;br&gt;- 商品总数和总价&lt;br&gt;&lt;br&gt;从View的角度，一般不会有太多疑问，看到的东西，可以视业务场景做分块，每块单独实现，但是Model呢？&lt;br&gt;&lt;br&gt;我们知道Model是一种数据，但并非每个数据都属于Model，一般来说，在页面上的数据中，用于跟服务端交互的数据，可以大致视为Model，回到我们这个例子中看，那就是每种商品的已选数量。&lt;br&gt;&lt;br&gt;但另外还有一些东西是要用于展示或者中间步骤的，那就是每种商品的总价，还有商品总数、总价，这些东西由于不提交，仅供视图使用，所以可以视为ViewModel。&lt;br&gt;&lt;br&gt;ViewModel是Model和View之间的桥梁，它的设计原则是：&lt;br&gt;&lt;br&gt;- 为Model和View提供适配&lt;br&gt;- 如果有需要转换的过程，尽可能在ViewModel中做，保持Model的纯洁，View的清晰。&lt;br&gt;&lt;br&gt;我们上面这个例子中，数据的转换并不明显。大家都见过行政区划树吧，省市县乡村，可能Model给的数据都是平级，然后根据展示的需要，转换成树状的，转换之后的数据，就是专供展示用的ViewModel了。&lt;br&gt;&lt;br&gt;综上，MVVM所包含的Model，View，ViewModel三层，在实践的时候，主要包含几个要点：&lt;br&gt;&lt;br&gt;- 以不同的角色分别考虑每个层次&lt;br&gt;- 先考虑Model和View，最后考虑ViewModel&lt;br&gt;&lt;br&gt;这个ViewModel，责任可不轻，就像中年男人，是婆媳关系的纽带、桥梁，要想两头满意，就得自己多干，脏活累活全都我来，你们歇着……&lt;br&gt;&lt;br&gt;--------------------&lt;br&gt;欠两个例子代码，闲了用Vue补个</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n谢邀。。。 我们写界面的时候，经常会碰到一些功能，比如，从某些数据动态生成界面，然后从输入控件采集数据，经过变换，更新另外的界面。 整个这个过程，其实归纳来看，就两件事： - 根据数据的变动，生成或者变更界面 - 根据界面的操作，变更数据 所有的…\n\n<a href=\"/question/41559085/answer/92475533\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/41559085/answer/92475533\">发布于 2016-03-27</a></p>\n\n",
    "link": "https://zhihu.com/question/41559085/answer/92475533"
  },
  {
    "question": "\n在今天，利用 HTML5 开发和发布大型跨平台网游，可行性如何？要解决哪些问题？\n",
    "author": "赵霏",
    "content": "\n\n<textarea hidden class=\"content\">谢谢继新邀请。正好最近我们团队的拙作《修仙三国》正式发布，这款产品的特色在于是首个利用HTML5技术研发的大型角色扮演类网游并且同时在多个平台全面发行，我们自己当然是相信其品质和体验堪为HTML5同类游戏标杆。谢谢继新，以及不少关注和支持我的朋友们，一直在问我这款游戏的研发过程。我不敢敝帚自珍，现将自己过去一年多时间内所经历过的种种酸甜苦辣和抉择都一一撰写出来，本文并非技术开发指导的具体教程，而是一个团队在通往HTML5游戏商业化之路的种种艰辛努力和宝贵经验，希望没有辜负邀请。&lt;br&gt;&lt;br&gt;       早在2012年，经过一番痛苦的尝试之后，我们发现手机用户对于HTML5游戏的体验确实不如想象中理想。究其根本原因是因为手机上的浏览器使用率要比PC较低，很多时候手机用户的网络环境并不佳，他们对使用网页打开的应用或者游戏都存在一定的偏见，觉得过慢或者消耗流量花费金钱而避而远之，同时手机浏览器也无法使用脚本的方式将网页直接留存在历史记录或者书签内导致不少用户无法返回游戏，这些使得我们在推广和玩家留存上遭遇了很大的阻力。但是在此前游戏产品推广运营的过程中我们也意外的发现，几乎有一半的玩家选择了同时用PC和手机来体验我们的游戏，还有更多的玩家在用平板电脑，虽然基数很少但带给了我们很大的鼓舞，也坚定了我们继续下去的决心。&lt;br&gt;       于是去年7月份，团队的核心成员聚在一起，开始商量如何继续做下一款HTML5网游。最初提出做MMORPG的想法遭到了不少人的反对，理由还是在于HTML5屡遭人诟病的性能问题。很多人认为做卡牌类型或者SLG游戏才是HTML5游戏最好的方向，毕竟当时手机卡牌类游戏方兴正艾。但最终我还是努力说服了所有人，毕竟技术是发展进步的，无论是手机浏览器还是硬件，在游戏长达一年的研发周期中，谁都很难预料到未来的急速变化。我们应该着眼于下一阶段，做更超前一步的事情。现在已经可以看到手机浏览器几乎每个版本在对HTML5的支持方面都有令人欣喜的进步！而我们为什么不能做一些超越自己能力的挑战。经过市场调查发现2.5D视角的角色扮演类游戏有着其它游戏难以企及的代入感，最受玩家青睐。最后，团队所有人一致决定，一定要做一个“毁人三观”的HTML5多人角色扮演跨平台网游！&lt;br&gt;&lt;br&gt;       最后的准备当然是技术的选型和工具，在完成几个Demo之后，大家最终还是决定采用回合制的游戏方式，但也表示永远不会放弃做实时战斗MMOARPG的梦想，将会放在下款游戏！我们在开发上选择用Chrome和iPhone的Safari作为主适配平台，因为这两个分别是PC和手机表现最好的HTML5浏览器，可以用来调试。而编码主要采用Aptana工具，这个继承自Eclipse的优秀脚本编辑器可以非常方便的帮助我们完成编码和调试等一系列工作。而MMORPG游戏开发必不可缺少的地图编辑器和动画编辑器等工具，我们也是提前准备需求，简单且满足游戏开发即可。&lt;br&gt;&lt;br&gt;       很快，在2012年10月份我们正式启动了开发工作，整个团队都开始有条不紊的投入进来了，每个人都非常热情的参与到了游戏中。由于我们采用了HTML5的引擎，这让我们比一般游戏开发团队做起来效率更高，速度更快。举个例子，我们可以直接通过浏览器来调试自己的游戏脚本，而不用任何编译工作，让所有人直接加入测试并提出各自的体验反馈，节省了大量的时间和精力，尤其是对于跨平台开发，并不需要若干个不同系统的客户端团队例如iOS，Andriod,Flash与服务器相互沟通交流，无论是研发成本还是开发周期都大大的节省了，也同时也给测试带来了极大的便利。在整个研发过程中，我们每个人都是策划，都可以提出自己认为好玩的观点，大家在一起汇总评估，也会利用HTML5的优势快速完成几个demo去体验调整。在开发过程中所有成员时刻都保持着危机意识，我们脑海里面有很多假想敌，逼迫着我们每天加班加点赶项目，尤其是我们的前端主程几乎就没有度过一个完整的周末，只是为了让游戏运行得更稳定一些，体验更好一些。新的项目从立项到内测版本发布一共不到8个月的时间（我们的前后端代码全是从零开始写的，基本没有复用）。大家有这样的觉悟，是因为我们之前做的几款产品都犯了一个致命的错误——研发周期太长，最后的结果就是贻误战机，没有在市场最需求的时候将产品发布出去，因此对于这个重量级产品的修仙三国，每一个人都不敢有丝毫怠慢。 &lt;br&gt;&lt;br&gt;      我们曾经为新产品做了两年的储备，HTML5虽然有很多优点，但是劣势也很明显，性能问题、工具不全、没有成熟的开发框架等等，这一切我们从一开始就明白，所以决定一切都自己动手一点一滴积累起来。我们的游戏引擎包括了自己完成的一个包括地图模块，动画模块，UI控件模块以及物理引擎和各种编辑工具，内容都很简单容易上手，我们希望能够用《修仙三国》这款游戏的成功来验证这款引擎的实用性，同时我们也计划在明年初可以将这套成熟的HTML5游戏引擎开放给更多的开发伙伴。&lt;br&gt;&lt;br&gt;      我们始终坚信HTML5是一条正确道路，在产品研发的过程中我们也遇到了数不清的困难，毫不夸张的说每个困难都足以让我们的产品难产甚至绝望。在此其间在团队内部也发出过一些质疑，大家甚至怀疑我们能否将产品最终做出来，毕竟这是一条充满荆棘之路。但是随着大家众志成城一个个难关被攻克、产品的发布，逐渐打消了所有人的疑虑。&lt;br&gt;&lt;br&gt;       在我看来技术只是一种呈现的手段，真正的玩家是不会关心技术的，要让产品成功光靠技术也是不够的，我们所坚持努力的HTML5只是希望让游戏做得更快点，能在有限的时间内多做一些好游戏服务于更多的玩家罢了，为此目标，我们尽了最大的努力。&lt;br&gt;&lt;br&gt;       在开发进展中我们碰到的各种困难，比如UI体验不够流畅，因为HTML5的特性中并没有对于GUI有任何的新标准。我们还是沿用HTML4中就已经制定好的HTML标签，再加上一些CSS3的新样式做出一些之前做不到的特效而已。但是和native应用中的UI界面比起来还是有较大的差距。其次在HTML5中的游戏音效有一些问题，所以我们目前没办法大规模的使用音效，这让游戏的表现力会受到一些影响，不过为此我们正在做出努力，相信随着HTML5最终标准的确立，各大浏览器对于多媒体标准的实现上一定会有很大改进，到那时候这一切都不再是问题。接下来就是编辑器也需要优化，因为HTML5是一个标准，不像flash一样有专门的团队针对游戏开发的需求设计出各种各样的开发工具。我们的编辑器都是靠自己来完成开发，但是之前由于时间有限所以我们编辑器的功能也比较简单，未来我们希望可以将各种编辑工具进行优化，使之功能更加强大。在手机屏幕和平板电脑，PC不同尺寸之间的兼容性我们也做了深入的考虑，虽然浏览器可以自动缩放游戏的分辨率，但随之带来的操作性和字体大小等细节都消耗了我们大量的时间不断的优化调整，力争将产品做到最好。&lt;br&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/604130e2c033631a2c0c135d254c1695_b.jpg&quot; data-rawwidth=&quot;960&quot; data-rawheight=&quot;640&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;960&quot; data-original=&quot;https://pic2.zhimg.com/604130e2c033631a2c0c135d254c1695_r.jpg&quot;&gt;&lt;br&gt;&lt;br&gt;今年6月份，产品终于告一段落，游戏的画面颇为精美，无论是场景和人物设计都是采用了3D建模转2D的方式，游戏的策划和技术也都耗费了我们大量的心血。可在推广问题上大家又有了争执。最后我们经验丰富的投资人创新工场的汪华给了宝贵的建议，这使我们决定采用在智能手机上主推安装包而平板电脑和PC则重点推广Web链接的方案。这样最大限度的发挥HTML5技术优势，即可打包提供下载安装，又可通过网页直接在浏览器内打开。经过我们实际调查分析，认为手机用户和平板电脑用户存在着不同，手机用户的网络条件不如Pad强，而且浏览器的使用率也远低于平板电脑，平板电脑尤其是Pad用户对于Web的产品延续了PC的习惯，他们对直接打开，免下载免安装的网页游戏有着强烈的需求，可由于众所周知的原因，这块却一直都是个蓝海，一块空白。       所以最后又面临打包上苹果AppStore平台的问题，好在这块我们早已积累了丰富的经验，具体请详见 &lt;a href=&quot;http://www.zhihu.com/question/20880421&quot; class=&quot;internal&quot;&gt;HTML5 游戏移植为 iOS 原生应用，需要注意哪些地方？有什么经验可以分享？&lt;/a&gt; 经过一番努力和不断改进，产品最终顺利的通过并且上线了。目前这款游戏已经开始免费下载，如果大家觉得这篇小文对你们有所帮助的话，也请大家支持一下我们，轻点一下app下载，给留个好评，谢谢啦！&lt;br&gt;AppStore（打包版）下载地址：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=https%3A//itunes.apple.com/cn/app/xiu-xian-san-guo/id635818432%3Fmt%3D8&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;itunes.apple.com/cn/app&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;/xiu-xian-san-guo/id635818432?mt=8&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;Web官网地址：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//sg.duopao.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;修仙三国 官方网站&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//sg.duopao.com/adv&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;修仙三国&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; （手机访问）&lt;br&gt;&lt;br&gt;       有人问起安卓平台，我们已经和多家优秀的第三方手机浏览器厂商进行了合作，相信安卓版本在不久就会借助他们强大的HTML5技术的早日出现在玩家的手机中吧！&lt;br&gt;&lt;br&gt;顺便也回复一下前面几位大神的观点吧&lt;br&gt;        从目前浏览器的准备来看，移动平台的iOS的Safari，Andriod系统的uc，TX等第三方浏览器，PC平台上的Chrome，FF，甚至360极速，这些主流浏览器都已经为HTML5做好了准备，即便是多人实时动画也可以在这些平台上得到较好的体验。这些年我们也可以看到包括ARM，Inter这些硬件厂商也在底层方面对HTML5技术提供了更好的支持。我们的游戏是3D转2.5D效果的，但相信未来出现真正3D的web游戏也不是什么太遥远的事情。前路艰险，但总是需要人不懈探索吧。所有的技术都是由简单粗浅一步一步的发展起来。&lt;br&gt;&lt;br&gt;       开发源码的安全问题，js除了混淆和加密确实没有特别好的办法。混淆后的源码的可读情况这个就见仁见智了，总之肯定不如二进制的安全性高，但直接拿来就读也不是什么特别容易的事情吧。&lt;br&gt;HTML5可以像Flash等Web多媒体技术一样，支持分阶段下载资源包也支持离线应用资源，这些都为用户体验带来了便利。&lt;br&gt;&lt;br&gt;最后我再解答一下采用HTML5技术开发游戏的跨平台优势吧。&lt;br&gt;1）用HTML5开发手机应用和游戏的效率会稍高一些，成本也会略有降低。这主要体现在各种智能手机终端的移植上，我们前端都是javascript工程师，而打包移植的工作有1个人就可以快速搞定。不需要同时维护若干个团队和若干个版本。&lt;br&gt;2）用HTML5开发，游戏升级版本更新会更方便，只要不涉及原生代码的改动，我们都可以在后台安排脚本更新即可，无需用户再去下载安装覆盖等麻烦，也减少了因此而带来的用户流失。&lt;br&gt;3）用HTML5开发的网页游戏跨平台的能力较强，可以运行在PC，平板，手机等所有支持HTML5的浏览器内，这样可以让玩家无论是在电脑还是手机都可以跨平台体验游戏的乐趣，从后台数据看，大部分用户是愿意接受在不同的时段使用不同设备，电脑和手机来体验我们的游戏。&lt;br&gt;4）HTML5开发手机应用和游戏相对来讲会比较安全，由于浏览器的限制，我们是绝对无法读取用户的隐私信息或设置暗扣陷阱。&lt;br&gt;5）虽然HTML5页游有以上的好处，但目前HTML5游戏的市场环境还并不成熟，很多用户还是比较习惯安装app来玩游戏的习惯，所以我们也采用同时推安装包和链接两种方式来尽可能的覆盖我们的用户群，因此webapp的推广方式还是非常灵活的。在HTML5领域，我们已经做到了我们能做到的最好表现。&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/af29082e8c33c85e5a8fbda5fffbb35b_b.jpg&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;480&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic4.zhimg.com/af29082e8c33c85e5a8fbda5fffbb35b_r.jpg&quot;&gt;&lt;br&gt;       我们希望自己只简简单单的做好一款游戏，不断完善，更加吸引用户，更加好玩，而不再关注自己究竟做的是苹果游戏还是安卓游戏究竟是网页游戏还是手机游戏，认真的做一个简单快乐的游戏团队。研发这款大型HTML5页游大概花费了我们两年的时光，从最初的立项到引擎和工具的搭建，眼见她一步步成型，其中的喜悦无法用言语表达。我们选择了HTML5技术作为自己的创业方向，也经历了诸多质疑，迷茫和无奈的时刻，但我们坚信付出总会得到回报，只要满怀希望，热情和汗水就会看到山顶的曙光。在诸多质疑声中百折不挠，在几经绝望中迎接曙光，这样的人生才真正充实。《修仙三国》对于磊友只是一个里程碑，距离我们真正的目标其实还很远，期待自己的H5引擎可以帮助更多的Web开发者在跨平台方面做得更加精彩！&lt;br&gt;&lt;br&gt;       登高，坡顶自有青天；倘若有一朵白云在天边闪耀，那就望云爬坡吧！再次为所有坚持自己梦想而不懈努力的人喝彩！&lt;br&gt;&lt;br&gt;（本文为知乎答复好友提问，同时也欢迎各大媒体自由转载但请注明知乎的出处，谢谢！）</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic2.zhimg.com/604130e2c033631a2c0c135d254c1695_200x112.jpg\" data-rawwidth=\"960\" data-rawheight=\"640\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic2.zhimg.com/604130e2c033631a2c0c135d254c1695_r.jpg\">\n谢谢继新邀请。正好最近我们团队的拙作《修仙三国》正式发布，这款产品的特色在于是首个利用HTML5技术研发的大型角色扮演类网游并且同时在多个平台全面发行，我们自己当然是相信其品质和体验堪为HTML5同类游戏标杆。谢谢继新，以及不少关注和支持我的朋友们…\n\n<a href=\"/question/21508134/answer/18450597\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2013-08-20\" target=\"_blank\" href=\"/question/21508134/answer/18450597\">编辑于 2013-08-20</a></p>\n\n",
    "link": "https://zhihu.com/question/21508134/answer/18450597"
  },
  {
    "question": "\n学习 vue.js，Node.JS 等技术不知道写什么东西？请推荐点稍微复杂点的入门项目。\n",
    "author": "骆也",
    "content": "\n\n<textarea hidden class=\"content\">11-28 更新：&lt;br&gt;&lt;br&gt;最近把项目放到了vps上，虽然之后就没更新过。。但是还是无耻得放一下吧，哈哈。&lt;br&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//goh5.luoye.pw&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;goh5.luoye.pw&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;=========更新分割线========&lt;br&gt;&lt;br&gt;新鲜出炉，先放地址：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/luoye-fe/goh5&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;GitHub - luoye-fe/goh5: visual h5 edit&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;个人开源H5 CMS，类似易企秀、初页，虽然没人家那么牛。。\\(￣▽￣)/&lt;br&gt;&lt;br&gt;数据库：MongoDB&lt;br&gt;后台：NodeJS&lt;br&gt;前台：Vue、Vue-Router、Vuex ..&lt;br&gt;&lt;br&gt;数据库MongoDB，后台全部restful_api，路由由前端控制，Vuex管理应用数据，Gulp+Webpack构建。&lt;br&gt;后台部分自己也是刚起步，代码可能有点粗糙，谅解。&lt;br&gt;NodeJS作后台已经是很多新项目的选择了，简单快捷，并且社区很活跃，大多刚起步时遇到的开发难题，前辈们都踩过，擅用搜索可以很快的用起来。不过大型网站的话。。。还有很远的路啊&lt;br&gt;前台Vue部分，应该还好，而且Vue的文档和API都很友好，学起来主要是思想的转变。&lt;br&gt;项目起步的时候双向绑定用的真心爽，后来越写越复杂，数据哪都能改，一不小心就埋坑，中途上了Vuex，世界清净了。&lt;br&gt;列表页，编辑页，设置页，全部组件化，每个组件对数据的修改必须走Vuex，cms做完的作品落地展示用的Swiper，ejs渲染到页面，没有用前端渲染，也省了很多事。&lt;br&gt;当然，刚完成最基本最基本的功能，比如元素的拖拽，属性编辑，动画等，其它的比如，元素事件，表单，视频，音乐，还有一些操作上体验的优化，键盘控制，也会一步步补。&lt;br&gt;放几张截图。（自己拼的UI...丑勿怪！）&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/4c97afc8536c55704cb869440ed1fa3d_b.png&quot; data-rawwidth=&quot;1917&quot; data-rawheight=&quot;1099&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1917&quot; data-original=&quot;https://pic2.zhimg.com/4c97afc8536c55704cb869440ed1fa3d_r.png&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/c0908d694538f71943bc8e5ef259b435_b.png&quot; data-rawwidth=&quot;1919&quot; data-rawheight=&quot;1095&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1919&quot; data-original=&quot;https://pic2.zhimg.com/c0908d694538f71943bc8e5ef259b435_r.png&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/9fe9f73212007bbcd181d7a88b312ba9_b.png&quot; data-rawwidth=&quot;1919&quot; data-rawheight=&quot;1099&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1919&quot; data-original=&quot;https://pic2.zhimg.com/9fe9f73212007bbcd181d7a88b312ba9_r.png&quot;&gt;有兴趣的小伙伴可以一起来。。。还想RN移植到pad上耍呢。。哈哈，想的有点远</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic2.zhimg.com/4c97afc8536c55704cb869440ed1fa3d_200x112.png\" data-rawwidth=\"1917\" data-rawheight=\"1099\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic2.zhimg.com/4c97afc8536c55704cb869440ed1fa3d_r.png\">\n11-28 更新： 最近把项目放到了vps上，虽然之后就没更新过。。但是还是无耻得放一下吧，哈哈。 <a href=\"//link.zhihu.com/?target=http%3A//goh5.luoye.pw\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">goh5.luoye.pw</span><span class=\"invisible\"></span><i class=\"icon-external\"></i></a> =========更新分割线======== 新鲜出炉，先放地址：<a href=\"//link.zhihu.com/?target=https%3A//github.com/luoye-fe/goh5\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub - luoye-fe/goh5: visual h5 edit<i class=\"icon-external\"></i></a> 个人开源H5 CMS，类似易企秀、初页，虽然没…\n\n<a href=\"/question/38269617/answer/92477692\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-03-27\" target=\"_blank\" href=\"/question/38269617/answer/92477692\">编辑于 2016-11-28</a></p>\n\n",
    "link": "https://zhihu.com/question/38269617/answer/92477692"
  },
  {
    "question": "\n好的 Web 前端年薪会有多少？\n",
    "author": "罗龙浩",
    "content": "\n\n<textarea hidden class=\"content\">2012年行情：&lt;br&gt;&lt;br&gt;做过前端工程师招聘，大概知道上海的行情，只是一个范围，也不一定完全对，呵呵。&lt;br&gt;1. 切图熟练、能写一些JS效果（HTML+CSS+jQuery）：5K~10K+&lt;br&gt;2. 具备第一条，并可以熟练用JS开发各种组件：8K～15K+&lt;br&gt;3. 具备第二条，熟悉1～N个后端语言：13K～30K+&lt;br&gt;4. 具备第三条，对前端架构、性能优化方面有深入了解：20K以上&lt;br&gt;&lt;br&gt;-----------------------------------&lt;br&gt;&lt;br&gt;2016年9月6日追加：&lt;br&gt;&lt;br&gt;现在回头看在上海只要有经验月薪应该不会低于10K，代码写的不错能独立干活很容易超过20K，基础扎实有想法有动手能力超过30K不难。不过呢，在大部分公司薪水达到一定级别之后会遇到天花板，你会发现加薪幅度越来越小跳槽也困难，只有少数高速成长+老板靠谱的公司才有可能不断提高你的待遇，所以找一家靠谱的公司很关键。&lt;br&gt;&lt;br&gt;如果还没找到高速成长+靠谱的公司，可以把简历发给我，支付宝口碑长期招优秀前端。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n2012年行情： 做过前端工程师招聘，大概知道上海的行情，只是一个范围，也不一定完全对，呵呵。 1. 切图熟练、能写一些JS效果（HTML+CSS+jQuery）：5K~10K+ 2. 具备第一条，并可以熟练用JS开发各种组件：8K～15K+ 3. 具备第二条，熟悉1～N个后端语言：13K～…\n\n<a href=\"/question/19723850/answer/14015533\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-03-10\" target=\"_blank\" href=\"/question/19723850/answer/14015533\">编辑于 2016-09-06</a></p>\n\n",
    "link": "https://zhihu.com/question/19723850/answer/14015533"
  },
  {
    "question": "\n如何理解 Facebook 的 flux 应用架构？\n",
    "author": "尤雨溪",
    "content": "\n\n<textarea hidden class=\"content\">我的理解，Flux 的核心就是一个简单的约定：视图层组件不允许直接修改应用状态，只能触发 action。应用的状态必须独立出来放到 store 里面统一管理，通过侦听 action 来执行具体的状态操作。&lt;br&gt;&lt;br&gt;所谓的单向数据流，就是当用户进行操作的时候，会从组件发出一个 action，这个 action 流到 store 里面，触发 store 对状态进行改动，然后 store 又触发组件基于新的状态重新渲染。&lt;br&gt;&lt;br&gt;这样做的好处：&lt;br&gt;&lt;br&gt;1. 视图组件变得很薄，只包含了渲染逻辑和触发 action 这两个职责，即所谓 &quot;dumb components&quot;。&lt;br&gt;&lt;br&gt;2. 要理解一个 store 可能发生的状态变化，只需要看它所注册的 actions 回调就可以。&lt;br&gt;&lt;br&gt;3. 任何状态的变化都必须通过 action 触发，而 action 又必须通过 dispatcher 走，所以整个应用的每一次状态变化都会从同一个地方流过。其实 Flux 和传统 MVC 最不一样的就在这里了。React 在宣传的时候一直强调的一点就是 “理解你的应用的状态变化是很困难的 (managing state changing over time is hard)”，Flux 的意义就在于强制让所有的状态变化都必须留下一笔记录，这样就可以利用这个来做各种 debug 工具、历史回滚等等。&lt;br&gt;&lt;br&gt;市面上各种各样的 Flux 实现那么多，归根结底是因为 1. Flux 这个概念本来就定义松散，具体怎么实现大家各有各的看法；2. 官方实现又臭又长，不好用。&lt;br&gt;&lt;br&gt;最后，Flux 并不一定要配套 React，其思想在传统的 MV* 体系中也完全可以应用。&lt;br&gt;&lt;br&gt;---&lt;br&gt;另，Flux 和 FRP 并没有本质上的联系，倒是 Elm 和 Cycle.js 和 FRP 更有关系一点。不过前段时间 FRP 之父 Conal Elliot 刚说了现在这些新玩意儿都不是真正的 FRP...</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n我的理解，Flux 的核心就是一个简单的约定：视图层组件不允许直接修改应用状态，只能触发 action。应用的状态必须独立出来放到 store 里面统一管理，通过侦听 action 来执行具体的状态操作。 所谓的单向数据流，就是当用户进行操作的时候，会从组件发出一个…\n\n<a href=\"/question/33864532/answer/57667838\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-08-04\" target=\"_blank\" href=\"/question/33864532/answer/57667838\">编辑于 2015-08-04</a></p>\n\n",
    "link": "https://zhihu.com/question/33864532/answer/57667838"
  },
  {
    "question": "\nGitHub 有什么用？放在上面的代码会泄漏吗？\n",
    "author": "诀别云坠月",
    "content": "\n\n<textarea hidden class=\"content\">&lt;img src=&quot;https://pic4.zhimg.com/47a976f5f0c5d94297e1e30adef8a0cf_b.jpg&quot; data-rawheight=&quot;412&quot; data-rawwidth=&quot;600&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;600&quot; data-original=&quot;https://pic4.zhimg.com/47a976f5f0c5d94297e1e30adef8a0cf_r.jpg&quot;&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img src=\"https://pic4.zhimg.com/47a976f5f0c5d94297e1e30adef8a0cf_200x112.jpg\" data-rawheight=\"412\" data-rawwidth=\"600\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic4.zhimg.com/47a976f5f0c5d94297e1e30adef8a0cf_r.jpg\">\n\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/29061672/answer/43202708\">发布于 2015-03-28</a></p>\n\n",
    "link": "https://zhihu.com/question/29061672/answer/43202708"
  },
  {
    "question": "\n为什么国内大部分视频厂商不对PC开放HTML5?\n",
    "author": "僵尸浩",
    "content": "\n\n<textarea hidden class=\"content\">除B站外，国内视频网站创收主要靠广告。&lt;br&gt;&lt;br&gt;而HTML5+javascript是一种把代码逻辑完全暴露出去的技术，会玩的用户总能找到方法绕过广告。&lt;br&gt;&lt;br&gt;既然会对收入产生影响，就基本不可能大规模使用HTML5播放视频。这与技术难度、用户体验什么的无关。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n除B站外，国内视频网站创收主要靠广告。 而HTML5+javascript是一种把代码逻辑完全暴露出去的技术，会玩的用户总能找到方法绕过广告。 既然会对收入产生影响，就基本不可能大规模使用HTML5播放视频。这与技术难度、用户体验什么的无关。\n\n<a href=\"/question/55247875/answer/143565352\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2017-01-30\" target=\"_blank\" href=\"/question/55247875/answer/143565352\">编辑于 2017-01-31</a></p>\n\n",
    "link": "https://zhihu.com/question/55247875/answer/143565352"
  },
  {
    "question": "\n国内有哪些公司在用Vue.js，有什么心得?\n",
    "author": "寇云",
    "content": "\n\n<textarea hidden class=\"content\">异乡好居（&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.uhouzz.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;异乡好居 Uhouzz&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;）手机访问哦。webApp&lt;br&gt;&lt;br&gt;简单的谈谈 历程&amp;amp;心得&lt;br&gt;&lt;ol&gt;&lt;li&gt;当时前端组在岗3个人，要做很多东西，也受制于后端（php） 没办法啊，要解放生产力就得用工具。当时首选 angular和react 我还特意买了国外的教程 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//egghead.io/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;egghead.io - Learn professional JavaScript tools with Tutorial Videos &amp;amp; Training @eggheadio&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 的教程。但是angular太重了，关键两者学习曲线太陡峭了，三个人风险太大。最终投身Vue了。&lt;br&gt;&lt;/li&gt;&lt;li&gt;第一次用的时候，微信公众账号开发。但是把Vue当成一个类jquery库来用（不知道这么说合适不合适）。这个阶段Vue承担的责任就是UI呈现，通过接口处理简单的逻辑，一个页面一个Vue实例。复杂的时候有多个。这个阶段前端的路由还是PHP模板／路由控制。这个阶段用成这个德性，顾及大家会骂我们，这不大材小用了么？而且组件和过滤器都没用，那时候写个过渡动画都好开心啊。而且后来二期需求的时候 开发了机票那么复杂的业务，处理列表排序的时候，那酸爽啊。&lt;/li&gt;&lt;li&gt;小伙伴们尝试了甜头，突然接到上级指示要做webApp。基于第一次的经验，我们参考了青城主题 &lt;a href=&quot;//link.zhihu.com/?target=https%3A//github.com/zerqu/qingcheng&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;zerqu/qingcheng · GitHub&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;  开始用Vue ＋ webpack  主程技术预研两天，搭好架子然后开搞。3个人一周把现在的网站搞完了。而且两个女生Vue还是初学其中一个女生js基础不是很好。足以说明Vue起码简单，文档友好完善。后来队员基于当前技术栈做了个开源项目：&lt;a href=&quot;//link.zhihu.com/?target=https%3A//cnodejs.org/topic/565c4473d0bc14ae279399fe&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;cnodejs.org/topic/565c4&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;473d0bc14ae279399fe&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;  （代码质量有点渣，但是基本实现了）&lt;/li&gt;&lt;li&gt;接下来的事情：升级到1.0以上，在社区推广，帮助别人解决一些问题，开始读源码（一个commit一个commit那样读——笨方法），在团队里做深层的技术分享，以及针对单页面应用的SEO问题。   （由于家人骨折刚手术完 需要照顾家人 在推进上有些拖沓，致歉。）&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;使用心得&lt;br&gt;&lt;ol&gt;&lt;li&gt;从DOM操作的时代没有压力的过渡到了MVVM时代&lt;/li&gt;&lt;li&gt;简单上手在团队很快就安利开了（Vue设计的不错，文档完善友好，官方教程看完就能开撸）&lt;/li&gt;&lt;li&gt;省心 所有的操作关注点都在data上面。开发的时候，写好data 剩下的事情就是 通过异步请求来交互data，UI层绑定事件改变data，在组件间传递data。&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－&lt;br&gt;留好分割线。&lt;br&gt;&lt;br&gt;没想到分割线是留给这些感慨的：不更新回答了，已经离开这家公司了。现在回答这个问题，我和离开那时候一样凄凉的感觉。这个项目没有什么参考价值了，前两天前同事发个活动点进去，随手发现10个以上的bug 好居基本废弃这个项目了。好的UI虽然能给前端加分，但后面乱七八糟了，不知道是怎么维护的。    （哈哈 说的好像是甩锅的既视感） &lt;br&gt;&lt;br&gt;vue 已经遍地开花了，真心开心。我们写那时候还没有什么团队用，遇到问题要卡一天两天 。&lt;br&gt;&lt;br&gt;现在依然写vue，但是写不出当时那种自豪感 和 激情。远程开发中，很开心。不断学习杂七杂八的东西。&lt;br&gt;&lt;br&gt;vue2.0 升级中 欢迎交流噢……</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n异乡好居（<a href=\"//link.zhihu.com/?target=http%3A//www.uhouzz.com\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">异乡好居 Uhouzz<i class=\"icon-external\"></i></a>）手机访问哦。webApp 简单的谈谈 历程&amp;心得 当时前端组在岗3个人，要做很多东西，也受制于后端（php） 没办法啊，要解放生产力就得用工具。当时首选 angular和react 我还特意买了国外的教程 <a href=\"//link.zhihu.com/?target=https%3A//egghead.io/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">egghead.io - Learn professional Jav…<i class=\"icon-external\"></i></a>\n\n<a href=\"/question/38213423/answer/75432936\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-12-06\" target=\"_blank\" href=\"/question/38213423/answer/75432936\">编辑于 2016-10-17</a></p>\n\n",
    "link": "https://zhihu.com/question/38213423/answer/75432936"
  },
  {
    "question": "\n什么样的前端才是大公司要的前端？\n",
    "author": "羡辙",
    "content": "\n\n<textarea hidden class=\"content\">最近此类问题在知乎上看到很多，我觉得可能很多在找工作的同学都走进了一个怪圈，一直想知道我究竟要会哪些工具，懂哪些知识，才能拿到好的 offer。我不敢说这是一个误区，但我想谈谈我的一些看法，可能不尽正确，也算提供另外一种思路吧。&lt;br&gt;&lt;br&gt;同样知道和不知道题主所说的这些知识的人，得到的大公司的评价可能差得非常多。我想说的不是面试的运气，而是如果有人觉得大公司面试面的是你会不会这个工具那个工具，那么这么想的人的认知本身可能就和大公司的期望存在不小的差距。&lt;br&gt;&lt;br&gt;你可以完全不会 less，如果你把 sass 玩得很溜。你可以把 http 状态码背得烂熟于胸，但这未必就给你加分多少，因为完全可能是面试前五分钟现记的。没错，掌握的知识点、会的工具多，总是加分项，但除非你是天才，大多数人的精力总是有限的。所以面试官问这些，并不是担心你进来来不及学某某工具（大公司一般都等得起，前提是你是值得等的人），而是因为结果是很好的展现过程的手段：通过你学习的成果，反推你是怎么学习的，反推你是怎样的人，从而判断是不是符合公司价值观和需要的。&lt;br&gt;&lt;br&gt;所以，除了这些工具，更应该关注的是自己的软实力。可能有人觉得说到软实力就很虚很装很扯，说得好像程序员只有代码是真本事一样。其实会这么想的程序员大多是对自己的软实力没自信罢了。&lt;br&gt;&lt;br&gt;我不打算介绍面试时候包装自己的技巧，并不是因为我小气打算自己留着用…而是这就像谈恋爱一样，为了良好的第一印象可以选择和对方有共鸣的方面去表现，但是切忌为了争取机会而说一些和自己价值观不相符的地方。坑到公司人家大不了开除你，你本来就是几千几万分之一，坑到自己代价多大啊？&lt;br&gt;我聊过的 BAT 几个老大对软实力方面都是非常看重的，事实上如果他们这都不看重，我会怀疑这个团队到底靠不靠谱。尤其是因为作为校招生，就算学校里做过什么真实的项目，跟公司的业务比起来都算不上什么经验的。所以没有实际经验可以看出能力的时候，当然就看潜力了。&lt;br&gt;但这潜力一定是要落到实处的。怎么说呢？比如如果你说“你问的这些库我都知道但都没用过，因为我太忙了。不过我学习能力非常强，我进团队马上就能学会的。”如果我是面试官，我会对这样的答案非常怀疑，我比较偏结果主义者，我会怀疑，如果你真学习能力强，都学了这么久了，怎么也应该做出点什么好玩的东西了吧，至少怎么也应该学到点什么了吧。相比这样的答案，当我不会的时候，我会说明我的时间都花在学什么上面了，有哪些思考，有哪些收获，有哪些可能是和那些我没学到的库相通的或者互补的。我觉得这些背后的思考才是所谓的学习能力的佐证，而不是说“我学习能力很强的，两三天就能学会”就能有的说服力。&lt;br&gt;除了学习能力，还有非常多的软实力，比如沟通能力思考能力等等。这些我就不细说了，因为一两年内似乎很难见效的，或许这更是这些软实力难能可贵的地方吧！就我个人而言，我觉得比较好玩也没想到的事是，十几年主持晚会的经验带给我的锻炼最近非常显著也意外地让我觉得很受用。因为这种多年的锻炼，不仅仅是对口才，更多的是敢于表现自己的勇气，和善于表达自己的方式，以及永远的台上三分钟台下半年工的觉悟。&lt;br&gt;这些软实力可能临时抱佛脚不太现实，但我这里是想提醒那些软实力还不错的同学，别忘记展现自己的这一面。&lt;br&gt;&lt;br&gt;最后，安得 offer 千万发，大庇天下软狗俱欢颜。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n最近此类问题在知乎上看到很多，我觉得可能很多在找工作的同学都走进了一个怪圈，一直想知道我究竟要会哪些工具，懂哪些知识，才能拿到好的 offer。我不敢说这是一个误区，但我想谈谈我的一些看法，可能不尽正确，也算提供另外一种思路吧。 同样知道和不知…\n\n<a href=\"/question/35133714/answer/61570470\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/35133714/answer/61570470\">发布于 2015-08-30</a></p>\n\n",
    "link": "https://zhihu.com/question/35133714/answer/61570470"
  },
  {
    "question": "\n「带 BOM 的 UTF-8」和「无 BOM 的 UTF-8」有什么区别？网页代码一般使用哪个？\n",
    "author": "陈甫鸼",
    "content": "\n\n<textarea hidden class=\"content\">受邀。早知道上得山多终遇老虎，在@梁海 老兄面前耍Unicode总会有这一天的⋯⋯&lt;br&gt;&lt;br&gt;首先，BOM是啥。这个就不解释了，Wikipedia上很详细。&lt;a href=&quot;//link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/Byte_order_mark&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;en.wikipedia.org/wiki/B&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;yte_order_mark&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;。&lt;br&gt;&lt;br&gt;在网页上使用BOM是个错误。BOM设计出来不是用来支持HTML和XML的。要识别文本编码，HTML有charset属性，XML有encoding属性，没必要拉BOM撑场面。虽然理论上BOM可以用来识别UTF-16编码的HTML页面，但实际工程上很少有人这么干。毕竟UTF-16这种编码连ASCII都双字节，实在不适用于做网页。&lt;br&gt;&lt;br&gt;其实说BOM是个坏习惯也不尽然。BOM也是Unicode标准的一部分，有它特定的适用范围。通常BOM是用来标示Unicode纯文本字节流的，用来提供一种方便的方法让文本处理程序识别读入的.txt文件是哪个Unicode编码（UTF-8，UTF-16BE，UTF-16LE）。Windows相对对BOM处理比较好，是因为Windows把Unicode识别代码集成进了API里，主要是CreateFile()。打开文本文件时它会自动识别并剔除BOM。Windows用这个有历史原因，因为它最初脱胎于多代码页的环境。而引入Unicode时Windows的设计者又希望能在用户不注意的情况下同时兼容Unicode和非Unicode（Multiple byte）文本文件，就只能借助这种小trick了。相比之下，Linux这样的系统在多locale的环境中浸染的时间比较短，再加上社区本身也有足够的动力轻装前进（吐槽：微软对兼容性的要求确实是到了非常偏执的地步，任何一点破坏兼容性的做法都不允许，以至于很多时候是自己绑住自己的双手），所以干脆一步到位进入UTF-8。当然中间其实有一段过渡期，比如从最初全UTF-8的GTK+2.0发布到基本上所有GTK开发者都弃用多locale的GTK+1.2，我印象中至少经历了三到四年。&lt;br&gt;&lt;br&gt;BOM不受欢迎主要是在UNIX环境下，因为很多UNIX程序不鸟BOM。主要问题出在UNIX那个所有脚本语言通行的首行#!标示，这东西依赖于shell解析，而很多shell出于兼容的考虑不检测BOM，所以加进BOM时shell会把它解释为某个普通字符输入导致破坏#!标示，这就麻烦了。其实很多现代脚本语言，比如Python，其解释器本身都是能处理BOM的，但是shell卡在这里，没办法，只能躺着也中枪。说起来这也不能怪shell，因为BOM本身违反了一个UNIX设计的常见原则，就是文档中存在的数据必须可见。BOM不能作为可见字符被文本编辑器编辑，就这一条很多UNIX开发者就不满意。&lt;br&gt;&lt;br&gt;顺便说一句，即使脚本语言能处理BOM，随处使用BOM也不是推荐的办法。各个脚本语言对Unicode的处理都有自己的一套，Python的 # -*- coding: utf-8 -*-，Perl的use utf8，都比BOM简单而且可靠。另一个好消息是，即使是必须在Windows和UNIX之间切换的朋友也不会悲催。幸亏在UNIX环境下我们还有VIM这种神器，即使遇到BOM挡道，我们也可以通过 set nobomb; set fileencoding=utf8; w 三条命令解决问题。&lt;br&gt;&lt;br&gt;最后回头想想，似乎也真就只有Windows坚持用BOM了。&lt;br&gt;&lt;br&gt;P.S.：本问题是自己的第150个回答。突然发现自己回答得很少很少⋯⋯&lt;br&gt;P.S. 2：突然想起需要解释一下为什么说VIM去除bomb的操作需要在UNIX下完成。因为VIM在Windows环境下有一个奇怪的bug，总是把UTF-16文件识别成二进制文件，而UNIX（Linux或者Mac都可以）下VIM则无问题。这个问题从VIM 6.8一直跟着我到VIM 7.3。目前尚不清楚这是VIM的bug还是我自己那个.vimrc文件的bug。如有高手解答不胜感激。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n受邀。早知道上得山多终遇老虎，在@梁海 老兄面前耍Unicode总会有这一天的⋯⋯ 首先，BOM是啥。这个就不解释了，Wikipedia上很详细。<a href=\"//link.zhihu.com/?target=http%3A//en.wikipedia.org/wiki/Byte_order_mark\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">en.wikipedia.org/wiki/B</span><span class=\"invisible\">yte_order_mark</span><span class=\"ellipsis\"></span><i class=\"icon-external\"></i></a>。 在网页上使用BOM是个错误。BOM设计出来不是用来支持HTML和XML的。要识别文本编码，HTML有char…\n\n<a href=\"/question/20167122/answer/14199022\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-04-10\" target=\"_blank\" href=\"/question/20167122/answer/14199022\">编辑于 2012-04-10</a></p>\n\n",
    "link": "https://zhihu.com/question/20167122/answer/14199022"
  },
  {
    "question": "\nAngular2与React，前端的未来志向何方？\n",
    "author": "风吹雪",
    "content": "\n\n<textarea hidden class=\"content\">干过几年的前端，并且会在前端这条不归路上继续走下去。。。&lt;br&gt;从开始的ie6风行天下的时刻加入前端这个行业。眼睁睁看着这个行业的风起云涌，最落寞不过是一个个项目由风光无限转到寂寥到无人问津。&lt;br&gt;ie6-8+ firefox 3的时代，jquery+jquery 插件大行其道。那时候面试的时候问的最多一句，jquery的插件有几种写法，面向对象的插件与普通插件的异同。jquery的源码有没有读过。你有没有读过jquery源码？dom操作，api精简，链，deferred，这些思想沉淀的深刻。&lt;br&gt;&lt;br&gt;到大而全的框架开发，比如dojo，extjs，jquery UI，YUI是的，这些动辄几十兆的开发包，掌握一个框架就可以吃一行饭。至今还记得半夜读extjs的源码时的一声声叹息，原来js，前端代码可以这么写。&lt;br&gt;&lt;br&gt;到后来模块化崛起，问的做多的是，seajs，requirejs，amd，cmd，umd，nginx的combo 的各种差异，而这些也是如数家珍一样。&lt;br&gt;&lt;br&gt;html5，webkit，跨终端，css3，sass，less 崛起，bootstrap风靡中国。&lt;br&gt;&lt;br&gt;nodejs携着npm搅起前后端分离，js服务端开发拉开序幕。&lt;br&gt;&lt;br&gt;小而美，函数式，mirojs集锦，undersocre,q等等...一个个前仆后继的在js中诞生。技术变得日新月异。&lt;br&gt;再后来ES5，ES6，ES7相继出台，一方面弥补js在语法上的不足，一方面又像改革的春风吹向前端这个圈子。&lt;br&gt;angular2，reactjs，native，web components。。。&lt;br&gt;web工程化。gulp，grunt，fis。太多太多了。&lt;br&gt;&lt;br&gt;其实这些年走来，看着这些技术有苦涩也有欣慰。这个行业的发展要比以往刀耕火种，没日没夜的切图，围着设计稿打转，写完html，css，写jquery 动效，至少加了新鲜的热辣的元素。&lt;br&gt;&lt;br&gt;我也曾迷茫过，也曾彷徨过，也曾想着换个坑，换个职业，换个人生，看不一样的风景，听不一样的故事。但最后还是留下来了。&lt;br&gt;做技术就是做人做事。迷茫的时候不如去看看这些人是怎么想到这些技术，怎么做出这些成就。看看源码，看看设计。也就明白了很多道理。&lt;br&gt;angularjs 做个内部管理系统，是足够的，也是健全的。比extjs好些。你用了，你就知道了，你不用，永远在门里面看门外的风景，其实也就只有一个门框的视野。机会只给勇于弄脏自己双手的年轻人。&lt;br&gt;&lt;br&gt;祝永远年轻，永远热泪盈眶。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n干过几年的前端，并且会在前端这条不归路上继续走下去。。。 从开始的ie6风行天下的时刻加入前端这个行业。眼睁睁看着这个行业的风起云涌，最落寞不过是一个个项目由风光无限转到寂寥到无人问津。 ie6-8+ firefox 3的时代，jquery+jquery 插件大行其道。那…\n\n<a href=\"/question/38576309/answer/80222070\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-01-06\" target=\"_blank\" href=\"/question/38576309/answer/80222070\">编辑于 2016-01-18</a></p>\n\n",
    "link": "https://zhihu.com/question/38576309/answer/80222070"
  },
  {
    "question": "\n自学前端应该怎么制定循序渐进的学习计划，看书和实践应该怎么分配呢？\n",
    "author": "豪情",
    "content": "\n\n<textarea hidden class=\"content\">既然提到我了，我就露一下面。具体的计划，看我下面这个：&lt;br&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3600308.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;1. web前端开发分享-css,js入门篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3601666.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;2. web前端开发分享-css,js进阶篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3604459.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;3. web前端开发分享-css,js提高篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3607133.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;4. web前端开发分享-css,js工具篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3611394.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;5. web前端开发分享-css,js深化篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3632392.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;6. web前端开发分享-css,js移动篇&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;b&gt;1. 看书流程是这样的&lt;/b&gt;，高程只是其中的一本，还有很多本：&lt;/p&gt;&lt;br&gt;js dom编程艺术(2 version)-&amp;gt;js高级程序设计 (3 version)-&amp;gt; js dom高级程序设计 -&amp;gt; js 语言精粹 -&amp;gt; 精通js -&amp;gt; 编写可维护的js -&amp;gt; 高性能js -&amp;gt; js面向对象编程指南  -&amp;gt; js模式 -&amp;gt; js权威指南(6 version) -&amp;gt; js语言精髓与编程实践&lt;br&gt;&lt;p&gt;js dom编程艺术 : 他只是截取了js中的部分概念进行了介绍，并不完整或深入。&lt;/p&gt;&lt;p&gt;js高级程序设计 : 经典的js基础书，之所为经典是因为系统完善的介绍了js的历史，基础及预测了当下的流行趋势。与犀牛比更测重于实践结合&lt;/p&gt;&lt;p&gt; js dom高级程序设计 : 主要讲如何去写一个框架或库。&lt;/p&gt;&lt;p&gt;js 语言精粹：json作者，道格拉斯写的，主要解析js语言本质或内涵。&lt;/p&gt;&lt;p&gt;精通js：jquery作者写的，浅浅的解析了jquery一些方法的实现，注意是很浅。&lt;/p&gt;&lt;p&gt;编写可维护的js，高性能js：这两本是高程作者尼古拉斯的，出版日期在高程后，深度可想而知。&lt;/p&gt;&lt;p&gt;js面向对象编程指南：主要讲面向对象的一些东西。&lt;/p&gt;&lt;p&gt;js模式： -&amp;gt; js权威指南(6 version)&lt;/p&gt;&lt;br&gt;js模式，这两本是淘宝团队翻译的，模式主要一半讲模式一半讲基础。&lt;br&gt;js权威指南(6 version)，经典犀牛，一半讲基础，一讲是参考。&lt;br&gt;&lt;br&gt;&lt;p&gt;2. &lt;b&gt;看书的目的：&lt;/b&gt;掌握理论知识，梳理js的知识结构，最主要的一点是为了应付面试。面试的主要环节是为了表达自己的想法，只凭简单的理解，是不能完全的表达出一个问题的广度或深度，只有结合了行业中的术语约定或一些习惯叫法，表达出来的意思才更专业。如果不是这样，表达出来的意思别说面试官听不懂，连自己都感觉要么表达不出来，要么表达的不是想要的。但书着重于对理论知识的阐述，缺少实际例子的支持，很难快速的消化。这时候视频可以弥补这个缺陷，而且妙味视频用简单的代码实现一些常见的效果，学习兴趣很快就能被吸引。但是对js的高级特性，个人感觉视频没有达到那个深度。而且js的一些基础的问题，或一个知识的扩充，限于各种条件的限制，可能无法完全表达出来。所以要结合书来补充。&lt;/p&gt;&lt;br&gt;一般学习的心态是：不急不躁，不快不慢。持之以恒，相信自己。&lt;br&gt;另外如果是实习生或者刚进公司有人带你就更好了，他给你布置任务，然后代码回查，有错误帮你指出。这样成长就很快，但是如果没有这样的环境就积累自己，找一个这样的环境，这样的平台也是有门槛的，所以，积累基础，跨越这个门槛。&lt;br&gt;&lt;br&gt;&lt;b&gt;3. 作品&lt;/b&gt;，下面的是我群的高手的一些积累，有空的借鉴一下高手们的学习方式或积累过程：&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//thx.github.io/magix/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Magix - Magix&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//bh-lay.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;小剧客栈_剧中人的个人博客 网页设计师博客 前端工程师 互动设计学习者&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//guoshan.sinaapp.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Introduce of GuoShan&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.cnblogs.com/liyunhua/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;静逸 - 博客园&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.seejs.com&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;百码山庄，看前端，做前端，专注前端！会前端，一切皆有可能...&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.replace5.com/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;坚壳&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.hacke2.cn/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;hacke2's blog&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//qianliwei.com&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;qianliwei.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//hcjp.github.io/work/demo/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Demo&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;以上个人建议仅供参考。&lt;br&gt;&lt;b&gt;如果你还比较孤单，找不到方向，请入群：327388215。&lt;/b&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n既然提到我了，我就露一下面。具体的计划，看我下面这个： <a href=\"//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3600308.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">1. web前端开发分享-css,js入门篇<i class=\"icon-external\"></i></a><a href=\"//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3601666.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2. web前端开发分享-css,js进阶篇<i class=\"icon-external\"></i></a><a href=\"//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3604459.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3. web前端开发分享-css,js提高篇<i class=\"icon-external\"></i></a><a href=\"//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3607133.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">4. web前端开发分享-css,js工具篇<i class=\"icon-external\"></i></a><a href=\"//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3611394.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">5. web前端开发分享-css,js深化篇<i class=\"icon-external\"></i></a><a href=\"//link.zhihu.com/?target=http%3A//www.cnblogs.com/jikey/p/3632392.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">6. web前端开发分享-css,js移…<i class=\"icon-external\"></i></a>\n\n<a href=\"/question/31263616/answer/51512618\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2015-06-16\" target=\"_blank\" href=\"/question/31263616/answer/51512618\">编辑于 2015-06-16</a></p>\n\n",
    "link": "https://zhihu.com/question/31263616/answer/51512618"
  },
  {
    "question": "\n最好用的 JavaScript IDE 或编辑器是哪个？\n",
    "author": "佑界",
    "content": "\n\n<textarea hidden class=\"content\">sublime text，有在使用的朋友赞同我一下</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nsublime text，有在使用的朋友赞同我一下\n\n<a href=\"/question/19606319/answer/15255022\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2012-09-17\" target=\"_blank\" href=\"/question/19606319/answer/15255022\">编辑于 2014-10-14</a></p>\n\n",
    "link": "https://zhihu.com/question/19606319/answer/15255022"
  },
  {
    "question": "\n如果全世界电脑停用flash转用HTML5，可以节省多少能源？\n",
    "author": "可可苏玛",
    "content": "\n\n<textarea hidden class=\"content\">得了吧，HTML5再省电，你们不也在用Chrome</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n得了吧，HTML5再省电，你们不也在用Chrome\n\n<a href=\"/question/24941329/answer/49457980\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/24941329/answer/49457980\">发布于 2015-05-30</a></p>\n\n",
    "link": "https://zhihu.com/question/24941329/answer/49457980"
  },
  {
    "question": "\n没有项目经验的前端应届生，你会怎么面试，怎样才会录用他？\n",
    "author": "小芋头君",
    "content": "\n\n<textarea hidden class=\"content\">前提：没有项目绝对不会录取。&lt;br&gt;&lt;br&gt;但是这个项目不一定是实际的公司项目，可以是个人项目，例如写个编辑器，写一些组件，写一个博客，写一个阅读器，写一个chrome插件，写一个日程管理，写一些普通的单页，写个小游戏。&lt;br&gt;&lt;br&gt;如果没有项目的话，那我只能考你纯技术了，只要你确定 高程 里的所有知识点都能回答上来，或者随手写出漂亮的算法。&lt;br&gt;&lt;br&gt;综上所述是不是还是写项目更简单些呢。。&lt;br&gt;&lt;br&gt;其实我想表达的是，让简历里有项目经验很简单&lt;br&gt;&lt;br&gt;项目不是说看你是否能完成任务，而是通过项目看你的学习能力，思考总结能力，代码思路，这些是决定一个人能不能变的优秀的先决条件。所以看项目实际上是看你的潜力，从这个来反思你需要做什么样的项目，在简历上体现什么内容</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n前提：没有项目绝对不会录取。 但是这个项目不一定是实际的公司项目，可以是个人项目，例如写个编辑器，写一些组件，写一个博客，写一个阅读器，写一个chrome插件，写一个日程管理，写一些普通的单页，写个小游戏。 如果没有项目的话，那我只能考你纯技术了…\n\n<a href=\"/question/53393313/answer/135234801\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-12-10\" target=\"_blank\" href=\"/question/53393313/answer/135234801\">编辑于 2016-12-10</a></p>\n\n",
    "link": "https://zhihu.com/question/53393313/answer/135234801"
  },
  {
    "question": "\nWeb前端面试题面试技巧有哪些？\n",
    "author": "程序源",
    "content": "\n\n<textarea hidden class=\"content\">HTML+CSS&lt;br&gt;\n1.对WEB标准以及W3C的理解与认识&lt;br&gt;\n标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 \n链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容易维 \n护、改版方便，不需要变动页面内容、提供打印版本而不需要复制内容、提高网站易用性；&lt;br&gt;&lt;br&gt;\n2.xhtml和html有什么区别&lt;br&gt;\nHTML是一种基本的WEB网页设计语言，XHTML是一个基于XML的置标语言&lt;br&gt;\n最主要的不同：&lt;br&gt;\nXHTML 元素必须被正确地嵌套。&lt;br&gt;\nXHTML 元素必须被关闭。&lt;br&gt;\n标签名必须用小写字母。&lt;br&gt;\nXHTML 文档必须拥有根元素。&lt;br&gt;&lt;br&gt;\n3.Doctype? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?&lt;br&gt;\n用于声明文档使用那种规范（html/Xhtml）一般为 严格 过度 基于框架的html文档&lt;br&gt;\n加入XMl声明可触发，解析方式更改为IE5.5 拥有IE5.5的bug&lt;br&gt;&lt;br&gt;\n4.行内元素有哪些?块级元素有哪些?CSS的盒模型?&lt;br&gt;\n块级元素：div p h1 h2 h3 h4 form ul&lt;br&gt;\n行内元素: a b br i span input select&lt;br&gt;\nCss盒模型:内容，border ,margin，padding&lt;br&gt;&lt;br&gt;\n5.CSS引入的方式有哪些? link和@import的区别是?&lt;br&gt;\n内联 内嵌 外链 导入&lt;br&gt;\n区别 ：同时加载&lt;br&gt;\n前者无兼容性，后者CSS2.1以下浏览器不支持&lt;br&gt;\nLink 支持使用javascript改变样式，后者不可&lt;br&gt;&lt;br&gt;\n6.CSS选择符有哪些?哪些属性可以继承?优先级算法如何计算?内联和important哪个优先级高?&lt;br&gt;\n标签选择符 类选择符 id选择符&lt;br&gt;\n继承不如指定 Id&amp;gt;class&amp;gt;标签选择&lt;br&gt;\n后者优先级高&lt;br&gt;&lt;br&gt;\n7.前端页面有哪三层构成，分别是什么?作用是什么?&lt;br&gt;\n结构层 Html 表示层 CSS 行为层 js&lt;br&gt;&lt;br&gt;\n8.css的基本语句构成是?&lt;br&gt;\n选择器{属性1:值1;属性2:值2;……}&lt;br&gt;&lt;br&gt;\n9.你做的页面在哪些流览器测试过?这些浏览器的内核分别是什么?&lt;br&gt;\nIe(Ie内核) 火狐（Gecko） 谷歌（webkit） opear(Presto)&lt;br&gt;&lt;br&gt;\n10.写出几种IE6 BUG的解决方法&lt;br&gt;\n1.双边距BUG float引起的 使用display&lt;br&gt;\n2.3像素问题 使用float引起的 使用dislpay:inline -3px&lt;br&gt;\n3.超链接hover 点击后失效 使用正确的书写顺序 link visited hover active&lt;br&gt;\n4.Ie z-index问题 给父级添加position:relative&lt;br&gt;\n5.Png 透明 使用js代码 改&lt;br&gt;\n6.Min-height 最小高度 ！Important 解决’&lt;br&gt;\n7.select 在ie6下遮盖 使用iframe嵌套&lt;br&gt;\n8.为什么没有办法定义1px左右的宽度容器（IE6默认的行高造成的，使用over:hidden,zoom:0.08 line-height:1px）&lt;br&gt;&lt;br&gt;\n11.标签上title与alt属性的区别是什么?&lt;br&gt;\nAlt 当图片不显示是 用文字代表。&lt;br&gt;\nTitle 为该属性提供信息&lt;br&gt;&lt;br&gt;\n12.描述css reset的作用和用途。&lt;br&gt;\nReset重置浏览器的css默认属性 浏览器的品种不同，样式不同，然后重置，让他们统一&lt;br&gt;&lt;br&gt;\n13.解释css sprites，如何使用。&lt;br&gt;\nCss 精灵 把一堆小的图片整合到一张大的图片上，减轻服务器对图片的请求数量&lt;br&gt;&lt;br&gt;\n14.浏览器标准模式和怪异模式之间的区别是什么?&lt;br&gt;\n盒子模型 渲染模式的不同&lt;br&gt;\n使用 window.top.document.compatMode 可显示为什么模式&lt;br&gt;&lt;br&gt;\n15.你如何对网站的文件和资源进行优化?期待的解决方案包括：&lt;br&gt;\n文件合并&lt;br&gt;\n文件最小化/文件压缩&lt;br&gt;\n使用CDN托管&lt;br&gt;\n缓存的使用&lt;br&gt;&lt;br&gt;\n16.什么是语义化的HTML?&lt;br&gt;\n直观的认识标签 对于搜索引擎的抓取有好处&lt;br&gt;&lt;br&gt;\n17.清除浮动的几种方式，各自的优缺点&lt;br&gt;\n1.使用空标签清除浮动 clear:both（理论上能清楚任何标签，，，增加无意义的标签）&lt;br&gt;\n2.使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）&lt;br&gt;\n3.是用afert伪元素清除浮动(用于非IE浏览器)&lt;br&gt;&lt;br&gt;\nJavascript&lt;br&gt;\n1.javascript的typeof返回哪些数据类型&lt;br&gt;\nObject number function boolean underfind&lt;br&gt;&lt;br&gt;\n2.例举3种强制类型转换和2种隐式类型转换?&lt;br&gt;\n强制（parseInt,parseFloat,number）&lt;br&gt;\n隐式（== – ===）&lt;br&gt;&lt;br&gt;\n3.split() join() 的区别&lt;br&gt;\n前者是切割成数组的形式，后者是将数组转换成字符串&lt;br&gt;&lt;br&gt;\n4.数组方法pop() push() unshift() shift()&lt;br&gt;\nPush()尾部添加 pop()尾部删除&lt;br&gt;\nUnshift()头部添加 shift()头部删除&lt;br&gt;&lt;br&gt;\n5.事件绑定和普通事件有什么区别&lt;br&gt;&lt;br&gt;\n6.IE和DOM事件流的区别&lt;br&gt;\n1.执行顺序不一样、&lt;br&gt;\n2.参数不一样&lt;br&gt;\n3.事件加不加on&lt;br&gt;\n4.this指向问题&lt;br&gt;&lt;br&gt;\n7.IE和标准下有哪些兼容性的写法&lt;br&gt;\nVar ev = ev || window.event&lt;br&gt;\ndocument.documentElement.clientWidth || document.body.clientWidth&lt;br&gt;\nVar target = ev.srcElement||ev.target&lt;br&gt;&lt;br&gt;\n8.ajax请求的时候get 和post方式的区别&lt;br&gt;\n一个在url后面 一个放在虚拟载体里面&lt;br&gt;\n有大小限制&lt;br&gt;\n安全问题&lt;br&gt;\n应用不同 一个是论坛等只需要请求的，一个是类似修改密码的&lt;br&gt;&lt;br&gt;\n9.call和apply的区别&lt;br&gt;\nObject.call(this,obj1,obj2,obj3)&lt;br&gt;\nObject.apply(this,arguments)&lt;br&gt;&lt;br&gt;\n10.ajax请求时，如何解释json数据&lt;br&gt;\n使用eval parse 鉴于安全性考虑 使用parse更靠谱&lt;br&gt;\n11.b继承a的方法&lt;br&gt;&lt;br&gt;\n12.写一个获取非行间样式的函数&lt;br&gt;&lt;br&gt;\nfunction getStyle(obj,attr,value)&lt;br&gt;\n{&lt;br&gt;\nif(!value)&lt;br&gt;\n{&lt;br&gt;\nif(obj.currentStyle)&lt;br&gt;\n{&lt;br&gt;\nreturn obj.currentStyle(attr)&lt;br&gt;\n}&lt;br&gt;\nelse&lt;br&gt;\n{&lt;br&gt;\nobj.getComputedStyle(attr,false)&lt;br&gt;\n}&lt;br&gt;\n}&lt;br&gt;\nelse&lt;br&gt;\n{&lt;br&gt;\nobj.style[attr]=value&lt;br&gt;\n}&lt;br&gt;\n}&lt;br&gt;&lt;br&gt;\n13.事件委托是什么&lt;br&gt;\n让利用事件冒泡的原理，让自己的所触发的事件，让他的父元素代替执行！&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//www.webasily.com/%3Fp%3D78&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;webasily.com/?&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;p=78&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 例子可见此链接&lt;br&gt;&lt;br&gt;\n14.闭包是什么，有什么特性，对页面有什么影响&lt;br&gt;\n闭包就是能够读取其他函数内部变量的函数。&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//blog.csdn.net/gaoshanwudi/article/details/7355794&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;深入理解JavaScript的闭包特性 如何给循环中的对象添加事件&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt; 此链接可查看（问这个问题的不是一个公司）&lt;br&gt;&lt;br&gt;\n15.如何阻止事件冒泡和默认事件&lt;br&gt;\ncanceBubble return false&lt;br&gt;&lt;br&gt;\n16.添加 删除 替换 插入到某个接点的方法&lt;br&gt;\nobj.appendChidl()&lt;br&gt;\nobj.innersetBefore&lt;br&gt;\nobj.replaceChild&lt;br&gt;\nobj.removeChild&lt;br&gt;&lt;br&gt;\n17.解释jsonp的原理，以及为什么不是真正的ajax&lt;br&gt;\n动态创建script标签，回调函数&lt;br&gt;\nAjax是页面无刷新请求数据操作&lt;br&gt;&lt;br&gt;\n18.javascript的本地对象，内置对象和宿主对象&lt;br&gt;\n本地对象为array obj regexp等可以new实例化&lt;br&gt;\n内置对象为gload Math 等不可以实例化的&lt;br&gt;\n宿主为浏览器自带的document,window 等&lt;br&gt;&lt;br&gt;\n19.document load 和document ready的区别&lt;br&gt;\nDocument.onload 是在结构和样式加载完才执行js&lt;br&gt;\nDocument.ready原生种没有这个方法，jquery中有 $().ready(function)&lt;br&gt;&lt;br&gt;\n20.”==”和“===”的不同&lt;br&gt;\n前者会自动转换类型&lt;br&gt;\n后者不会&lt;br&gt;&lt;br&gt;\n21.javascript的同源策略&lt;br&gt;\n一段脚本只能读取来自于同一来源的窗口和文档的属性，这里的同一来源指的是主机名、协议和端口号的组合&lt;br&gt;&lt;br&gt;\n22.编写一个数组去重的方法&lt;br&gt;\nfunction oSort(arr)&lt;br&gt;\n{&lt;br&gt;\nvar result ={};&lt;br&gt;\nvar newArr=[];&lt;br&gt;\nfor(var i=0;i&amp;lt;arr.length;i++)&lt;br&gt;\n{&lt;br&gt;\nif(!result[arr])&lt;br&gt;\n{&lt;br&gt;\nnewArr.push(arr)&lt;br&gt;\nresult[arr]=1&lt;br&gt;\n}&lt;br&gt;\n}&lt;br&gt;\nreturn newArr&lt;br&gt;\n}&lt;br&gt;&lt;br&gt;\n·欢迎添加我微信：agoodjob11&lt;br&gt;&lt;a href=&quot;//link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzAwNjA3NDMyOA%3D%3D%26mid%3D409558503%26idx%3D1%26sn%3D7c941b8d7b4aa67174f2f9a378b59d34%23rd&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;邀请你加入群聊，程序源·微吧。&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\nHTML+CSS \n1.对WEB标准以及W3C的理解与认识 \n标签闭合、标签小写、不乱嵌套、提高搜索机器人搜索几率、使用外 \n链css和js脚本、结构行为表现的分离、文件下载与页面速度更快、内容能被更多的用户所访问、内容能被更广泛的设备所访问、更少的代码和组件，容…\n\n<a href=\"/question/41978715/answer/93062925\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" target=\"_blank\" href=\"/question/41978715/answer/93062925\">发布于 2016-03-31</a></p>\n\n",
    "link": "https://zhihu.com/question/41978715/answer/93062925"
  },
  {
    "question": "\n为什么 Node.js 这么火，而同样异步模式 Python 框架 Twisted 却十几年一直不温不火？\n",
    "author": "匿名用户",
    "content": "\n\n<textarea hidden class=\"content\">&lt;p&gt;首先对于排名第一大谈 nodejs 弱爆了，System Engine 才是吊的人做个冷嘲——真正做 nodejs 的如果不熟悉 v8 引擎和 libuv 其实只能是做作外围吧？而熟悉 v8 和 libuv 的哪一个没有扎实的 System Engine 基础（没个七八年的 C/C++ 项目基础能玩转 v8 和 libuv 的那真是少见了）？然后说出什么搞 nodejs 的人搞不清楚 websocket 消耗多少内存这种话你确定打击面没有太大？难道你身边有一些初级的 nodejs 开发人员给你造成了错觉然后你就优越到没边了？&lt;/p&gt;&lt;br&gt;&lt;p&gt;在这种角度就讨论技术，讨论的根本不是技术，而是自己的偏好，自己的圈子和好恶。调侃下可以，但是真的是一点营养都没有。而那些赞同他的人，我只想问你们真的有研究过 nodejs？&lt;/p&gt;&lt;br&gt;&lt;p&gt;分割线下面是之前的回答。&lt;/p&gt;&lt;p&gt;-----------------------------------------------&lt;/p&gt;&lt;br&gt;&lt;p&gt;说 nodejs 只是靠营销的是否太天真了些？当初 nodejs 出来的时候各种 BUG，我简单的测试其大文件传输都会出现各种问题。而同時期的其他阵营早就甩其几条街了。但是为什么却能一直不断发展壮大？难道仅仅靠所谓的营销和忽悠？&lt;br&gt;&lt;br&gt;如果只孤立的去考虑 nodejs 的异步库到底怎样怎样，实在是太片面了，难道 nodejs 里面就只提供了异步网络 IO？&lt;br&gt;&lt;br&gt;事实上，&lt;b&gt;nodejs 是提供了一套通用的异步基础设施，使得你可以基于此构建各种异步 API。&lt;/b&gt;异步网络 IO 只是其上的一个具体应用。而现在问题里提及的 twisted 实际上在这一点上根本不具有与 nodejs 的可比性！&lt;br&gt;&lt;br&gt;我选择 nodejs 的原因很大程度上是因为它是 JavaScript 的，这样一来在前后端我可以用同一种语言完成整个项目，这是极大的一个优势！另外，尽管 nodejs 不是唯一的也不是最早的基于 JavaScript 的服务端方案。但是它是同時期性能 JavaScript 阵营里最佳的。&lt;br&gt;&lt;br&gt;再加上 nodejs 底层的 libuv 设计很简单，非常容易扩展，而且 npm 又那么好用。因此开发效率急速上升。&lt;br&gt;&lt;br&gt;选择 nodejs 到底为什么，其实到了现在，许多人各自有各自的理由。但许多人都是因为他是&lt;b&gt;基于 JavaScript 的低成本&lt;/b&gt;解决方案。&lt;br&gt;&lt;br&gt;考虑 nodejs，不止是考虑它的一小部分 API，而是它带来的各方面的便捷。请不要太片面。&lt;/p&gt;</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n首先对于排名第一大谈 nodejs 弱爆了，System Engine 才是吊的人做个冷嘲——真正做 nodejs 的如果不熟悉 v8 引擎和 libuv 其实只能是做作外围吧？而熟悉 v8 和 libuv 的哪一个没有扎实的 System Engine 基础（没个七八年的 C/C++ 项目基础能玩转 v8 和 lib…\n\n<a href=\"/question/23854296/answer/25945574\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-05-23\" target=\"_blank\" href=\"/question/23854296/answer/25945574\">编辑于 2014-07-14</a></p>\n\n",
    "link": "https://zhihu.com/question/23854296/answer/25945574"
  },
  {
    "question": "\n作为开发者，有必要担心 Vue.js「是个人项目」、「只有一个开发者」的背景吗？\n",
    "author": "鲁小夫",
    "content": "\n\n<textarea hidden class=\"content\">现在 Vue.js 每个月能收到 &amp;lt;del&amp;gt;&lt;i&gt;$7,662&lt;/i&gt;&amp;lt;/del&amp;gt;（更正，是 &lt;b&gt;$6,670&lt;/b&gt;） 捐助哦，&amp;lt;del&amp;gt;&lt;i&gt;5万元&lt;/i&gt;&amp;lt;/del&amp;gt;（更正，是 &lt;b&gt;4.4万元&lt;/b&gt;）人民币！每个月！&lt;br&gt;&lt;br&gt;我倒不担心尤老师跑了，目前来看起码有一点盈余了，离 “资金耗完了” 这个目标还有点远。&lt;br&gt;&lt;br&gt;要是你公司还担心他跑了，很简单啊，猛击下面这个链接，用真金实银去砸死他 ，现在虽然 $2000 的名额被 strikingly 买断了，但 $500 的名额没有限量，快点多注册几个账户去买。&lt;br&gt;&lt;br&gt;&lt;a class=&quot; external&quot; href=&quot;//link.zhihu.com/?target=https%3A//www.patreon.com/evanyou&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;patreon.com/evanyou&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;不要一万，不要八千，不用花几百万雇一支顶级团队来开发自研框架，不用费几年工夫去造一个叫做 KISSES 的轮子，只要 $500 每个月，3300 块钱，相当于劳动市场上最低的工资，不用缴纳社保、公积金，就能让专业、高效的 Vue.js 成为贵公司的坚强后盾。&lt;br&gt;&lt;br&gt;最最超值的是，能让贵公司的 LOGO 登上 Vue.js 的官网哦，带链接的那种。&lt;br&gt;&lt;br&gt;&lt;img data-rawheight=&quot;573&quot; data-rawwidth=&quot;726&quot; src=&quot;https://pic1.zhimg.com/facabf2fe24e3f09a39a9ca76abe3538_b.png&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;726&quot; data-original=&quot;https://pic1.zhimg.com/facabf2fe24e3f09a39a9ca76abe3538_r.png&quot;&gt;&lt;br&gt;=======&lt;br&gt;&lt;br&gt;补充一下，虽然我认为 $500/mo 这个套餐对题主公司会非常有帮助，但要支持 Vue.js ，并不是只有这一种选择，还有 $250/mo 、 $100/mo 、$50/mo 、 $10/mo，或者任意金额的非按月捐赠，都会帮助 Vue.js 成长。&lt;br&gt;&lt;br&gt;或者选择不捐赠，而是简单地使用和宣传 Vue.js ，都是非常有帮助的。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n<img data-rawheight=\"573\" data-rawwidth=\"726\" src=\"https://pic1.zhimg.com/facabf2fe24e3f09a39a9ca76abe3538_200x112.png\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https://pic1.zhimg.com/facabf2fe24e3f09a39a9ca76abe3538_r.png\">\n现在 Vue.js 每个月能收到 &lt;del&gt;<i>$7,662</i>&lt;/del&gt;（更正，是 <b>$6,670</b>） 捐助哦，&lt;del&gt;<i>5万元</i>&lt;/del&gt;（更正，是 <b>4.4万元</b>）人民币！每个月！ 我倒不担心尤老师跑了，目前来看起码有一点盈余了，离 “资金耗完了” 这个目标还有点远。 要是你公司还担心他跑了，很简单…\n\n<a href=\"/question/48238046/answer/109831165\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2016-07-07\" target=\"_blank\" href=\"/question/48238046/answer/109831165\">编辑于 2016-07-08</a></p>\n\n",
    "link": "https://zhihu.com/question/48238046/answer/109831165"
  },
  {
    "question": "\nHBuilder 编辑器有什么故事？\n",
    "author": "an wang",
    "content": "\n\n<textarea hidden class=\"content\">作为主创团队，说下我们的想法。&lt;br&gt;DCloud公司是为HTML5而生的一家创业公司。&lt;br&gt;HTML5要想普及，需要解决很多问题。业内俗称HTML5有“性工能”障碍，因为HTML5的性能、工具、能力都比不过原生。&lt;br&gt;DCloud为此推出了3个产品：HBuilder开发工具、HTML5plus增强浏览器引擎、mui前端框架。&lt;br&gt;HBuilder是所有产品的核心和入口。&lt;br&gt;我们希望把HBuilder打造成最好用的、免费的HTML5开发工具，让程序员可以更爽的开发HTML5应用。&lt;br&gt;因为我们自己也是程序员，我们非常在意写代码爽不爽，所以给HBuilder注入了很多极客气质，代码输入法、代码块、语法提示引擎、无鼠标操作。。。&lt;br&gt;&lt;br&gt;不少人再问登录注册联网的事情。&lt;br&gt;首先从2015年夏天起，HBuilder的新版已经不要求必须联网了，启动后可以点离线使用。&lt;br&gt;然后说说我们为什么要联网。&lt;br&gt;现在是云+端的互联网时代，一个单机工具没有前途，尤其是免费的单机工具更没前途。&lt;br&gt;有了云的支持，开发者可以获得更好的服务和体验。&lt;br&gt;比如云打包，可以让没有mac的开发者开发ios app，比如开发者积分系统，有助于社区的活跃。&lt;br&gt;我们电脑里几乎找不到纯单机工具了，vs、dreamweaver这些工具都已经是云+端的服务模式了。&lt;br&gt;但大家在意登陆问题，本质其实是在意代码安全。&lt;br&gt;HBuilder不会采集用户代码，我们没兴趣、也不敢招惹此类事情。不放心的人尽可以做安全测试。我们绝对没有采集用户代码的行为。&lt;br&gt;最多联网时报个日活数，好给我们的报表上增加日活数量。&lt;br&gt;做免费软件不容易，希望大家支持我们。&lt;br&gt;&lt;br&gt;&lt;br&gt;另外在这里回复太多都重复了，我们的网站上有我们的完整想法，欢迎大家到这里做客：&lt;a href=&quot;//link.zhihu.com/?target=http%3A//ask.dcloud.net.cn/docs&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;ask.dcloud.net.cn/docs&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;i class=&quot;icon-external&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;也欢迎大家提供好的建议，让我们程序员拥有更顺手的工具。</textarea>\n\n\n<div class=\"zh-summary summary clearfix\">\n\n作为主创团队，说下我们的想法。 DCloud公司是为HTML5而生的一家创业公司。 HTML5要想普及，需要解决很多问题。业内俗称HTML5有“性工能”障碍，因为HTML5的性能、工具、能力都比不过原生。 DCloud为此推出了3个产品：HBuilder开发工具、HTML5plus增强浏览…\n\n<a href=\"/question/22175050/answer/34140512\" class=\"toggle-expand\">显示全部</a>\n\n</div>\n\n\n\n<p class=\"visible-expanded\"><a itemprop=\"url\" class=\"answer-date-link meta-item\" data-tooltip=\"s$t$发布于 2014-11-28\" target=\"_blank\" href=\"/question/22175050/answer/34140512\">编辑于 2015-12-19</a></p>\n\n",
    "link": "https://zhihu.com/question/22175050/answer/34140512"
  }
]